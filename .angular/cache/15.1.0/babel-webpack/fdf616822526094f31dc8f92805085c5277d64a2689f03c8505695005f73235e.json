{"ast":null,"code":"import { InjectionToken } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MOBILE_CONFIG_ERROR } from '@fundamental-ngx/cdk/utils';\nconst MOBILE_MODE_CONFIG = new InjectionToken('Provides configuration for mobile control');\nvar MobileModeControl = /*#__PURE__*/(() => {\n  (function (MobileModeControl) {\n    MobileModeControl[\"MENU\"] = \"MENU\";\n    MobileModeControl[\"SELECT\"] = \"SELECT\";\n    MobileModeControl[\"POPOVER\"] = \"POPOVER\";\n    MobileModeControl[\"COMBOBOX\"] = \"COMBOBOX\";\n    MobileModeControl[\"MULTI_INPUT\"] = \"MULTI_INPUT\";\n    MobileModeControl[\"MULTI_COMBOBOX\"] = \"MULTI_COMBOBOX\";\n    MobileModeControl[\"SEARCH_FIELD\"] = \"SEARCH_FIELD\";\n  })(MobileModeControl || (MobileModeControl = {}));\n  return MobileModeControl;\n})();\nclass MobileModeBase {\n  /** @hidden */\n  constructor(_elementRef, _dialogService, _component, target, _mobileModes) {\n    this._elementRef = _elementRef;\n    this._dialogService = _dialogService;\n    this._component = _component;\n    this.target = target;\n    this._mobileModes = _mobileModes;\n    /** @hidden */\n    this._onDestroy$ = new Subject();\n    this._mobileModes = this._mobileModes || [];\n    this.mobileConfig = this._getMobileModeConfig();\n    this.dialogConfig = this.mobileConfig.dialogConfig;\n  }\n  /** @hidden */\n  onDestroy() {\n    this._onDestroy$.next();\n    this._onDestroy$.complete();\n  }\n  /** @hidden */\n  _getMobileModeConfig() {\n    const injectedConfig = this._mobileModes.find(mode => mode.target === this.target);\n    if (injectedConfig || this._component.mobileConfig) {\n      return injectedConfig ? this._mergeConfigs(injectedConfig.config || {}, this._component.mobileConfig || {}) : this._component.mobileConfig;\n    } else {\n      throw new Error(MOBILE_CONFIG_ERROR);\n    }\n  }\n  /** @hidden New mobile mode config as a merge of config1 and config2. */\n  _mergeConfigs(config1, config2) {\n    return {\n      ...config1,\n      ...config2,\n      dialogConfig: {\n        ...(config1.dialogConfig && config1.dialogConfig),\n        ...(config2.dialogConfig && config2.dialogConfig)\n      }\n    };\n  }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MOBILE_MODE_CONFIG, MobileModeBase, MobileModeControl };\n//# sourceMappingURL=fundamental-ngx-core-mobile-mode.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}