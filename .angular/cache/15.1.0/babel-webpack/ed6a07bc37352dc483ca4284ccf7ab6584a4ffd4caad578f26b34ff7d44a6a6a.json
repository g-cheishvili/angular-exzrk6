{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Type, TemplateRef, ViewContainerRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, ViewChild, Input, Output, HostListener, HostBinding, Injectable, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport * as i1 from '@fundamental-ngx/cdk/utils';\nimport { AbstractFdNgxClass, DynamicComponentService } from '@fundamental-ngx/cdk/utils';\nimport { Subject } from 'rxjs';\nimport * as i4 from '@fundamental-ngx/core/button';\nimport { ButtonModule } from '@fundamental-ngx/core/button';\nimport * as i5 from '@fundamental-ngx/core/content-density';\n\n/**\n * @deprecated\n * Alert component is depricated since version 0.16.0\n * Message Strip component should be used instead.\n */\nconst _c0 = [\"container\"];\nfunction AlertComponent_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function AlertComponent_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.dismiss(undefined, true));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"aria-controls\", ctx_r0.id)(\"aria-label\", ctx_r0.dismissLabel);\n  }\n}\nconst _c1 = [\"*\"];\nconst alertFadeNgIf = trigger('fadeAlertNgIf', [transition(':enter', [style({\n  opacity: 0\n}), animate('250ms ease-in-out', style({\n  opacity: 1\n}))]), transition(':leave', [style({\n  opacity: 1,\n  marginTop: '*',\n  paddingTop: '*',\n  paddingBottom: '*',\n  height: '*',\n  overflow: 'hidden'\n}), animate('400ms ease-in-out', style({\n  opacity: 0,\n  marginTop: 0,\n  paddingTop: 0,\n  paddingBottom: 0,\n  height: 0,\n  overflow: 'hidden'\n}))])]);\nconst alertContainerNgIf = trigger('alertContainerNgIf', [transition(':leave', [style({\n  opacity: 1\n}), animate('400ms ease-in-out', style({\n  opacity: 0\n}))])]);\n\n/**\n * @deprecated\n * Alert component is depricated since version 0.16.0\n * Message Strip component should be used instead.\n *\n * Reference to an alert component generated via the AlertService.\n * It can be injected into the content component in the same way a service would be injected.\n * For a template, add let-alert to your ng-template tag. Now using *alert* in the template refers to this class.\n */\nclass AlertRef {\n  constructor() {\n    /** @hidden */\n    this._afterDismissed = new Subject();\n    /** Observable that is triggered when the alert is dismissed. */\n    this.afterDismissed = this._afterDismissed.asObservable();\n  }\n  /**\n   * Dismisses the alert.\n   *\n   * @param reason Data passed back to the calling component through the AfterDismissed observable.\n   */\n  dismiss(reason) {\n    this._afterDismissed.next(reason);\n  }\n}\n\n/**\n * @deprecated\n * Alert component is depricated since version 0.16.0\n * Message Strip component should be used instead.\n *\n * Configuration for opening an alert with the AlertService.\n */\nclass AlertConfig {\n  constructor() {\n    /** Whether the alert is dismissible. */\n    this.dismissible = true;\n    /** Width of the alert. */\n    this.width = '33vw';\n    /** Minimum width of the alert. */\n    this.minWidth = '300px';\n    /** Duration of time *in milliseconds* that the alert will be visible. Set to -1 for indefinite. */\n    this.duration = 10000;\n    /** Whether the alert should stay open if the mouse is hovering over it. */\n    this.mousePersist = false;\n    /** The container that the Alert is appended to. By default, it is appended to the body. */\n    this.container = 'body';\n  }\n}\nlet alertUniqueId = 0;\n/**\n * @deprecated\n * Alert component is depricated since version 0.16.0\n * Message Strip component should be used instead.\n *\n * The component that represents an alert. It can be only be used inline.\n * If the AlertService is used, this component is auto-generated.\n */\nlet AlertComponent = /*#__PURE__*/(() => {\n  class AlertComponent extends AbstractFdNgxClass {\n    /** @hidden */\n    constructor(elRef, cdRef, componentFactoryResolver, ngZone, alertConfig, alertRef) {\n      super(elRef);\n      this.elRef = elRef;\n      this.cdRef = cdRef;\n      this.componentFactoryResolver = componentFactoryResolver;\n      this.ngZone = ngZone;\n      this.alertConfig = alertConfig;\n      this.alertRef = alertRef;\n      /** Whether the alert is dismissible. */\n      this.dismissible = true;\n      /** Id for the alert component. If omitted, a unique one is generated. */\n      this.id = 'fd-alert-' + alertUniqueId++;\n      /** Duration of time *in milliseconds* that the alert will be visible. Set to -1 for indefinite. */\n      this.duration = 10000;\n      /** Whether the alert should stay open if the mouse is hovering over it. */\n      this.mousePersist = false;\n      /** Aria label for the dismiss button. */\n      this.dismissLabel = 'Dismiss';\n      /** Event fired when the alert is dismissed. */\n      // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n      this.onDismiss = new EventEmitter();\n      /** @hidden */\n      this.mouseInAlert = false;\n      /** @hidden */\n      this.childContent = undefined;\n      this._setAlertConfig(alertConfig);\n      this._setProperties();\n    }\n    /** @hidden */\n    ngOnInit() {\n      if (this.alertRef) {\n        this.open();\n      }\n      this._setProperties();\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      if (this.childContent) {\n        if (this.childContent instanceof Type) {\n          this.loadFromComponent(this.childContent);\n        } else if (this.childContent instanceof TemplateRef) {\n          this.loadFromTemplate(this.childContent);\n        } else {\n          this.loadFromString(this.childContent);\n        }\n        this.cdRef.detectChanges();\n      }\n    }\n    /**\n     * Dismisses the alert. If the alert was generated via the AlertService, it is removed from the DOM.\n     * Otherwise, it sets the display value to none. Fires the onDismiss event.\n     *\n     * @param manualDismiss Set to true to skip the dismiss animation.\n     * @param reason Data to pass back to the calling component. Only usable if alert is opened using the Service.\n     *\n     */\n    dismiss(reason, manualDismiss = false) {\n      if (manualDismiss) {\n        this.elRef.nativeElement.classList.add('fd-has-display-none');\n        this.elRef.nativeElement.classList.remove('fd-has-display-block');\n      }\n      if (this.alertRef) {\n        this.alertRef.dismiss(reason);\n      } else {\n        this.elRef.nativeElement.classList.add('fd-has-display-none');\n        this.elRef.nativeElement.classList.remove('fd-has-display-block');\n      }\n      this.onDismiss.emit();\n    }\n    /**\n     * Opens the alert.\n     */\n    open() {\n      if (!this.alertRef) {\n        if (this.elRef.nativeElement.style.display === 'block') {\n          return;\n        }\n        this.elRef.nativeElement.classList.remove('fd-has-display-none');\n        this.elRef.nativeElement.classList.add('fd-has-display-block');\n      }\n      if (this.duration >= 0) {\n        this.ngZone.runOutsideAngular(() => {\n          setTimeout(() => {\n            if (this.mousePersist) {\n              const wait = () => {\n                if (this.mouseInAlert === true) {\n                  setTimeout(wait, 500);\n                } else {\n                  this.ngZone.run(() => this.dismiss());\n                }\n              };\n              wait();\n            } else {\n              this.ngZone.run(() => this.dismiss());\n            }\n          }, this.duration);\n        });\n      }\n    }\n    /** @hidden */\n    handleAlertMouseEvent(event) {\n      if (event.type === 'mouseenter') {\n        this.mouseInAlert = true;\n      } else if (event.type === 'mouseleave') {\n        this.mouseInAlert = false;\n      }\n    }\n    /** @hidden */\n    _setProperties() {\n      this._addClassToElement('fd-alert');\n      if (this.type) {\n        this._addClassToElement('fd-alert--' + this.type);\n      }\n      if (this.dismissible) {\n        this._addClassToElement('fd-alert--dismissible');\n      }\n    }\n    /** @hidden */\n    loadFromTemplate(template) {\n      const context = {\n        $implicit: this.alertRef\n      };\n      this.componentRef = this.containerRef.createEmbeddedView(template, context);\n    }\n    /** @hidden */\n    loadFromComponent(componentType) {\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n      this.containerRef.clear();\n      this.componentRef = this.containerRef.createComponent(componentFactory);\n    }\n    /** @hidden */\n    loadFromString(contentString) {\n      this.containerRef.clear();\n      this.message = contentString;\n    }\n    /** @hidden */\n    _setAlertConfig(alertConfig) {\n      Object.keys(alertConfig || {}).filter(key => key !== 'data' && key !== 'container').forEach(key => this[key] = alertConfig[key]);\n    }\n  }\n  AlertComponent.ɵfac = function AlertComponent_Factory(t) {\n    return new (t || AlertComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(AlertConfig, 8), i0.ɵɵdirectiveInject(AlertRef, 8));\n  };\n  AlertComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AlertComponent,\n    selectors: [[\"fd-alert\"]],\n    viewQuery: function AlertComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5, ViewContainerRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"alert\"],\n    hostVars: 8,\n    hostBindings: function AlertComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mouseenter\", function AlertComponent_mouseenter_HostBindingHandler($event) {\n          return ctx.handleAlertMouseEvent($event);\n        })(\"mouseleave\", function AlertComponent_mouseleave_HostBindingHandler($event) {\n          return ctx.handleAlertMouseEvent($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-label\", ctx.ariaLabel)(\"id\", ctx.id);\n        i0.ɵɵsyntheticHostProperty(\"@fadeAlertNgIf\", undefined);\n        i0.ɵɵstyleProp(\"width\", ctx.width)(\"min-width\", ctx.minWidth);\n      }\n    },\n    inputs: {\n      dismissible: \"dismissible\",\n      type: \"type\",\n      id: \"id\",\n      duration: \"duration\",\n      mousePersist: \"mousePersist\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      ariaLabel: \"ariaLabel\",\n      dismissLabel: \"dismissLabel\",\n      width: \"width\",\n      minWidth: \"minWidth\",\n      message: \"message\"\n    },\n    outputs: {\n      onDismiss: \"onDismiss\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 6,\n    vars: 2,\n    consts: [[\"class\", \"fd-alert__close\", \"fd-button\", \"\", \"glyph\", \"decline\", \"fdCompact\", \"\", \"fdType\", \"transparent\", 3, \"click\", 4, \"ngIf\"], [1, \"fd-alert__text\"], [\"container\", \"\"], [\"fd-button\", \"\", \"glyph\", \"decline\", \"fdCompact\", \"\", \"fdType\", \"transparent\", 1, \"fd-alert__close\", 3, \"click\"]],\n    template: function AlertComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, AlertComponent_button_0_Template, 1, 2, \"button\", 0);\n        i0.ɵɵelementStart(1, \"p\", 1);\n        i0.ɵɵelementContainerStart(2, null, 2);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵprojection(5);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.dismissible);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.message);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ButtonComponent, i5.ContentDensityDirective],\n    styles: [\"/*!\\n * Fundamental Library Styles v0.28.3\\n * Copyright (c) 2023 SAP SE or an SAP affiliate company.\\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/main/LICENSE)\\n *//*!\\n.fd-alert+(--information, --success, --warning, --error, --no-icon)\\n    .fd-alert__close\\n*/.fd-alert{-webkit-box-sizing:border-box;align-items:center;background-color:var(--sapNeutralBackground);border:1px solid;border-color:var(--sapNeutralBorderColor);border-radius:.25rem;box-sizing:border-box;color:var(--sapTextColor);display:flex;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;min-height:2rem;padding:.4375rem 1rem;position:relative}.fd-alert:after,.fd-alert:before{box-sizing:inherit;font-size:inherit}.fd-alert .sap-icon--message-error,.fd-alert .sap-icon--message-information,.fd-alert .sap-icon--message-success,.fd-alert .sap-icon--message-warning{display:none}.fd-alert__close{position:absolute;right:.125rem;top:.125rem}.fd-alert__close:before{content:\\\"\\\\e03e\\\";font-family:SAP-icons;text-align:center;text-decoration:inherit;text-rendering:optimizeLegibility;text-transform:none}.fd-alert__close[dir=rtl],[dir=rtl] .fd-alert__close{left:.125rem;right:auto}.fd-alert--dismissible{padding-right:2.5rem}.fd-alert--dismissible[dir=rtl],[dir=rtl] .fd-alert--dismissible{padding-left:2.5rem;padding-right:1rem}.fd-alert--error,.fd-alert--information,.fd-alert--success,.fd-alert--warning{padding-left:2.5rem}.fd-alert--error:after,.fd-alert--error:before,.fd-alert--information:after,.fd-alert--information:before,.fd-alert--success:after,.fd-alert--success:before,.fd-alert--warning:after,.fd-alert--warning:before{left:0;line-height:1rem;position:absolute;top:.4375rem;width:2.5rem}.fd-alert--error[dir=rtl],.fd-alert--information[dir=rtl],.fd-alert--success[dir=rtl],.fd-alert--warning[dir=rtl],[dir=rtl] .fd-alert--error,[dir=rtl] .fd-alert--information,[dir=rtl] .fd-alert--success,[dir=rtl] .fd-alert--warning{padding-left:1rem;padding-right:2.5rem}.fd-alert--error[dir=rtl]:after,.fd-alert--error[dir=rtl]:before,.fd-alert--information[dir=rtl]:after,.fd-alert--information[dir=rtl]:before,.fd-alert--success[dir=rtl]:after,.fd-alert--success[dir=rtl]:before,.fd-alert--warning[dir=rtl]:after,.fd-alert--warning[dir=rtl]:before,[dir=rtl] .fd-alert--error:after,[dir=rtl] .fd-alert--error:before,[dir=rtl] .fd-alert--information:after,[dir=rtl] .fd-alert--information:before,[dir=rtl] .fd-alert--success:after,[dir=rtl] .fd-alert--success:before,[dir=rtl] .fd-alert--warning:after,[dir=rtl] .fd-alert--warning:before{left:auto;right:0}.fd-alert--error.fd-alert--dismissible,.fd-alert--information.fd-alert--dismissible,.fd-alert--success.fd-alert--dismissible,.fd-alert--warning.fd-alert--dismissible{padding-right:2.5rem}.fd-alert--error.fd-alert--dismissible[dir=rtl],.fd-alert--information.fd-alert--dismissible[dir=rtl],.fd-alert--success.fd-alert--dismissible[dir=rtl],.fd-alert--warning.fd-alert--dismissible[dir=rtl],[dir=rtl] .fd-alert--error.fd-alert--dismissible,[dir=rtl] .fd-alert--information.fd-alert--dismissible,[dir=rtl] .fd-alert--success.fd-alert--dismissible,[dir=rtl] .fd-alert--warning.fd-alert--dismissible{padding-left:2.5rem}.fd-alert--error[dir=rtl]:after,.fd-alert--information[dir=rtl]:after,.fd-alert--success[dir=rtl]:after,.fd-alert--warning[dir=rtl]:after,[dir=rtl] .fd-alert--error:after,[dir=rtl] .fd-alert--information:after,[dir=rtl] .fd-alert--success:after,[dir=rtl] .fd-alert--warning:after{font-family:SAP-icons;position:absolute;right:0;text-align:center;text-decoration:inherit;text-rendering:optimizeLegibility;text-transform:none}.fd-alert--warning{background-color:var(--sapWarningBackground);border-color:var(--sapWarningBorderColor)}.fd-alert--warning:after,.fd-alert--warning:before{color:var(--sapWarningBorderColor)}.fd-alert--warning:before{content:\\\"\\\\e201\\\"}.fd-alert--warning:before,.fd-alert--warning[dir=rtl]:after,[dir=rtl] .fd-alert--warning:after{font-family:SAP-icons;text-align:center;text-decoration:inherit;text-rendering:optimizeLegibility;text-transform:none}.fd-alert--warning[dir=rtl]:after,[dir=rtl] .fd-alert--warning:after{content:\\\"\\\\e201\\\"}.fd-alert--error{background-color:var(--sapErrorBackground);border-color:var(--sapErrorBorderColor)}.fd-alert--error:after,.fd-alert--error:before{color:var(--sapErrorBorderColor)}.fd-alert--error:before{content:\\\"\\\\e0b1\\\"}.fd-alert--error:before,.fd-alert--error[dir=rtl]:after,[dir=rtl] .fd-alert--error:after{font-family:SAP-icons;text-align:center;text-decoration:inherit;text-rendering:optimizeLegibility;text-transform:none}.fd-alert--error[dir=rtl]:after,[dir=rtl] .fd-alert--error:after{content:\\\"\\\\e0b1\\\"}.fd-alert--success{background-color:var(--sapSuccessBackground);border-color:var(--sapSuccessBorderColor)}.fd-alert--success:after,.fd-alert--success:before{color:var(--sapSuccessBorderColor)}.fd-alert--success:before{content:\\\"\\\\e203\\\"}.fd-alert--success:before,.fd-alert--success[dir=rtl]:after,[dir=rtl] .fd-alert--success:after{font-family:SAP-icons;text-align:center;text-decoration:inherit;text-rendering:optimizeLegibility;text-transform:none}.fd-alert--success[dir=rtl]:after,[dir=rtl] .fd-alert--success:after{content:\\\"\\\\e203\\\"}.fd-alert--information{background-color:var(--sapInformationBackground);border-color:var(--sapInformationBorderColor)}.fd-alert--information:after,.fd-alert--information:before{color:var(--sapInformationBorderColor)}.fd-alert--information:before{content:\\\"\\\\e202\\\"}.fd-alert--information:before,.fd-alert--information[dir=rtl]:after,[dir=rtl] .fd-alert--information:after{font-family:SAP-icons;text-align:center;text-decoration:inherit;text-rendering:optimizeLegibility;text-transform:none}.fd-alert--information[dir=rtl]:after,[dir=rtl] .fd-alert--information:after{content:\\\"\\\\e202\\\"}.fd-alert--no-icon{padding-left:1rem}.fd-alert--no-icon:before{display:none}.fd-alert--no-icon[dir=rtl],[dir=rtl] .fd-alert--no-icon{padding-right:1rem}.fd-alert--no-icon[dir=rtl]:after,[dir=rtl] .fd-alert--no-icon:after{display:none}.fd-alert__text{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);line-height:1rem;margin:0;padding:0}.fd-alert__text:after,.fd-alert__text:before{box-sizing:inherit;font-size:inherit}.fd-alert{display:block}.fd-alert__close:before,.fd-alert__close:after{content:none}.fd-has-display-block{display:block}.fd-has-display-none{display:none}\\n\"],\n    encapsulation: 2,\n    data: {\n      animation: [alertFadeNgIf]\n    },\n    changeDetection: 0\n  });\n  return AlertComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated\n * Alert component is depricated since version 0.16.0\n * Message Strip component should be used instead.\n */\nlet AlertContainerComponent = /*#__PURE__*/(() => {\n  class AlertContainerComponent {\n    constructor() {\n      /** @hidden */\n      this.fdAlertContainerClass = true;\n    }\n  }\n  AlertContainerComponent.ɵfac = function AlertContainerComponent_Factory(t) {\n    return new (t || AlertContainerComponent)();\n  };\n  AlertContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AlertContainerComponent,\n    selectors: [[\"fd-alert-container\"]],\n    hostVars: 3,\n    hostBindings: function AlertContainerComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵsyntheticHostProperty(\"@alertContainerNgIf\", undefined);\n        i0.ɵɵclassProp(\"fd-alert-container\", ctx.fdAlertContainerClass);\n      }\n    },\n    decls: 0,\n    vars: 0,\n    template: function AlertContainerComponent_Template(rf, ctx) {},\n    styles: [\".fd-alert-container{position:fixed;display:flex;flex-direction:column;z-index:5000;align-items:center;top:0;right:50%;left:50%}\\n\"],\n    encapsulation: 2,\n    data: {\n      animation: [alertContainerNgIf]\n    },\n    changeDetection: 0\n  });\n  return AlertContainerComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated\n * Alert component is depricated since version 0.16.0\n * Message Strip component should be used instead.\n *\n * Service used to dynamically generate an alert as an overlay.\n */\nlet AlertService = /*#__PURE__*/(() => {\n  class AlertService {\n    /** @hidden */\n    constructor(dynamicComponentService) {\n      this.dynamicComponentService = dynamicComponentService;\n      /** @hidden */\n      this.alerts = [];\n    }\n    /**\n     * Returns true if there are some alerts currently open. False otherwise.\n     */\n    hasOpenAlerts() {\n      return this.alerts && this.alerts.length > 0;\n    }\n    /**\n     * Opens an alert component with a content of type TemplateRef, Component Type or String.\n     * @param content Content of the alert component.\n     * @param alertConfig Configuration of the alert component.\n     */\n    open(content, alertConfig = new AlertConfig()) {\n      // Get default values from alert model\n      alertConfig = Object.assign(new AlertConfig(), alertConfig);\n      // Instantiate alert ref service\n      const service = new AlertRef();\n      service.data = alertConfig.data;\n      // If empty or undefined alert array, create container\n      if (!this.alerts || this.alerts.length === 0 || !this.alertContainerRef) {\n        this.alertContainerRef = this.dynamicComponentService.createDynamicComponent(content, AlertContainerComponent, alertConfig);\n      }\n      // Define Container to put backdrop and component to container\n      alertConfig.container = this.alertContainerRef.location.nativeElement;\n      const component = this.dynamicComponentService.createDynamicComponent(content, AlertComponent, alertConfig, {\n        services: [service, alertConfig]\n      });\n      component.location.nativeElement.style.marginTop = '10px';\n      // Subscription to close alert from ref\n      const refSub = service.afterDismissed.subscribe(() => {\n        this.destroyAlertComponent(component);\n        refSub.unsubscribe();\n      });\n      // Log new component\n      this.alerts.push(component);\n      return service;\n    }\n    /**\n     * Dismisses all service-opened alerts.\n     */\n    dismissAll() {\n      this.alerts.forEach(ref => {\n        this.destroyAlertComponent(ref);\n      });\n    }\n    /** @hidden */\n    destroyAlertComponent(alert) {\n      this.alerts = this.alerts.filter(item => item && item !== alert);\n      this.dynamicComponentService.destroyComponent(alert);\n      if (this.alertContainerRef && (!this.alerts || this.alerts.length === 0)) {\n        this.destroyAlertContainer();\n      }\n    }\n    /** @hidden */\n    destroyAlertContainer() {\n      this.alertContainerRef && this.dynamicComponentService.destroyComponent(this.alertContainerRef);\n      this.alertContainerRef = undefined;\n    }\n  }\n  AlertService.ɵfac = function AlertService_Factory(t) {\n    return new (t || AlertService)(i0.ɵɵinject(i1.DynamicComponentService));\n  };\n  AlertService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AlertService,\n    factory: AlertService.ɵfac\n  });\n  return AlertService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated\n * Alert component is depricated since version 0.16.0\n * Message Strip component should be used instead.\n */\nlet AlertModule = /*#__PURE__*/(() => {\n  class AlertModule {}\n  AlertModule.ɵfac = function AlertModule_Factory(t) {\n    return new (t || AlertModule)();\n  };\n  AlertModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AlertModule\n  });\n  AlertModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [AlertService, DynamicComponentService],\n    imports: [CommonModule, ButtonModule]\n  });\n  return AlertModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AlertComponent, AlertConfig, AlertContainerComponent, AlertModule, AlertRef, AlertService, alertContainerNgIf, alertFadeNgIf };\n//# sourceMappingURL=fundamental-ngx-core-alert.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}