{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Directive, ContentChild, ContentChildren, Component, Optional, Inject, isDevMode, HostBinding, HostListener, Input, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, Type, TemplateRef, Injector, NgModule } from '@angular/core';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i7 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i6 from '@angular/cdk/drag-drop';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ButtonModule } from '@fundamental-ngx/core/button';\nimport * as i1$1 from '@fundamental-ngx/core/icon';\nimport { IconModule } from '@fundamental-ngx/core/icon';\nimport * as i3$2 from '@fundamental-ngx/core/title';\nimport { TitleToken, TitleModule } from '@fundamental-ngx/core/title';\nimport * as i2 from '@fundamental-ngx/core/bar';\nimport { FD_BUTTON_BAR_COMPONENT, BarElementDirective, BarModule } from '@fundamental-ngx/core/bar';\nimport * as i5 from '@fundamental-ngx/core/busy-indicator';\nimport { BusyIndicatorModule } from '@fundamental-ngx/core/busy-indicator';\nimport * as i4$1 from '@fundamental-ngx/cdk/utils';\nimport { TemplateDirective, KeyUtil, applyCssClass, DynamicComponentContainer, DestroyedService, RtlService, ResizeModule, TemplateModule, InitialFocusModule, DynamicComponentService } from '@fundamental-ngx/cdk/utils';\nimport { __decorate, __metadata } from 'tslib';\nimport * as i1 from '@angular/router';\nimport { NavigationStart } from '@angular/router';\nimport * as i3 from '@fundamental-ngx/core/content-density';\nimport { contentDensityObserverProviders } from '@fundamental-ngx/core/content-density';\nimport { Subject, BehaviorSubject, Subscription, fromEvent, takeUntil } from 'rxjs';\nimport * as i3$1 from '@fundamental-ngx/core/scrollbar';\nimport { ScrollbarDirective, ScrollbarModule } from '@fundamental-ngx/core/scrollbar';\nimport { startWith, filter, debounceTime } from 'rxjs/operators';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i4$2 from '@angular/cdk/portal';\nimport { CdkPortalOutlet, ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport * as i2$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayModule, OverlayContainer } from '@angular/cdk/overlay';\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\nfunction DialogHeaderComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction DialogHeaderComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"fd-bar-element\", 5);\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"div\", 6)(4, \"fd-bar-element\");\n    i0.ɵɵprojection(5, 1);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"fullWidth\", true);\n  }\n}\nfunction DialogHeaderComponent_div_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction DialogHeaderComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, DialogHeaderComponent_div_4_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"fdCozy\", ctx_r3.dialogConfig.mobile);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.subHeaderTemplate);\n  }\n}\nconst _c0 = [[[\"\", \"fd-title\", \"\"]], [[\"\", \"fd-dialog-close-button\", \"\"]]];\nconst _c1 = [\"[fd-title]\", \"[fd-dialog-close-button]\"];\nfunction DialogBodyComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"fd-busy-indicator\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"loading\", true);\n  }\n}\nconst _c2 = [\"*\"];\nfunction DialogFooterComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction DialogFooterComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c3 = [\"dialogWindow\"];\nfunction DialogComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 4);\n  }\n}\nconst _c4 = [[[\"fd-dialog-header\"]], [[\"fd-dialog-body\"]], [[\"fd-dialog-footer\"]]];\nconst _c5 = [\"fd-dialog-header\", \"fd-dialog-body\", \"fd-dialog-footer\"];\nconst _c6 = [\"fd-dialog-close-button\", \"\"];\nfunction DialogDefaultComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function DialogDefaultComponent_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4._closeButtonClicked());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"title\", (ctx_r0._defaultDialogContent == null ? null : ctx_r0._defaultDialogContent.closeButtonTitle) || \"\");\n  }\n}\nfunction DialogDefaultComponent_ng_container_5_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction DialogDefaultComponent_ng_container_5_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DialogDefaultComponent_ng_container_5_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6._defaultDialogContent.subHeader);\n  }\n}\nfunction DialogDefaultComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DialogDefaultComponent_ng_container_5_ng_template_1_Template, 1, 1, \"ng-template\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction DialogDefaultComponent_fd_dialog_body_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction DialogDefaultComponent_fd_dialog_body_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"fd-dialog-body\");\n    i0.ɵɵtemplate(1, DialogDefaultComponent_fd_dialog_body_6_ng_container_1_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2._defaultDialogContent == null ? null : ctx_r2._defaultDialogContent.content);\n  }\n}\nfunction DialogDefaultComponent_fd_dialog_footer_7_fd_button_bar_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"fd-button-bar\", 8);\n    i0.ɵɵlistener(\"click\", function DialogDefaultComponent_fd_dialog_footer_7_fd_button_bar_1_Template_fd_button_bar_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11._approveButtonClicked());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"label\", (ctx_r9._defaultDialogContent == null ? null : ctx_r9._defaultDialogContent.approveButton) || \"\")(\"fdCozy\", ctx_r9._defaultDialogConfiguration.mobile)(\"ariaLabel\", ctx_r9._defaultDialogContent == null ? null : ctx_r9._defaultDialogContent.approveButtonAriaLabel)(\"id\", ctx_r9._defaultDialogContent == null ? null : ctx_r9._defaultDialogContent.approveButtonId);\n  }\n}\nfunction DialogDefaultComponent_fd_dialog_footer_7_fd_button_bar_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"fd-button-bar\", 9);\n    i0.ɵɵlistener(\"click\", function DialogDefaultComponent_fd_dialog_footer_7_fd_button_bar_2_Template_fd_button_bar_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13._cancelButtonClicked());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"label\", (ctx_r10._defaultDialogContent == null ? null : ctx_r10._defaultDialogContent.cancelButton) || \"\")(\"fdCozy\", ctx_r10._defaultDialogConfiguration.mobile)(\"ariaLabel\", ctx_r10._defaultDialogContent == null ? null : ctx_r10._defaultDialogContent.closeButtonAriaLabel)(\"id\", ctx_r10._defaultDialogContent == null ? null : ctx_r10._defaultDialogContent.cancelButtonId);\n  }\n}\nfunction DialogDefaultComponent_fd_dialog_footer_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"fd-dialog-footer\");\n    i0.ɵɵtemplate(1, DialogDefaultComponent_fd_dialog_footer_7_fd_button_bar_1_Template, 1, 4, \"fd-button-bar\", 6);\n    i0.ɵɵtemplate(2, DialogDefaultComponent_fd_dialog_footer_7_fd_button_bar_2_Template, 1, 4, \"fd-button-bar\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3._defaultDialogContent == null ? null : ctx_r3._defaultDialogContent.approveButton);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3._defaultDialogContent == null ? null : ctx_r3._defaultDialogContent.cancelButton);\n  }\n}\nfunction DialogContainerComponent_ng_template_0_Template(rf, ctx) {}\nclass DialogConfigBase {\n  constructor() {\n    /** Aria Modal for the dialog component element */\n    this.ariaModal = false;\n    /** Whether the dialog should have a backdrop. */\n    this.hasBackdrop = true;\n    /** Whether clicking on the backdrop should close the dialog. Only works if hasBackdrop is true. */\n    this.backdropClickCloseable = false;\n    /** Whether the escape key should close the dialog. */\n    this.escKeyCloseable = true;\n    /** Whether the dialog should be focus trapped. */\n    this.focusTrapped = true;\n    /** The container that the dialog is appended to. By default, it is appended to the body. */\n    this.container = 'body';\n    /** Whether the dialog should have vertical padding. */\n    this.verticalPadding = true;\n    /** Whether the dialog should have horizontal padding. */\n    this.horizontalPadding = true;\n    /** Whether to completely disable dialog body paddings. */\n    this.disablePaddings = false;\n    /** Whether the dialog should have responsive horizontal padding changing with Dialogs window width.\n     * max-width: 599px                         - .fd-dialog__content--s\n     * min-width: 600px and max-width: 1023px   - .fd-dialog__content--m\n     * min-width: 1024px and max-width: 1439px  - .fd-dialog__content--l\n     * min-width: 1440px                        - .fd-dialog__content--xl\n     * */\n    this.responsivePadding = false;\n    /** Whether to close the dialog on router navigation start. */\n    this.closeOnNavigation = true;\n  }\n}\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\nconst DIALOG_DEFAULT_CONFIG = new InjectionToken('Default DialogConfig');\nlet DialogConfig = /*#__PURE__*/(() => {\n  class DialogConfig extends DialogConfigBase {}\n  DialogConfig.ɵfac = /* @__PURE__ */function () {\n    let ɵDialogConfig_BaseFactory;\n    return function DialogConfig_Factory(t) {\n      return (ɵDialogConfig_BaseFactory || (ɵDialogConfig_BaseFactory = i0.ɵɵgetInheritedFactory(DialogConfig)))(t || DialogConfig);\n    };\n  }();\n  DialogConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DialogConfig,\n    factory: DialogConfig.ɵfac\n  });\n  return DialogConfig;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DialogHeaderBase = /*#__PURE__*/(() => {\n  class DialogHeaderBase {\n    /** @hidden */\n    set defaultTitleSize(title) {\n      if (title && !title.headerSize) {\n        title.headerSize = 5;\n        this._changeDetectorRef.detectChanges();\n      }\n    }\n    /** @hidden */\n    constructor(_changeDetectorRef) {\n      this._changeDetectorRef = _changeDetectorRef;\n    }\n    /** @hidden */\n    ngAfterContentInit() {\n      this._assignCustomTemplates();\n    }\n    /** @hidden Assign custom templates */\n    _assignCustomTemplates() {\n      this.customTemplates.forEach(template => {\n        switch (template.getName()) {\n          case 'header':\n            this.headerTemplate = template.templateRef;\n            break;\n          case 'subheader':\n            this.subHeaderTemplate = template.templateRef;\n            break;\n        }\n      });\n    }\n  }\n  DialogHeaderBase.ɵfac = function DialogHeaderBase_Factory(t) {\n    return new (t || DialogHeaderBase)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  DialogHeaderBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DialogHeaderBase,\n    contentQueries: function DialogHeaderBase_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, TitleToken, 5);\n        i0.ɵɵcontentQuery(dirIndex, TemplateDirective, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.defaultTitleSize = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customTemplates = _t);\n      }\n    }\n  });\n  return DialogHeaderBase;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Applies fundamental layout and styling to the contents of a dialog header.\n *\n * ```html\n * <fd-dialog-header>\n *     <h1 fd-title>Title</h1>\n *     <button fd-dialog-close-button></button>\n * </fd-dialog-header>\n * ```\n */\nlet DialogHeaderComponent = /*#__PURE__*/(() => {\n  class DialogHeaderComponent extends DialogHeaderBase {\n    /** @hidden */\n    constructor(dialogConfig, changeDetectorRef) {\n      super(changeDetectorRef);\n      this.dialogConfig = dialogConfig;\n      this.dialogConfig = this.dialogConfig || {};\n    }\n    /** @hidden */\n    ngAfterContentInit() {\n      super.ngAfterContentInit();\n    }\n  }\n  DialogHeaderComponent.ɵfac = function DialogHeaderComponent_Factory(t) {\n    return new (t || DialogHeaderComponent)(i0.ɵɵdirectiveInject(DialogConfig, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  DialogHeaderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DialogHeaderComponent,\n    selectors: [[\"fd-dialog-header\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 5,\n    vars: 4,\n    consts: [[\"fd-bar\", \"\", 1, \"fd-dialog__header\", 3, \"fdCozy\", \"barDesign\"], [4, \"ngTemplateOutlet\"], [\"defaultTemplate\", \"\"], [\"fd-bar\", \"\", \"class\", \"fd-dialog__subheader\", \"barDesign\", \"subheader\", 3, \"fdCozy\", 4, \"ngIf\"], [\"fd-bar-left\", \"\"], [3, \"fullWidth\"], [\"fd-bar-right\", \"\"], [\"fd-bar\", \"\", \"barDesign\", \"subheader\", 1, \"fd-dialog__subheader\", 3, \"fdCozy\"]],\n    template: function DialogHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, DialogHeaderComponent_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n        i0.ɵɵtemplate(2, DialogHeaderComponent_ng_template_2_Template, 6, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, DialogHeaderComponent_div_4_Template, 2, 2, \"div\", 3);\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(3);\n        i0.ɵɵproperty(\"fdCozy\", ctx.dialogConfig.mobile)(\"barDesign\", ctx.subHeaderTemplate ? \"header-with-subheader\" : \"header\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.headerTemplate ? ctx.headerTemplate : _r1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.subHeaderTemplate);\n      }\n    },\n    dependencies: [i2.BarComponent, i2.BarLeftDirective, i2.BarRightDirective, i2.BarElementDirective, i3.ContentDensityDirective, i4.NgIf, i4.NgTemplateOutlet],\n    encapsulation: 2\n  });\n  return DialogHeaderComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst FD_DIALOG_BODY_COMPONENT = new InjectionToken('FdDialogBodyComponent');\nclass DialogRefBase {\n  constructor() {\n    /** @hidden */\n    this._afterClosed = new Subject();\n    /** @hidden */\n    this._afterLoaded = new Subject();\n    /** @hidden */\n    this._endClose$ = new Subject();\n    /**\n     * Observable that is triggered when the dialog is closed.\n     * On close a *result* is passed back. On dismiss, an *error* is returned instead.\n     */\n    this.afterClosed = this._afterClosed.asObservable();\n    /** Observable that is triggered when the modal view is initialised. */\n    this.afterLoaded = this._afterLoaded.asObservable();\n  }\n  /**\n   * Closes the dialog and passes the argument to the afterClosed observable.\n   * @param result Value passed back to the observable as a result.\n   */\n  close(result) {\n    this._afterClosed.next(result);\n    this._afterClosed.complete();\n  }\n  /**\n   * Dismisses the dialog and passes the argument to the afterClosed observable as an error.\n   * @param reason Value passed back to the observable as an error.\n   */\n  dismiss(reason) {\n    this._afterClosed.error(reason);\n  }\n  /** Function that is called after the view of modal is initialised. */\n  loaded() {\n    this._afterLoaded.next(true);\n  }\n}\n\n/**\n * Reference to a dialog component\n * It can be injected into the content component through the constructor.\n * For a template, it is declared as part of the implicit context, see examples.\n */\nlet DialogRef = /*#__PURE__*/(() => {\n  class DialogRef extends DialogRefBase {\n    /** @hidden */\n    constructor() {\n      super();\n      /** @hidden */\n      this._onHide = new BehaviorSubject(false);\n      /** @hidden */\n      this._onLoading = new BehaviorSubject(false);\n      /** Observable that is triggered whenever the dialog should be visually hidden or visible.*/\n      this.onHide = this._onHide.asObservable();\n      /** Observable that is triggered whenever the dialog should be displayed in loading state.*/\n      this.onLoading = this._onLoading.asObservable();\n    }\n    /**\n     * Visually hides the dialog.\n     * @param isHidden Value used to determine if dialog window should be hidden or visible.\n     */\n    hide(isHidden) {\n      this._onHide.next(isHidden);\n    }\n    /**\n     * Displays the dialog in loading state.\n     * @param isLoading Value used to determine if dialog window should be displayed in loading state.\n     */\n    loading(isLoading) {\n      this._onLoading.next(isLoading);\n    }\n  }\n  DialogRef.ɵfac = function DialogRef_Factory(t) {\n    return new (t || DialogRef)();\n  };\n  DialogRef.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DialogRef,\n    factory: DialogRef.ɵfac\n  });\n  return DialogRef;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Applies fundamental layout and styling to the contents of a dialog body.\n *\n * ```html\n * <fd-dialog-body>\n *     <!-- Content -->\n * </fd-dialog-body>\n * ```\n */\nlet DialogBodyComponent = /*#__PURE__*/(() => {\n  class DialogBodyComponent {\n    /** @hidden */\n    constructor(_elRef, dialogConfig, dialogRef, _scrollbarDirective) {\n      this._elRef = _elRef;\n      this.dialogConfig = dialogConfig;\n      this.dialogRef = dialogRef;\n      this._scrollbarDirective = _scrollbarDirective;\n      this._scrollbarDirective.overrideTabindex = false;\n    }\n    /** @hidden */\n    elementRef() {\n      return this._elRef;\n    }\n  }\n  DialogBodyComponent.ɵfac = function DialogBodyComponent_Factory(t) {\n    return new (t || DialogBodyComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DialogConfig, 8), i0.ɵɵdirectiveInject(DialogRef, 8), i0.ɵɵdirectiveInject(ScrollbarDirective));\n  };\n  DialogBodyComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DialogBodyComponent,\n    selectors: [[\"fd-dialog-body\"]],\n    hostVars: 10,\n    hostBindings: function DialogBodyComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"min-height\", ctx.dialogConfig.bodyMinHeight)(\"padding\", ctx.dialogConfig.disablePaddings ? 0 : \"1rem\");\n        i0.ɵɵclassProp(\"fd-dialog__body\", true)(\"fd-dialog__body--no-vertical-padding\", !ctx.dialogConfig.verticalPadding)(\"fd-dialog__body--no-horizontal-padding\", !ctx.dialogConfig.horizontalPadding);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: FD_DIALOG_BODY_COMPONENT,\n      useExisting: DialogBodyComponent\n    }]), i0.ɵɵHostDirectivesFeature([i3$1.ScrollbarDirective])],\n    ngContentSelectors: _c2,\n    decls: 3,\n    vars: 3,\n    consts: [[\"class\", \"fd-dialog__loader\", 4, \"ngIf\"], [1, \"fd-dialog__loader\"], [\"size\", \"l\", 3, \"loading\"]],\n    template: function DialogBodyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n        i0.ɵɵtemplate(1, DialogBodyComponent_div_1_Template, 2, 1, \"div\", 0);\n        i0.ɵɵpipe(2, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx.dialogRef.onLoading));\n      }\n    },\n    dependencies: [i4.NgIf, i5.BusyIndicatorComponent, i4.AsyncPipe],\n    encapsulation: 2\n  });\n  return DialogBodyComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DialogFooterBase = /*#__PURE__*/(() => {\n  class DialogFooterBase {\n    /** @hidden */\n    ngAfterContentInit() {\n      this._assignCustomTemplates();\n    }\n    /** @hidden Assign custom templates */\n    _assignCustomTemplates() {\n      const footerTemplate = this.customTemplates.find(template => template.getName() === 'footer');\n      this.footerTemplate = footerTemplate ? footerTemplate.templateRef : undefined;\n    }\n    /** @hidden */\n    _listenForButtonChanges(className) {\n      const addClassToButton = button => {\n        if (button && !button.class.includes(className)) {\n          button.class = button.class + className;\n          button.buildComponentCssClass();\n        }\n      };\n      this.buttons.changes.pipe(startWith(1)).subscribe(() => this.buttons.forEach(button => {\n        addClassToButton(button._buttonComponent);\n      }));\n    }\n  }\n  DialogFooterBase.ɵfac = function DialogFooterBase_Factory(t) {\n    return new (t || DialogFooterBase)();\n  };\n  DialogFooterBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DialogFooterBase,\n    contentQueries: function DialogFooterBase_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, TemplateDirective, 4);\n        i0.ɵɵcontentQuery(dirIndex, FD_BUTTON_BAR_COMPONENT, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customTemplates = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.buttons = _t);\n      }\n    }\n  });\n  return DialogFooterBase;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst DialogButtonClass = 'fd-dialog__decisive-button';\n/**\n * Building block of the dialog used to create dialog button.\n *\n * ```html\n * <fd-dialog-footer><!--Content--></fd-dialog-footer>\n *\n * Complex footer:\n * <fd-dialog-footer>\n *     <ng-template fdkTemplate=\"footer\"><!--Content--></ng-template>\n * </fd-dialog-footer>\n * ```\n * */\nlet DialogFooterComponent = /*#__PURE__*/(() => {\n  class DialogFooterComponent extends DialogFooterBase {\n    /** @hidden */\n    constructor(dialogConfig) {\n      super();\n      this.dialogConfig = dialogConfig;\n      this.dialogConfig = this.dialogConfig || {};\n    }\n    /** @hidden */\n    ngAfterContentInit() {\n      super.ngAfterContentInit();\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      this._listenForButtonChanges(DialogButtonClass);\n    }\n  }\n  DialogFooterComponent.ɵfac = function DialogFooterComponent_Factory(t) {\n    return new (t || DialogFooterComponent)(i0.ɵɵdirectiveInject(DialogConfig, 8));\n  };\n  DialogFooterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DialogFooterComponent,\n    selectors: [[\"fd-dialog-footer\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c2,\n    decls: 4,\n    vars: 2,\n    consts: [[\"fd-bar\", \"\", \"barDesign\", \"footer\", 1, \"fd-dialog__footer\", 3, \"fdCozy\"], [4, \"ngTemplateOutlet\"], [\"defaultTemplate\", \"\"], [\"fd-bar-right\", \"\"]],\n    template: function DialogFooterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"footer\", 0);\n        i0.ɵɵtemplate(1, DialogFooterComponent_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n        i0.ɵɵtemplate(2, DialogFooterComponent_ng_template_2_Template, 2, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(3);\n        i0.ɵɵproperty(\"fdCozy\", ctx.dialogConfig.mobile);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.footerTemplate ? ctx.footerTemplate : _r1);\n      }\n    },\n    dependencies: [i2.BarComponent, i2.BarRightDirective, i3.ContentDensityDirective, i4.NgTemplateOutlet],\n    encapsulation: 2\n  });\n  return DialogFooterComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** @hidden Returns dialog size based on width\n * @param width - dialog window width\n **/\nfunction dialogWidthToSize(width) {\n  if (width < 599) {\n    return 'sm';\n  } else if (width < 1023) {\n    return 'md';\n  } else if (width < 1439) {\n    return 'lg';\n  }\n  return 'xl';\n}\nlet DialogBase = /*#__PURE__*/(() => {\n  class DialogBase {\n    /** @hidden Listen and close dialog on Escape key */\n    closeDialogEsc(event) {\n      if (this._config.escKeyCloseable && KeyUtil.isKeyCode(event, ESCAPE)) {\n        this._ref.dismiss('escape');\n      }\n    }\n    /** @hidden Listen and close dialog on Backdrop click */\n    closeDialog(target) {\n      if (this._config.backdropClickCloseable && target === this._elementRef.nativeElement) {\n        this._ref.dismiss('backdrop');\n      }\n    }\n    /** @hidden */\n    constructor(_router, _elementRef, _changeDetectorRef, _rtlService, _focusTrapService) {\n      this._router = _router;\n      this._elementRef = _elementRef;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._rtlService = _rtlService;\n      this._focusTrapService = _focusTrapService;\n      /** @hidden */\n      this._subscriptions = new Subscription();\n    }\n    /** @hidden */\n    ngOnInit() {\n      this._listenAndCloseOnNavigation();\n      this._subscriptions.add(this._rtlService?.rtl.subscribe(isRtl => {\n        this._dir = isRtl ? 'rtl' : 'ltr';\n        this._changeDetectorRef.detectChanges();\n      }));\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      this._trapFocus();\n      this._setPosition();\n      this._setWidthHeight();\n      this._listenOnWindowResize();\n      this.adjustResponsivePadding();\n      this._ref.loaded();\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._deactivateFocusTrap();\n      this._subscriptions.unsubscribe();\n    }\n    /** @hidden Determine dialog padding size based on dialogs window width */\n    adjustResponsivePadding() {\n      if (this._config.responsivePadding) {\n        const dialogWidth = this.dialogWindow.nativeElement.getBoundingClientRect().width;\n        this.dialogPaddingSize = dialogWidthToSize(dialogWidth);\n        this._changeDetectorRef.detectChanges();\n      }\n    }\n    /** @hidden Listen on NavigationStart event and dismiss the dialog */\n    _listenAndCloseOnNavigation() {\n      if (this._router) {\n        this._subscriptions.add(this._router.events.pipe(filter(event => event instanceof NavigationStart && !!this._config.closeOnNavigation)).subscribe(() => this._ref.dismiss()));\n      }\n    }\n    /** @hidden Trap focus inside dialog window */\n    _trapFocus() {\n      if (this._config.focusTrapped) {\n        try {\n          this._focusTrapId = this._focusTrapService.createFocusTrap(this.dialogWindow.nativeElement, {\n            clickOutsideDeactivates: this._config.backdropClickCloseable && this._config.hasBackdrop,\n            escapeDeactivates: false,\n            fallbackFocus: this.dialogWindow.nativeElement,\n            allowOutsideClick: () => true\n          });\n        } catch (e) {\n          isDevMode() && console.error(e);\n        }\n      }\n    }\n    /** @hidden */\n    _deactivateFocusTrap() {\n      this._focusTrapService.deactivateFocusTrap(this._focusTrapId);\n    }\n    /** @hidden Set dialog window position */\n    _setPosition() {\n      if (this._config.position) {\n        this.dialogWindow.nativeElement.style.top = this._config.position.top;\n        this.dialogWindow.nativeElement.style.bottom = this._config.position.bottom;\n        this.dialogWindow.nativeElement.style.left = this._config.position.left;\n        this.dialogWindow.nativeElement.style.right = this._config.position.right;\n      } else {\n        this.dialogWindow.nativeElement.style.position = 'relative';\n      }\n    }\n    /** @hidden Set dialog window width and height */\n    _setWidthHeight() {\n      this.dialogWindow.nativeElement.style.width = this._config.width;\n      this.dialogWindow.nativeElement.style.height = this._config.height;\n      this.dialogWindow.nativeElement.style.minWidth = this._config.minWidth;\n      this.dialogWindow.nativeElement.style.minHeight = this._config.minHeight;\n      this.dialogWindow.nativeElement.style.maxWidth = this._config.maxWidth;\n      this.dialogWindow.nativeElement.style.maxHeight = this._config.maxHeight;\n    }\n    /** @hidden Listen on window resize and adjust padding */\n    _listenOnWindowResize() {\n      if (this._config.responsivePadding) {\n        this._subscriptions.add(fromEvent(window, 'resize').pipe(debounceTime(100)).subscribe(() => this.adjustResponsivePadding()));\n      }\n    }\n  }\n  DialogBase.ɵfac = function DialogBase_Factory(t) {\n    return new (t || DialogBase)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i4$1.RtlService), i0.ɵɵdirectiveInject(i4$1.FocusTrapService));\n  };\n  DialogBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DialogBase,\n    hostVars: 1,\n    hostBindings: function DialogBase_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keyup\", function DialogBase_keyup_HostBindingHandler($event) {\n          return ctx.closeDialogEsc($event);\n        })(\"mousedown\", function DialogBase_mousedown_HostBindingHandler($event) {\n          return ctx.closeDialog($event.target);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"dir\", ctx._dir);\n      }\n    }\n  });\n  return DialogBase;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet titleUniqueId = 1;\nlet DialogTitleDirective = /*#__PURE__*/(() => {\n  class DialogTitleDirective {\n    /** @hidden */\n    constructor(dialogConfig) {\n      this.dialogConfig = dialogConfig;\n      /** Title ID attribute, generated automatically if not provided */\n      this.id = `fd-dialog-title-` + titleUniqueId++;\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      if (this.dialogConfig && !this.dialogConfig.ariaLabelledBy) {\n        this.dialogConfig.ariaLabelledBy = this.id;\n      }\n    }\n  }\n  DialogTitleDirective.ɵfac = function DialogTitleDirective_Factory(t) {\n    return new (t || DialogTitleDirective)(i0.ɵɵdirectiveInject(DialogConfig, 8));\n  };\n  DialogTitleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DialogTitleDirective,\n    selectors: [[\"\", \"fd-dialog-title\", \"\"]],\n    hostVars: 1,\n    hostBindings: function DialogTitleDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.id);\n      }\n    },\n    inputs: {\n      id: \"id\"\n    }\n  });\n  return DialogTitleDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Dialog component.\n *\n * ```html\n * <fd-dialog>\n *      <fd-dialog-header></fd-dialog-header>\n *      <fd-dialog-body></fd-dialog-body>\n *      <fd-dialog-footer></fd-dialog-footer>\n * </fd-dialog>\n * ```\n */\nlet DialogComponent = /*#__PURE__*/(() => {\n  class DialogComponent extends DialogBase {\n    /** Custom classes */\n    set class(userClass) {\n      this._class = userClass;\n    }\n    /** DialogRef - should be used for Template based Dialog implementation */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n    set embeddedDialogRef(value) {\n      this._dialogRef = value;\n    }\n    /** DialogConfig - should be used for Template based Dialog implementation */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n    set embeddedDialogConfig(value) {\n      this.dialogConfig = value;\n    }\n    /** @hidden If dialog sub-components didn't receive DialogConfig from Injector, DialogConfig is passed from parent.\n     * This is necessary when dialog has been passed as TemplateRef and created as EmbeddedView.\n     * In such case parent injector of DialogComponent is the component that DECLARED the TemplateRef.\n     **/\n    set dialogHeaderConfig(component) {\n      if (component) {\n        component.dialogConfig = this.dialogConfig;\n      }\n    }\n    /** @hidden */\n    set dialogBodyConfig(component) {\n      if (component) {\n        component.dialogRef = this._dialogRef;\n        component.dialogConfig = this.dialogConfig;\n      }\n    }\n    /** @hidden */\n    set dialogFooterConfig(component) {\n      if (component) {\n        component.dialogConfig = this.dialogConfig;\n      }\n    }\n    /** @hidden */\n    set dialogTitle(component) {\n      if (component) {\n        component.dialogConfig = this.dialogConfig;\n      }\n    }\n    /** @hidden */\n    constructor(dialogConfig, _dialogRef, router, rtlService, focusTrapService, changeDetectorRef, elementRef) {\n      super(router, elementRef, changeDetectorRef, rtlService, focusTrapService);\n      this.dialogConfig = dialogConfig;\n      this._dialogRef = _dialogRef;\n      /** @hidden */\n      this._class = '';\n    }\n    /** @hidden */\n    get _config() {\n      return this.dialogConfig;\n    }\n    /** @hidden */\n    get _ref() {\n      return this._dialogRef;\n    }\n    /** @hidden */\n    ngOnInit() {\n      super.ngOnInit();\n      this._listenOnHidden();\n      this.buildComponentCssClass();\n    }\n    /** @hidden */\n    ngOnChanges() {\n      this.buildComponentCssClass();\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      super.ngAfterViewInit();\n      this._listenOnHidden();\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      this._onHidden.unsubscribe();\n    }\n    /** @hidden */\n    buildComponentCssClass() {\n      return [this.dialogConfig.hasBackdrop ? 'fd-dialog' : 'fd-dialog--no-backdrop', this.dialogConfig.container !== 'body' || this.dialogConfig.position ? 'fd-dialog--targeted' : '', this.showDialogWindow ? 'fd-dialog--active' : '', this._class, this.dialogConfig.backdropClass ? this.dialogConfig.backdropClass : ''];\n    }\n    /** @hidden */\n    elementRef() {\n      return this._elementRef;\n    }\n    /** @hidden Listen on Dialog visibility */\n    _listenOnHidden() {\n      if (this._onHidden) {\n        this._onHidden.unsubscribe();\n      }\n      this._onHidden = this._dialogRef.onHide.subscribe(isHidden => {\n        this.showDialogWindow = !isHidden;\n        this.buildComponentCssClass();\n        if (!this._focusTrapId) {\n          return;\n        }\n        const focusTrapInstance = this._focusTrapService.getFocusTrapInstance(this._focusTrapId);\n        if (isHidden) {\n          focusTrapInstance?.pause();\n        } else {\n          focusTrapInstance?.unpause();\n        }\n      });\n    }\n  }\n  DialogComponent.ɵfac = function DialogComponent_Factory(t) {\n    return new (t || DialogComponent)(i0.ɵɵdirectiveInject(DialogConfig, 8), i0.ɵɵdirectiveInject(DialogRef, 8), i0.ɵɵdirectiveInject(i1.Router, 8), i0.ɵɵdirectiveInject(i4$1.RtlService, 8), i0.ɵɵdirectiveInject(i4$1.FocusTrapService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  DialogComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DialogComponent,\n    selectors: [[\"fd-dialog\"]],\n    contentQueries: function DialogComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, DialogHeaderComponent, 5);\n        i0.ɵɵcontentQuery(dirIndex, DialogBodyComponent, 5);\n        i0.ɵɵcontentQuery(dirIndex, DialogFooterComponent, 5);\n        i0.ɵɵcontentQuery(dirIndex, DialogTitleDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dialogHeaderConfig = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dialogBodyConfig = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dialogFooterConfig = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dialogTitle = _t.first);\n      }\n    },\n    viewQuery: function DialogComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c3, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dialogWindow = _t.first);\n      }\n    },\n    hostAttrs: [\"tabindex\", \"-1\"],\n    inputs: {\n      class: \"class\",\n      embeddedDialogRef: [\"dialogRef\", \"embeddedDialogRef\"],\n      embeddedDialogConfig: [\"dialogConfig\", \"embeddedDialogConfig\"]\n    },\n    features: [i0.ɵɵProvidersFeature([contentDensityObserverProviders({\n      alwaysAddModifiers: true\n    })]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c5,\n    decls: 7,\n    vars: 30,\n    consts: [[\"role\", \"dialog\", \"tabindex\", \"-1\", \"aria-modal\", \"true\", \"fdkResize\", \"\", \"cdkTrapFocus\", \"\", \"cdkDrag\", \"\", \"cdkDragBoundary\", \".fd-dialog\", \"fd-scrollbar\", \"\", 1, \"fd-dialog__content\", 3, \"fdkResizeBoundary\", \"cdkDragDisabled\", \"fdkResizeDisabled\", \"cdkDragStarted\", \"cdkDragEnded\", \"onResizeEnd\"], [\"dialogWindow\", \"\"], [\"fdkResizeHandle\", \"\", \"class\", \"fd-dialog__resize-handle\", 4, \"ngIf\"], [\"cdkDragHandle\", \"\", 3, \"cdkDragHandleDisabled\"], [\"fdkResizeHandle\", \"\", 1, \"fd-dialog__resize-handle\"]],\n    template: function DialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c4);\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"cdkDragStarted\", function DialogComponent_Template_div_cdkDragStarted_0_listener() {\n          return ctx.isDragged = true;\n        })(\"cdkDragEnded\", function DialogComponent_Template_div_cdkDragEnded_0_listener() {\n          return ctx.isDragged = false;\n        })(\"onResizeEnd\", function DialogComponent_Template_div_onResizeEnd_0_listener() {\n          return ctx.adjustResponsivePadding();\n        });\n        i0.ɵɵtemplate(2, DialogComponent_span_2_Template, 1, 0, \"span\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵprojection(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵprojection(5, 1);\n        i0.ɵɵprojection(6, 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.dialogConfig.dialogPanelClass);\n        i0.ɵɵclassProp(\"cdk-drag\", ctx.dialogConfig.draggable)(\"fd-dialog__content--s\", ctx.dialogPaddingSize === \"sm\")(\"fd-dialog__content--m\", ctx.dialogPaddingSize === \"md\")(\"fd-dialog__content--l\", ctx.dialogPaddingSize === \"lg\")(\"fd-dialog__content--xl\", ctx.dialogPaddingSize === \"xl\")(\"fd-dialog__content--mobile\", ctx.dialogConfig.mobile || ctx.dialogConfig.fullScreen)(\"fd-dialog__content--no-mobile-stretch\", ctx.dialogConfig.mobileOuterSpacing)(\"fd-dialog__content--draggable-grab\", ctx.dialogConfig.draggable && !ctx.isDragged)(\"fd-dialog__content--draggable-grabbing\", ctx.dialogConfig.draggable && ctx.isDragged);\n        i0.ɵɵproperty(\"fdkResizeBoundary\", ctx.elementRef().nativeElement)(\"cdkDragDisabled\", !ctx.dialogConfig.draggable)(\"fdkResizeDisabled\", !ctx.dialogConfig.resizable);\n        i0.ɵɵattribute(\"id\", ctx.dialogConfig.id)(\"aria-label\", ctx.dialogConfig.ariaLabel)(\"aria-labelledby\", ctx.dialogConfig.ariaLabelledBy)(\"aria-describedby\", ctx.dialogConfig.ariaDescribedBy)(\"aria-modal\", ctx.dialogConfig.ariaModal);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.dialogConfig.resizable);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"cdkDragHandleDisabled\", !ctx.dialogConfig.draggable);\n      }\n    },\n    dependencies: [i4.NgIf, i4$1.ResizeDirective, i4$1.ResizeHandleDirective, i6.CdkDrag, i6.CdkDragHandle, i7.CdkTrapFocus, i3$1.ScrollbarDirective],\n    styles: [\"/*!\\n * Fundamental Library Styles v0.28.3\\n * Copyright (c) 2023 SAP SE or an SAP affiliate company.\\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/main/LICENSE)\\n */.fd-dialog{-webkit-box-align:center;-ms-flex-align:center;-webkit-box-pack:center;-ms-flex-pack:center;align-items:center;justify-content:center;position:fixed}.fd-dialog,.fd-dialog:before{height:100%;left:0;top:0;width:100%}.fd-dialog:before{background-color:var(--sapBlockLayer_Background);content:\\\"\\\";opacity:var(--fdDialog_Background_Opacity);position:absolute}.fd-dialog__content{-webkit-box-shadow:var(--sapContent_Shadow3);border-radius:var(--sapElement_BorderCornerRadius);box-shadow:var(--sapContent_Shadow3);display:flex;flex-direction:column;max-height:calc(100vh - 6%);max-width:calc(100vw - 10%);min-height:7.5rem;min-width:20rem;outline:none;overflow:hidden;position:absolute}.fd-dialog__body{-webkit-box-flex:1;-ms-flex-positive:1;background-color:var(--sapGroup_ContentBackground);flex-grow:1;overflow:auto}.fd-dialog__footer.fd-bar,.fd-dialog__header.fd-bar,.fd-dialog__subheader.fd-bar{flex-shrink:0;padding-left:1rem;padding-right:1rem}.fd-dialog__content--mobile{border-radius:0;height:100vh;max-height:100vh;max-width:100vw;width:100vw}/*!\\n  .fd-dialog+(--active)\\n    .fd-dialog__content+(--s, --m, --l, --xl, --draggable-grab, --draggable-grabbing, --mobile, --no-mobile-stretch)\\n      .fd-dialog__header\\n        .fd-dialog__title\\n      .fd-dialog__subheader\\n      .fd-dialog__body+(--no-vertical-padding, --no-horizontal-padding)\\n      .fd-dialog__loader\\n      .fd-dialog__footer\\n        .fd-dialog__decisive-button\\n      .fd-dialog__resize-handle\\n*/.fd-dialog{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);display:none;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:0}.fd-dialog:after,.fd-dialog:before{box-sizing:inherit;font-size:inherit}.fd-dialog--active{display:flex}.fd-dialog__content{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:0}.fd-dialog__content:after,.fd-dialog__content:before{box-sizing:inherit;font-size:inherit}.fd-dialog__content--def .fd-dialog__body,.fd-dialog__content--def .fd-dialog__footer.fd-bar,.fd-dialog__content--def .fd-dialog__header.fd-bar,.fd-dialog__content--def .fd-dialog__subheader.fd-bar,.fd-dialog__content--s .fd-dialog__body,.fd-dialog__content--s .fd-dialog__footer.fd-bar,.fd-dialog__content--s .fd-dialog__header.fd-bar,.fd-dialog__content--s .fd-dialog__subheader.fd-bar{padding-left:1rem;padding-right:1rem}.fd-dialog__content--l .fd-dialog__body,.fd-dialog__content--l .fd-dialog__footer.fd-bar,.fd-dialog__content--l .fd-dialog__header.fd-bar,.fd-dialog__content--l .fd-dialog__subheader.fd-bar,.fd-dialog__content--m .fd-dialog__body,.fd-dialog__content--m .fd-dialog__footer.fd-bar,.fd-dialog__content--m .fd-dialog__header.fd-bar,.fd-dialog__content--m .fd-dialog__subheader.fd-bar{padding-left:2rem;padding-right:2rem}.fd-dialog__content--xl .fd-dialog__body,.fd-dialog__content--xl .fd-dialog__footer.fd-bar,.fd-dialog__content--xl .fd-dialog__header.fd-bar,.fd-dialog__content--xl .fd-dialog__subheader.fd-bar{padding-left:3rem;padding-right:3rem}.fd-dialog__content--mobile .fd-dialog__body,.fd-dialog__content--mobile .fd-dialog__footer,.fd-dialog__content--mobile .fd-dialog__header,.fd-dialog__content--mobile .fd-menu__item:first-child,.fd-dialog__content--mobile .fd-menu__item:first-child .fd-menu__link:after,.fd-dialog__content--mobile .fd-menu__item:last-child,.fd-dialog__content--mobile .fd-menu__item:last-child .fd-menu__link:after{border-radius:0}.fd-dialog__content--no-mobile-stretch{border-radius:var(--sapElement_BorderCornerRadius);max-height:calc(100vh - 6%);max-width:calc(100vw - 10%)}.fd-dialog__content--draggable-grab.is-hover .fd-dialog__header,.fd-dialog__content--draggable-grab:hover .fd-dialog__header{cursor:move;cursor:grab}.fd-dialog__content--draggable-grabbing.is-hover .fd-dialog__header,.fd-dialog__content--draggable-grabbing:hover .fd-dialog__header{cursor:move;cursor:grabbing}.fd-dialog__footer.fd-bar .fd-dialog__decisive-button,.fd-dialog__header.fd-bar .fd-dialog__decisive-button{justify-content:center;min-width:4rem}.fd-dialog__body{-webkit-box-sizing:border-box;border:0;border-radius:var(--sapElement_BorderCornerRadius);box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:1rem 0;position:relative}.fd-dialog__body:after,.fd-dialog__body:before{box-sizing:inherit;font-size:inherit}.fd-dialog__body--no-vertical-padding{padding-bottom:0;padding-top:0}.fd-dialog__body--no-horizontal-padding{padding-left:0;padding-right:0}.fd-dialog__body:not(:first-child){border-top-left-radius:0;border-top-right-radius:0}.fd-dialog__body:not(:last-child){border-bottom-left-radius:0;border-bottom-right-radius:0}.fd-dialog__loader{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:1.5rem 0 .5rem;padding:0;text-align:center}.fd-dialog__loader:after,.fd-dialog__loader:before{box-sizing:inherit;font-size:inherit}.fd-dialog__resize-handle{-webkit-box-sizing:border-box;border:0;bottom:-.35rem;box-sizing:border-box;color:var(--sapTextColor);cursor:se-resize;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-size:1rem;font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;overflow:hidden;padding:0;position:absolute;right:.05rem}.fd-dialog__resize-handle:after,.fd-dialog__resize-handle:before{box-sizing:inherit;font-size:inherit}.fd-dialog__resize-handle[dir=rtl],[dir=rtl] .fd-dialog__resize-handle{-webkit-transform:scaleX(-1);cursor:sw-resize;left:.05rem;right:auto;transform:scaleX(-1)}.fd-dialog__resize-handle:after{color:var(--sapButton_Lite_TextColor);content:\\\"\\\\e24f\\\";font-family:SAP-icons;text-align:center;text-decoration:inherit;text-rendering:optimizeLegibility;text-transform:none}.fd-dialog--no-backdrop:not(.fd-dialog--targeted){-webkit-transform:translate(-50%,-50%);left:50%;position:fixed;top:50%;transform:translate(-50%,-50%);z-index:1000}.fd-dialog{z-index:999}.fd-dialog__resize-handle{z-index:1001;bottom:0;overflow:hidden}.fd-dialog__resize-handle:after{margin-bottom:-.125rem;display:block}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  __decorate([applyCssClass, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", Array)], DialogComponent.prototype, \"buildComponentCssClass\", null);\n  return DialogComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Directive that applies fundamental dialog styling to a dialog close button.\n *\n * ```html\n * <button fd-dialog-close-button></button>\n * ```\n */\nlet DialogCloseButtonComponent = /*#__PURE__*/(() => {\n  class DialogCloseButtonComponent {\n    constructor() {\n      /** Displays dialog close button in mobile mode */\n      this.mobile = false;\n    }\n  }\n  DialogCloseButtonComponent.ɵfac = function DialogCloseButtonComponent_Factory(t) {\n    return new (t || DialogCloseButtonComponent)();\n  };\n  DialogCloseButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DialogCloseButtonComponent,\n    selectors: [[\"\", \"fd-dialog-close-button\", \"\"]],\n    hostVars: 8,\n    hostBindings: function DialogCloseButtonComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-label\", \"close\")(\"title\", ctx.title);\n        i0.ɵɵclassProp(\"fd-button\", true)(\"is-compact\", !ctx.mobile)(\"fd-button--transparent\", true);\n      }\n    },\n    inputs: {\n      mobile: \"mobile\",\n      title: \"title\"\n    },\n    attrs: _c6,\n    ngContentSelectors: _c2,\n    decls: 2,\n    vars: 0,\n    consts: [[\"glyph\", \"decline\"]],\n    template: function DialogCloseButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelement(0, \"fd-icon\", 0);\n        i0.ɵɵprojection(1);\n      }\n    },\n    dependencies: [i1$1.IconComponent],\n    encapsulation: 2\n  });\n  return DialogCloseButtonComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Dialog component used to create the dialog in object based approach */\nlet DialogDefaultComponent = /*#__PURE__*/(() => {\n  class DialogDefaultComponent {\n    /** @hidden */\n    constructor(_changeDetectorRef) {\n      this._changeDetectorRef = _changeDetectorRef;\n    }\n    /** @hidden\n     * TODO: Inspect why DialogDefaultComponents needs change detection re-run to render adjusted content (dialog header title)\n     * */\n    ngAfterViewInit() {\n      this._changeDetectorRef.detectChanges();\n    }\n    /** Whether there is a approve button, or cancel button text */\n    _showFooter() {\n      return !!this._defaultDialogContent && !!(this._defaultDialogContent.cancelButton || this._defaultDialogContent.approveButton);\n    }\n    /** @hidden */\n    _closeButtonClicked() {\n      this._defaultDialogContent?.closeButtonCallback?.();\n    }\n    /** @hidden */\n    _approveButtonClicked() {\n      this._defaultDialogContent?.approveButtonCallback?.();\n    }\n    /** @hidden */\n    _cancelButtonClicked() {\n      this._defaultDialogContent?.cancelButtonCallback?.();\n    }\n  }\n  DialogDefaultComponent.ɵfac = function DialogDefaultComponent_Factory(t) {\n    return new (t || DialogDefaultComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  DialogDefaultComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DialogDefaultComponent,\n    selectors: [[\"fd-dialog-default\"]],\n    decls: 8,\n    vars: 6,\n    consts: [[\"fd-title\", \"\", 3, \"id\"], [\"fd-dialog-close-button\", \"\", 3, \"title\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [\"fd-dialog-close-button\", \"\", 3, \"title\", \"click\"], [\"fdkTemplate\", \"subheader\"], [4, \"ngTemplateOutlet\"], [\"fdType\", \"emphasized\", \"fd-initial-focus\", \"\", 3, \"label\", \"fdCozy\", \"ariaLabel\", \"id\", \"click\", 4, \"ngIf\"], [3, \"label\", \"fdCozy\", \"ariaLabel\", \"id\", \"click\", 4, \"ngIf\"], [\"fdType\", \"emphasized\", \"fd-initial-focus\", \"\", 3, \"label\", \"fdCozy\", \"ariaLabel\", \"id\", \"click\"], [3, \"label\", \"fdCozy\", \"ariaLabel\", \"id\", \"click\"]],\n    template: function DialogDefaultComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"fd-dialog\")(1, \"fd-dialog-header\")(2, \"h1\", 0);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, DialogDefaultComponent_button_4_Template, 1, 1, \"button\", 1);\n        i0.ɵɵtemplate(5, DialogDefaultComponent_ng_container_5_Template, 2, 0, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, DialogDefaultComponent_fd_dialog_body_6_Template, 2, 1, \"fd-dialog-body\", 2);\n        i0.ɵɵtemplate(7, DialogDefaultComponent_fd_dialog_footer_7_Template, 3, 2, \"fd-dialog-footer\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"id\", ctx._defaultDialogContent == null ? null : ctx._defaultDialogContent.titleId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx._defaultDialogContent == null ? null : ctx._defaultDialogContent.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx._defaultDialogContent == null ? null : ctx._defaultDialogContent.closeButtonCallback);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx._defaultDialogContent == null ? null : ctx._defaultDialogContent.subHeader);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx._defaultDialogContent == null ? null : ctx._defaultDialogContent.content);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx._showFooter());\n      }\n    },\n    dependencies: [i2.ButtonBarComponent, i3.ContentDensityDirective, i3$2.TitleComponent, i4.NgIf, i4.NgTemplateOutlet, i4$1.TemplateDirective, i4$1.InitialFocusDirective, i4$1.DeprecatedInitialFocusDirective, DialogComponent, DialogBodyComponent, DialogFooterComponent, DialogHeaderComponent, DialogCloseButtonComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return DialogDefaultComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst dialogFade = trigger('state', [state('void, hidden', style({\n  opacity: 0,\n  position: 'relative',\n  zIndex: 999\n})), state('visible', style({\n  opacity: 1,\n  position: 'relative',\n  zIndex: 999\n})), transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')), transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n  opacity: 0,\n  position: 'relative',\n  zIndex: 999\n})))]);\n\n/** Dialog container where the dialog content is embedded. */\nlet DialogContainerComponent = /*#__PURE__*/(() => {\n  class DialogContainerComponent extends DynamicComponentContainer {\n    /** Custom classes */\n    set class(userClass) {\n      this._class = userClass;\n      this.buildComponentCssClass();\n    }\n    /** @hidden */\n    constructor(dialogConfig, _dialogRef, _destroy$, elementRef, changeDetectorRef, injector) {\n      super(elementRef, injector, changeDetectorRef);\n      this.dialogConfig = dialogConfig;\n      this._dialogRef = _dialogRef;\n      this._destroy$ = _destroy$;\n      /** The state of the Dialog animations. */\n      this._animationState = 'void';\n      /** @hidden */\n      this._class = '';\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      setTimeout(() => {\n        this._loadContent();\n        this._listenOnClose();\n      });\n    }\n    /** @hidden */\n    buildComponentCssClass() {\n      return [this.dialogConfig.containerClass ? this.dialogConfig.containerClass : '', this._class];\n    }\n    /** @hidden */\n    elementRef() {\n      return this._elementRef;\n    }\n    /** @hidden Load received content */\n    _loadContent() {\n      if (this.childContent instanceof Type) {\n        this._createFromComponent(this.childContent);\n      } else if (this.childContent instanceof TemplateRef) {\n        this._createFromTemplate(this.childContent, this._templateContext());\n      } else {\n        this._createFromDefaultDialog(this.childContent);\n      }\n      this._animationState = 'visible';\n      this._cdr.detectChanges();\n    }\n    /** @hidden Returns context for embedded template*/\n    _templateContext() {\n      return {\n        $implicit: this._dialogRef,\n        dialogConfig: this.dialogConfig\n      };\n    }\n    /** @hidden Load Dialog component from passed object */\n    _createFromDefaultDialog(config) {\n      this._createFromComponent(DialogDefaultComponent);\n      const instance = this._componentRef.instance;\n      instance._defaultDialogContent = config;\n      instance._defaultDialogConfiguration = this.dialogConfig;\n    }\n    /** Handle end of animations, updating the state of the Message Toast. */\n    onAnimationEnd(event) {\n      const {\n        toState\n      } = event;\n      if (toState === 'hidden') {\n        this._dialogRef._endClose$.next();\n        this._dialogRef._endClose$.complete();\n      }\n    }\n    /**\n     * @hidden\n     * We need to wait until animation plays, and then send signal to the service to destroy the component.\n     */\n    _listenOnClose() {\n      const callback = () => {\n        this._animationState = 'hidden';\n        this._cdr.detectChanges();\n      };\n      this._dialogRef.afterClosed.pipe(takeUntil(this._destroy$)).subscribe({\n        next: () => callback(),\n        error: () => callback()\n      });\n    }\n  }\n  DialogContainerComponent.ɵfac = function DialogContainerComponent_Factory(t) {\n    return new (t || DialogContainerComponent)(i0.ɵɵdirectiveInject(DialogConfig), i0.ɵɵdirectiveInject(DialogRef), i0.ɵɵdirectiveInject(i4$1.DestroyedService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Injector));\n  };\n  DialogContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DialogContainerComponent,\n    selectors: [[\"fd-dialog-container\"]],\n    viewQuery: function DialogContainerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(CdkPortalOutlet, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.portalOutlet = _t.first);\n      }\n    },\n    hostVars: 1,\n    hostBindings: function DialogContainerComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵsyntheticHostListener(\"@state.done\", function DialogContainerComponent_animation_state_done_HostBindingHandler($event) {\n          return ctx.onAnimationEnd($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵsyntheticHostProperty(\"@state\", ctx._animationState);\n      }\n    },\n    inputs: {\n      class: \"class\"\n    },\n    features: [i0.ɵɵProvidersFeature([DestroyedService]), i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 0,\n    consts: [[\"cdkPortalOutlet\", \"\"]],\n    template: function DialogContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, DialogContainerComponent_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n      }\n    },\n    dependencies: [i4$2.CdkPortalOutlet],\n    styles: [\"[_nghost-%COMP%]:not(:first-of-type)     .fd-dialog:before{opacity:0}\"],\n    data: {\n      animation: [dialogFade]\n    },\n    changeDetection: 0\n  });\n  __decorate([applyCssClass, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", Array)], DialogContainerComponent.prototype, \"buildComponentCssClass\", null);\n  return DialogContainerComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Service used to dynamically generate a dialog. */\nlet DialogBaseService = /*#__PURE__*/(() => {\n  class DialogBaseService {\n    constructor() {\n      /** @hidden Collection of existing dialog references */\n      this._dialogs = [];\n      /** @hidden */\n      this._destroy$ = new Subject();\n    }\n    /**\n     * Status of the dialog service.\n     * Returns true if there are open dialogs, false otherwise.\n     */\n    hasOpenDialogs() {\n      return this._dialogs && this._dialogs.length > 0;\n    }\n    /** Dismisses all currently open dialogs. */\n    dismissAll() {\n      this._dialogs.forEach(item => this._destroyDialog(item));\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._destroy$.next();\n      this._destroy$.complete();\n    }\n    /** @hidden Extends configuration using default values*/\n    _applyDefaultConfig(config, defaultConfig) {\n      return {\n        ...defaultConfig,\n        ...config\n      };\n    }\n    /** @hidden Destroy existing dialog */\n    _destroyDialog(dialog) {\n      this._dialogs = this._dialogs.filter(d => d !== dialog);\n    }\n  }\n  DialogBaseService.ɵfac = function DialogBaseService_Factory(t) {\n    return new (t || DialogBaseService)();\n  };\n  DialogBaseService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DialogBaseService,\n    factory: DialogBaseService.ɵfac\n  });\n  return DialogBaseService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Service used to create a dialog. */\nlet DialogService = /*#__PURE__*/(() => {\n  class DialogService extends DialogBaseService {\n    /** @hidden */\n    constructor(_defaultConfig, _rtlService, _injector, _overlay) {\n      super();\n      this._defaultConfig = _defaultConfig;\n      this._rtlService = _rtlService;\n      this._injector = _injector;\n      this._overlay = _overlay;\n    }\n    /**\n     * Opens a dialog component with provided content.\n     * @param content Content of the dialog component.\n     * @param dialogConfig Configuration of the dialog component.\n     * @param parentInjector Parent injector instance.\n     */\n    open(content, dialogConfig, parentInjector) {\n      const dialogRef = new DialogRef();\n      if (!parentInjector) {\n        parentInjector = this._injector;\n      }\n      dialogConfig = this._applyDefaultConfig(dialogConfig || {}, this._defaultConfig || new DialogConfig());\n      dialogRef.data = dialogConfig.data;\n      const injector = Injector.create({\n        providers: [{\n          provide: DialogConfig,\n          useValue: dialogConfig\n        }, {\n          provide: DialogRef,\n          useValue: dialogRef\n        }, {\n          provide: RtlService,\n          useValue: this._rtlService\n        }, {\n          provide: DialogService,\n          useValue: this\n        }],\n        parent: parentInjector\n      });\n      const overlayRef = this._overlay.create(new OverlayConfig());\n      if (dialogConfig.container && dialogConfig.container !== 'body' && typeof dialogConfig.container !== 'string') {\n        dialogConfig.container.append(overlayRef.hostElement);\n      }\n      const portal = new ComponentPortal(DialogContainerComponent, null, injector);\n      const componentRef = overlayRef.attach(portal);\n      componentRef.instance.childContent = content;\n      componentRef.instance.dialogConfig = dialogConfig;\n      this._dialogs.push(componentRef);\n      dialogRef._endClose$.pipe(takeUntil(this._destroy$)).subscribe(() => {\n        this._destroyDialog(componentRef);\n        componentRef.destroy();\n        overlayRef.dispose();\n      });\n      return dialogRef;\n    }\n  }\n  DialogService.ɵfac = function DialogService_Factory(t) {\n    return new (t || DialogService)(i0.ɵɵinject(DIALOG_DEFAULT_CONFIG, 8), i0.ɵɵinject(i4$1.RtlService, 8), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i2$1.Overlay));\n  };\n  DialogService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DialogService,\n    factory: DialogService.ɵfac\n  });\n  return DialogService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated\n * Consider using `fd-button-bar`\n */\nlet DialogFooterButtonComponent = /*#__PURE__*/(() => {\n  class DialogFooterButtonComponent extends BarElementDirective {}\n  DialogFooterButtonComponent.ɵfac = /* @__PURE__ */function () {\n    let ɵDialogFooterButtonComponent_BaseFactory;\n    return function DialogFooterButtonComponent_Factory(t) {\n      return (ɵDialogFooterButtonComponent_BaseFactory || (ɵDialogFooterButtonComponent_BaseFactory = i0.ɵɵgetInheritedFactory(DialogFooterButtonComponent)))(t || DialogFooterButtonComponent);\n    };\n  }();\n  DialogFooterButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DialogFooterButtonComponent,\n    selectors: [[\"fd-dialog-footer-button\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c2,\n    decls: 1,\n    vars: 0,\n    template: function DialogFooterButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  return DialogFooterButtonComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated\n * Consider using `fd-button-bar`\n */\nlet DialogDecisiveButtonDirective = /*#__PURE__*/(() => {\n  class DialogDecisiveButtonDirective {}\n  DialogDecisiveButtonDirective.ɵfac = function DialogDecisiveButtonDirective_Factory(t) {\n    return new (t || DialogDecisiveButtonDirective)();\n  };\n  DialogDecisiveButtonDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DialogDecisiveButtonDirective,\n    selectors: [[\"\", \"fd-dialog-decisive-button\", \"\"]],\n    hostVars: 2,\n    hostBindings: function DialogDecisiveButtonDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-dialog__decisive-button\", true);\n      }\n    }\n  });\n  return DialogDecisiveButtonDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst declarations = [DialogComponent, DialogBodyComponent, DialogFooterComponent, DialogHeaderComponent, DialogDefaultComponent, DialogContainerComponent, DialogCloseButtonComponent, DialogFooterButtonComponent, DialogDecisiveButtonDirective, DialogTitleDirective];\nlet DialogModule = /*#__PURE__*/(() => {\n  class DialogModule {}\n  DialogModule.ɵfac = function DialogModule_Factory(t) {\n    return new (t || DialogModule)();\n  };\n  DialogModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DialogModule\n  });\n  DialogModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DialogService, DynamicComponentService],\n    imports: [BarModule, IconModule, TitleModule, CommonModule, ButtonModule, ResizeModule, TemplateModule, DragDropModule, InitialFocusModule, BusyIndicatorModule, A11yModule, ScrollbarModule, PortalModule, OverlayModule, BarModule, TitleModule, TemplateModule, InitialFocusModule]\n  });\n  return DialogModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Represents the positioning of the dialog on the screen.\n */\nclass DialogPosition {}\nclass DialogContentBase {}\nclass DialogDefaultContent extends DialogContentBase {}\nlet DialogOverlayContainer = /*#__PURE__*/(() => {\n  class DialogOverlayContainer extends OverlayContainer {\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n      const containerElement = super.getContainerElement();\n      containerElement.classList.add('fd-dialog-overlay-container');\n      return containerElement;\n    }\n  }\n  DialogOverlayContainer.ɵfac = /* @__PURE__ */function () {\n    let ɵDialogOverlayContainer_BaseFactory;\n    return function DialogOverlayContainer_Factory(t) {\n      return (ɵDialogOverlayContainer_BaseFactory || (ɵDialogOverlayContainer_BaseFactory = i0.ɵɵgetInheritedFactory(DialogOverlayContainer)))(t || DialogOverlayContainer);\n    };\n  }();\n  DialogOverlayContainer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DialogOverlayContainer,\n    factory: DialogOverlayContainer.ɵfac\n  });\n  return DialogOverlayContainer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DIALOG_DEFAULT_CONFIG, DialogBase, DialogBaseService, DialogBodyComponent, DialogButtonClass, DialogCloseButtonComponent, DialogComponent, DialogConfig, DialogConfigBase, DialogContainerComponent, DialogContentBase, DialogDecisiveButtonDirective, DialogDefaultComponent, DialogDefaultContent, DialogFooterBase, DialogFooterButtonComponent, DialogFooterComponent, DialogHeaderBase, DialogHeaderComponent, DialogModule, DialogOverlayContainer, DialogPosition, DialogRef, DialogRefBase, DialogService, DialogTitleDirective, FD_DIALOG_BODY_COMPONENT, dialogFade };\n//# sourceMappingURL=fundamental-ngx-core-dialog.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}