{"ast":null,"code":"import _asyncToGenerator from \"/home/webpct/angular-exzrk6/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i1$2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Type, TemplateRef, ViewContainerRef, Optional, Inject, ViewChild, HostBinding, Input, HostListener, Injector, Injectable, ContentChildren, Directive, EventEmitter, Output, ContentChild, forwardRef, NgModule } from '@angular/core';\nimport * as i2 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i2$1 from '@fundamental-ngx/core/button';\nimport { FD_BUTTON_COMPONENT, ButtonModule } from '@fundamental-ngx/core/button';\nimport * as i1$1 from '@fundamental-ngx/cdk/utils';\nimport { AbstractFdNgxClass, KeyUtil, RtlService, applyCssClass, DynamicComponentService } from '@fundamental-ngx/cdk/utils';\nimport * as i1 from '@angular/router';\nimport { NavigationStart } from '@angular/router';\nimport { Subject, BehaviorSubject, merge, Subscription } from 'rxjs';\nimport * as i6 from '@fundamental-ngx/core/popover';\nimport { FD_POPOVER_COMPONENT } from '@fundamental-ngx/core/popover';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { takeUntil, filter, take, startWith, switchMap, debounceTime } from 'rxjs/operators';\nimport * as i3 from '@fundamental-ngx/core/content-density';\nimport { ContentDensityMode } from '@fundamental-ngx/core/content-density';\nimport { __decorate, __metadata } from 'tslib';\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nconst _c0 = [\"vc\"];\nconst _c1 = [\"*\"];\nconst _c2 = [[[\"fd-notification-header\"]], [[\"fd-notification-actions\"]], \"*\"];\nconst _c3 = [\"fd-notification-header\", \"fd-notification-actions\", \"*\"];\nfunction NotificationGroupListComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nconst _c4 = [[[\"fd-notification-group-header\"]], \"*\"];\nconst _c5 = [\"fd-notification-group-header\", \"*\"];\nlet NotificationContainer = /*#__PURE__*/(() => {\n  class NotificationContainer {}\n  NotificationContainer.ɵfac = function NotificationContainer_Factory(t) {\n    return new (t || NotificationContainer)();\n  };\n  NotificationContainer.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NotificationContainer,\n    selectors: [[\"fd-notification-container\"]],\n    hostVars: 2,\n    hostBindings: function NotificationContainer_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-notification-container\", true);\n      }\n    },\n    decls: 0,\n    vars: 0,\n    template: function NotificationContainer_Template(rf, ctx) {},\n    styles: [\".fd-notification-container{position:fixed;display:flex;flex-direction:column;z-index:5000;align-items:flex-end;top:4.75rem;right:2rem}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NotificationContainer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Reference to a notification component generated via the NotificationService.\n * It can be injected into the content component through the constructor.\n * For a template, it is declared as part of the implicit context, see examples.\n */\nclass NotificationRef {\n  constructor() {\n    /** @hidden */\n    this._afterClosed = new Subject();\n    /**\n     * Observable that is triggered when the notification is closed.\n     * On close a *result* is passed back. On dismiss, an *error* is returned instead.\n     */\n    this.afterClosed = this._afterClosed.asObservable();\n  }\n  /**\n   * Closes the notification and passes the argument to the afterClosed observable.\n   * @param result Value passed back to the observable as a result.\n   */\n  close(result) {\n    this._afterClosed.next(result);\n    this._afterClosed.complete();\n  }\n  /**\n   * Dismisses the notification and passes the argument to the afterClosed observable as an error.\n   * @param reason Value passed back to the observable as an error.\n   */\n  dismiss(reason) {\n    this._afterClosed.error(reason);\n  }\n}\n\n/**\n * Configuration for opening a notification with the NotificationService.\n */\nclass NotificationConfig {\n  constructor() {\n    /** The container that the notification is appended to. By default, it is appended to the body. */\n    this.container = 'body';\n    /**\n     * Whether the notification should trap focus within itself.\n     * @default true\n     */\n    this.shouldTrapFocus = true;\n  }\n}\nlet NotificationComponent = /*#__PURE__*/(() => {\n  class NotificationComponent extends AbstractFdNgxClass {\n    /** @hidden */\n    get _inDialog() {\n      return this._popover?.mobile;\n    }\n    /** @hidden */\n    constructor(_elRef, _componentFactoryResolver, _cdRef, _router, _focusTrapFactory, _notificationConfig, _notificationRef, _rtlService, _popover) {\n      super(_elRef);\n      this._elRef = _elRef;\n      this._componentFactoryResolver = _componentFactoryResolver;\n      this._cdRef = _cdRef;\n      this._router = _router;\n      this._focusTrapFactory = _focusTrapFactory;\n      this._notificationConfig = _notificationConfig;\n      this._notificationRef = _notificationRef;\n      this._rtlService = _rtlService;\n      this._popover = _popover;\n      /** Whether the notification is dismissed with the ESC key */\n      this.escKeyCloseable = false;\n      /** Whether the notification should close with router change */\n      this.closeOnNavigation = true;\n      /** Reference to the child content */\n      this.childContent = undefined;\n      /** @hidden */\n      this._onDestroy$ = new Subject();\n      /** @hidden */\n      this._afterViewInit$ = new BehaviorSubject(false);\n      this._setNotificationConfig(this._notificationConfig);\n    }\n    /** @hidden */\n    ngOnInit() {\n      this._rtlService?.rtl.pipe(takeUntil(this._onDestroy$)).subscribe(isRtl => {\n        this._dir = isRtl ? 'rtl' : 'ltr';\n        this._cdRef.markForCheck();\n      });\n      this._listenAndCloseOnNavigation();\n      this._setProperties();\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      if (this.childContent) {\n        if (this.childContent instanceof Type) {\n          this._loadFromComponent(this.childContent);\n        }\n        if (this.childContent instanceof TemplateRef) {\n          this._loadFromTemplate(this.childContent);\n        }\n      }\n      this._afterViewInit$.next(true);\n      this._cdRef.detectChanges();\n    }\n    /**\n     * Moves the focus inside the focus trap.\n     * @returns\n     * Returns a promise that resolves with a boolean, depending on whether focus was moved successfully.\n     */\n    trapFocus() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        // waiting for afterViewInit hook to fire\n        yield _this._afterViewInit$.pipe(filter(Boolean), take(1), takeUntil(_this._onDestroy$)).toPromise();\n        if (!_this._focusTrap) {\n          _this._focusTrap = _this._focusTrapFactory.create(_this._elRef.nativeElement);\n        }\n        return _this._focusTrap.focusFirstTabbableElementWhenReady();\n      })();\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._onDestroy$.next();\n    }\n    /** @hidden Listen and close notification on Escape key */\n    _closeNotificationEsc(event) {\n      if (this.escKeyCloseable && KeyUtil.isKeyCode(event, ESCAPE) && this._notificationRef) {\n        this._notificationRef.dismiss('escape');\n      }\n    }\n    /** @hidden Listen on NavigationStart event and dismiss the dialog */\n    _listenAndCloseOnNavigation() {\n      if (this._router && this._notificationRef) {\n        this._router.events.pipe(filter(event => event instanceof NavigationStart && this.closeOnNavigation), takeUntil(this._onDestroy$)).subscribe(() => this._notificationRef.dismiss());\n      }\n    }\n    /** @hidden */\n    _loadFromComponent(content) {\n      this.containerRef.clear();\n      const componentFactory = this._componentFactoryResolver.resolveComponentFactory(content);\n      this.componentRef = this.containerRef.createComponent(componentFactory);\n    }\n    /** @hidden */\n    _loadFromTemplate(content) {\n      this.containerRef.clear();\n      const context = {\n        $implicit: this._notificationRef\n      };\n      this.componentRef = this.containerRef.createEmbeddedView(content, context);\n    }\n    /** @hidden */\n    _setProperties() {\n      this._addClassToElement('fd-notification');\n      this._addClassToElement('fd-notification-custom-block');\n      if (this.mobile) {\n        this._addClassToElement('fd-notification--mobile');\n      }\n    }\n    /** @hidden */\n    _setNotificationConfig(notificationConfig) {\n      Object.keys(notificationConfig || {}).filter(key => key !== 'data' && key !== 'container').forEach(key => this[key] = notificationConfig[key]);\n    }\n  }\n  NotificationComponent.ɵfac = function NotificationComponent_Factory(t) {\n    return new (t || NotificationComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ConfigurableFocusTrapFactory), i0.ɵɵdirectiveInject(NotificationConfig, 8), i0.ɵɵdirectiveInject(NotificationRef, 8), i0.ɵɵdirectiveInject(i1$1.RtlService, 8), i0.ɵɵdirectiveInject(FD_POPOVER_COMPONENT, 8));\n  };\n  NotificationComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NotificationComponent,\n    selectors: [[\"fd-notification\"]],\n    viewQuery: function NotificationComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5, ViewContainerRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"alertdialog\"],\n    hostVars: 8,\n    hostBindings: function NotificationComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keyup\", function NotificationComponent_keyup_HostBindingHandler($event) {\n          return ctx._closeNotificationEsc($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-label\", ctx.ariaLabel)(\"dir\", ctx._dir)(\"id\", ctx.id);\n        i0.ɵɵstyleProp(\"width\", ctx.width);\n        i0.ɵɵclassProp(\"fd-notification--in-dialog\", ctx._inDialog);\n      }\n    },\n    inputs: {\n      width: \"width\",\n      mobile: \"mobile\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 3,\n    vars: 0,\n    consts: [[\"vc\", \"\"]],\n    template: function NotificationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n        i0.ɵɵelementContainer(1, null, 0);\n      }\n    },\n    styles: [\"@charset \\\"UTF-8\\\";/*!\\n * Fundamental Library Styles v0.28.3\\n * Copyright (c) 2023 SAP SE or an SAP affiliate company.\\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/main/LICENSE)\\n */.fd-notification{-webkit-box-sizing:border-box;-webkit-box-shadow:var(--sapContent_Shadow0);background-color:var(--sapList_Background);border:0;border-radius:.25rem;box-shadow:var(--sapContent_Shadow0);box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0 0 1.25rem;max-width:40rem;padding:1rem .5rem 1rem 1rem;width:100%}.fd-notification:after,.fd-notification:before{box-sizing:inherit;font-size:inherit}.fd-notification[dir=rtl],[dir=rtl] .fd-notification{padding-left:.5rem;padding-right:1rem}.fd-notification__body{-webkit-box-sizing:border-box;-webkit-box-pack:justify;-ms-flex-pack:justify;border:0;box-sizing:border-box;color:var(--sapTextColor);display:flex;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;justify-content:space-between;line-height:var(--sapContent_LineHeight);margin:0;padding:0}.fd-notification__body:after,.fd-notification__body:before{box-sizing:inherit;font-size:inherit}.fd-notification__body--message{padding-top:1rem}.fd-notification__content{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0 0 0 1rem;overflow:auto;padding:0;width:100%}.fd-notification__content:after,.fd-notification__content:before{box-sizing:inherit;font-size:inherit}.fd-notification__content[dir=rtl],[dir=rtl] .fd-notification__content{margin-left:0;margin-right:1rem}.fd-notification__content:first-child{margin-left:0}.fd-notification__content:first-child[dir=rtl],[dir=rtl] .fd-notification__content:first-child{margin-right:0}.fd-notification .fd-notification__title{-webkit-box-sizing:border-box;-webkit-box-orient:vertical;-webkit-line-clamp:2;border:0;box-sizing:border-box;color:var(--sapTextColor);display:-webkit-box;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-size:var(--sapFontHeader6Size);font-weight:400;font-weight:var(--sapFontHeaderWeight);forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0 0 .25rem;max-height:2.5rem;overflow:hidden;padding:0;text-overflow:ellipsis;white-space:normal}.fd-notification .fd-notification__title:after,.fd-notification .fd-notification__title:before{box-sizing:inherit;font-size:inherit}.fd-notification .fd-notification__title--unread{font-weight:700}.fd-notification .fd-notification__paragraph{-webkit-box-sizing:border-box;-webkit-box-orient:vertical;-webkit-line-clamp:2;border:0;box-sizing:border-box;color:var(--sapTextColor);display:-webkit-box;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:.5rem 0 0;max-height:2.75rem;overflow:hidden;padding:0;text-overflow:ellipsis;white-space:normal}.fd-notification .fd-notification__paragraph:after,.fd-notification .fd-notification__paragraph:before{box-sizing:inherit;font-size:inherit}.fd-notification .fd-notification__footer{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);display:flex;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:.5rem 0 0;padding:0}.fd-notification .fd-notification__footer:after,.fd-notification .fd-notification__footer:before{box-sizing:inherit;font-size:inherit}.fd-notification .fd-notification__footer-content{max-width:50%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.fd-notification .fd-notification__footer-content:only-child{max-width:100%}.fd-notification .fd-notification__separator{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0 .5rem;padding:0}.fd-notification .fd-notification__separator:after,.fd-notification .fd-notification__separator:before{box-sizing:inherit;font-size:inherit}.fd-notification .fd-notification__separator:before{content:\\\"\\\\b7\\\"}.fd-notification__header{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);display:flex;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:0}.fd-notification__header:after,.fd-notification__header:before{box-sizing:inherit;font-size:inherit}.fd-notification__actions{-webkit-box-sizing:border-box;-webkit-box-align:start;-ms-flex-align:start;-webkit-box-flex:1;-ms-flex:1 0 auto;align-items:flex-start;border:0;box-sizing:border-box;color:var(--sapTextColor);display:flex;flex:1 0 auto;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:0 0 0 1rem}.fd-notification__actions:after,.fd-notification__actions:before{box-sizing:inherit;font-size:inherit}.fd-notification__actions[dir=rtl],[dir=rtl] .fd-notification__actions{padding-left:0;padding-right:1rem}.fd-notification__actions>*{margin-left:.5rem}.fd-notification__actions>:first-child{margin-left:0}.fd-notification__actions>[dir=rtl],[dir=rtl] .fd-notification__actions>*{margin-left:0;margin-right:.5rem}.fd-notification__limit{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:1rem;text-align:center}.fd-notification__limit:after,.fd-notification__limit:before{box-sizing:inherit;font-size:inherit}.fd-notification__limit--title{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-size:var(--sapFontHeader5Size);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:0;white-space:break-spaces}.fd-notification__limit--title:after,.fd-notification__limit--title:before{box-sizing:inherit;font-size:inherit}.fd-notification__limit--description{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:.5rem 0 0;padding:0;white-space:break-spaces}.fd-notification__limit--description:after,.fd-notification__limit--description:before{box-sizing:inherit;font-size:inherit}.fd-notification__indicator{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:0 .5rem 0 0}.fd-notification__indicator:after,.fd-notification__indicator:before{box-sizing:inherit;font-size:inherit}.fd-notification__indicator[dir=rtl],[dir=rtl] .fd-notification__indicator{padding-left:.5rem;padding-right:0}.fd-notification__indicator--error{color:var(--sapErrorColor)}.fd-notification__indicator--error:before{content:\\\"\\\\e0b1\\\";font-family:SAP-icons;text-align:center;text-decoration:inherit;text-rendering:optimizeLegibility;text-transform:none}.fd-notification__indicator--success{color:var(--sapSuccessColor)}.fd-notification__indicator--success:before{content:\\\"\\\\e203\\\";font-family:SAP-icons;text-align:center;text-decoration:inherit;text-rendering:optimizeLegibility;text-transform:none}.fd-notification__indicator--warning{color:var(--sapWarningColor)}.fd-notification__indicator--warning:before{content:\\\"\\\\e201\\\";font-family:SAP-icons;text-align:center;text-decoration:inherit;text-rendering:optimizeLegibility;text-transform:none}.fd-notification__indicator--information{color:var(--sapInformationColor)}.fd-notification__indicator--information:before{content:\\\"\\\\e202\\\";font-family:SAP-icons;text-align:center;text-decoration:inherit;text-rendering:optimizeLegibility;text-transform:none}.fd-notification--group{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;height:100%;line-height:var(--sapContent_LineHeight);margin:0;overflow:hidden;padding:0}.fd-notification--group:after,.fd-notification--group:before{box-sizing:inherit;font-size:inherit}.fd-notification--group .fd-notification__body:last-of-type{border-bottom:none;border-bottom-left-radius:0;border-bottom-right-radius:0}.fd-notification--group .fd-notification__body{border-bottom:var(--sapList_BorderWidth) solid var(--sapList_BorderColor);padding:1rem .5rem 1rem 1rem}.fd-notification--group .fd-notification__body[dir=rtl],[dir=rtl] .fd-notification--group .fd-notification__body{padding-left:.5rem;padding-right:1rem}.fd-notification--group .fd-notification__group-header{-webkit-box-sizing:border-box;align-items:baseline;border:0;border-bottom:var(--sapList_BorderWidth) solid var(--sapList_BorderColor);box-sizing:border-box;color:var(--sapTextColor);display:flex;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:.75rem .5rem .25rem 1rem}.fd-notification--group .fd-notification__group-header:after,.fd-notification--group .fd-notification__group-header:before{box-sizing:inherit;font-size:inherit}.fd-notification--group .fd-notification__group-header[dir=rtl],[dir=rtl] .fd-notification--group .fd-notification__group-header{padding-left:.5rem;padding-right:1rem}.fd-notification--group[dir=rtl],[dir=rtl] .fd-notification--group{padding-left:0;padding-right:0}.fd-notification--mobile{padding:0}.fd-notification--mobile .fd-notification__body:last-of-type{border-bottom:none;border-bottom-left-radius:0;border-bottom-right-radius:0}.fd-notification--mobile .fd-notification__indicator{padding-right:.25rem}.fd-notification--mobile .fd-notification__indicator[dir=rtl],[dir=rtl] .fd-notification--mobile .fd-notification__indicator{padding-left:.75rem;padding-right:0}.fd-notification--mobile .fd-notification__group-header{padding:.5rem .5rem 0}.fd-notification--mobile .fd-notification__body{padding:1rem .5rem 1rem .75rem}.fd-notification--mobile .fd-notification__body[dir=rtl],[dir=rtl] .fd-notification--mobile .fd-notification__body{padding-left:.5rem;padding-right:.75rem}.fd-notification--mobile .fd-notification__content{margin-left:.75rem}.fd-notification--mobile .fd-notification__content[dir=rtl],[dir=rtl] .fd-notification--mobile .fd-notification__content{margin-left:0;margin-right:.75rem}.fd-notification--in-dialog{-webkit-box-shadow:none;border-bottom:var(--sapList_BorderWidth) solid var(--sapList_BorderColor);border-bottom-left-radius:0;border-bottom-right-radius:0;box-shadow:none;margin-bottom:0}.fd-notification--in-dialog:last-of-type{border-bottom:none}.fd-notification-custom-block{display:block}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NotificationComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NotificationService = /*#__PURE__*/(() => {\n  class NotificationService {\n    /**\n     * @hidden\n     */\n    constructor(_dynamicComponentService, _document, _rtlService) {\n      this._dynamicComponentService = _dynamicComponentService;\n      this._document = _document;\n      this._rtlService = _rtlService;\n      /** @hidden */\n      this.notifications = [];\n    }\n    /**\n     * Opens a notification component with a content of type TemplateRef or Component Type\n     * @param content Content of the notification component.\n     * @param notificationConfig Configuration of the notification component.\n     */\n    open(content, notificationConfig = new NotificationConfig()) {\n      // Reassigning Object And Service\n      const notificationService = new NotificationRef();\n      notificationConfig = Object.assign(new NotificationConfig(), notificationConfig);\n      notificationService.data = notificationConfig.data;\n      // Create Container if it doesn't exist\n      if (!this.containerRef) {\n        this.containerRef = this._dynamicComponentService.createDynamicComponent(content, NotificationContainer, notificationConfig);\n      }\n      // Pass Container reference to config\n      notificationConfig.container = this.containerRef.location.nativeElement;\n      const injector = Injector.create({\n        providers: [{\n          provide: NotificationConfig,\n          useValue: notificationConfig\n        }, {\n          provide: NotificationRef,\n          useValue: notificationService\n        }, {\n          provide: RtlService,\n          useValue: this._rtlService\n        }]\n      });\n      // Create Notification Component\n      const notificationComponentRef = this._dynamicComponentService.createDynamicComponent(content, NotificationComponent, notificationConfig, {\n        injector\n      });\n      if (notificationConfig.shouldTrapFocus) {\n        const element = this._document.activeElement;\n        this._elementFocusedBeforeNotificationWasOpened = typeof element?.focus === 'function' ? element : undefined;\n        notificationComponentRef.instance.trapFocus();\n      }\n      // Add To array\n      this.notifications.push({\n        notificationComponent: notificationComponentRef,\n        notificationConfig\n      });\n      const defaultBehaviourOnClose = () => {\n        this._destroyNotificationComponent(notificationComponentRef);\n        refSub.unsubscribe();\n      };\n      const refSub = notificationService.afterClosed.subscribe(defaultBehaviourOnClose, defaultBehaviourOnClose);\n      return notificationService;\n    }\n    /** Method to remove all of notifications from this service instance */\n    destroyAll() {\n      this.notifications.forEach(notification => {\n        this._destroyNotificationComponent(notification.notificationComponent);\n      });\n    }\n    /** Method that informs if there is any notification opened in this service instance */\n    isAnyOpened() {\n      return this.notifications && this.notifications.length > 0;\n    }\n    /** @hidden Method that destroys the Notification component */\n    _destroyNotificationComponent(notification) {\n      this.notifications = this.notifications.filter(item => item.notificationComponent !== notification);\n      this._dynamicComponentService.destroyComponent(notification);\n      // If there is no other notification Components, just remove container.\n      if (this.notifications.length === 0 && this.containerRef) {\n        this._dynamicComponentService.destroyComponent(this.containerRef);\n        this.containerRef = null;\n        this._restoreFocus();\n      } else {\n        // otherwise attempt to move focus to previous notification\n        const last = this.notifications[this.notifications.length - 1];\n        if (last.notificationConfig.shouldTrapFocus) {\n          last.notificationComponent.instance.trapFocus();\n        } else {\n          this._restoreFocus();\n        }\n      }\n    }\n    /** @hidden attempts to focus previously selected element */\n    _restoreFocus() {\n      if (typeof this._elementFocusedBeforeNotificationWasOpened?.focus === 'function') {\n        this._elementFocusedBeforeNotificationWasOpened.focus();\n      }\n    }\n  }\n  NotificationService.ɵfac = function NotificationService_Factory(t) {\n    return new (t || NotificationService)(i0.ɵɵinject(i1$1.DynamicComponentService), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1$1.RtlService, 8));\n  };\n  NotificationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NotificationService,\n    factory: NotificationService.ɵfac\n  });\n  return NotificationService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet notificationHeaderCounter = 0;\nlet NotificationHeaderComponent = /*#__PURE__*/(() => {\n  class NotificationHeaderComponent {\n    constructor() {\n      /** @hidden */\n      this.fdNotificationHeaderClass = true;\n      /** Unique id for the notification header */\n      this.uniqueId = `fd-notification-header-${++notificationHeaderCounter}`;\n    }\n  }\n  NotificationHeaderComponent.ɵfac = function NotificationHeaderComponent_Factory(t) {\n    return new (t || NotificationHeaderComponent)();\n  };\n  NotificationHeaderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NotificationHeaderComponent,\n    selectors: [[\"fd-notification-header\"]],\n    hostVars: 3,\n    hostBindings: function NotificationHeaderComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.uniqueId);\n        i0.ɵɵclassProp(\"fd-notification__header\", ctx.fdNotificationHeaderClass);\n      }\n    },\n    inputs: {\n      uniqueId: \"uniqueId\"\n    },\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    template: function NotificationHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NotificationHeaderComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NotificationFooterComponent = /*#__PURE__*/(() => {\n  class NotificationFooterComponent {\n    constructor() {\n      /** @hidden */\n      this.fdNotificationFooterClass = true;\n    }\n  }\n  NotificationFooterComponent.ɵfac = function NotificationFooterComponent_Factory(t) {\n    return new (t || NotificationFooterComponent)();\n  };\n  NotificationFooterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NotificationFooterComponent,\n    selectors: [[\"fd-notification-footer\"]],\n    hostVars: 2,\n    hostBindings: function NotificationFooterComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-notification__footer\", ctx.fdNotificationFooterClass);\n      }\n    },\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    template: function NotificationFooterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NotificationFooterComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NotificationActionsComponent = /*#__PURE__*/(() => {\n  class NotificationActionsComponent {\n    constructor() {\n      /** @hidden */\n      this.fdNotificationActionsClass = true;\n    }\n  }\n  NotificationActionsComponent.ɵfac = function NotificationActionsComponent_Factory(t) {\n    return new (t || NotificationActionsComponent)();\n  };\n  NotificationActionsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NotificationActionsComponent,\n    selectors: [[\"fd-notification-actions\"]],\n    contentQueries: function NotificationActionsComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, FD_BUTTON_COMPONENT, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.buttons = _t);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function NotificationActionsComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-notification__actions\", ctx.fdNotificationActionsClass);\n      }\n    },\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    template: function NotificationActionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NotificationActionsComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NotificationGroupBaseDirective = /*#__PURE__*/(() => {\n  class NotificationGroupBaseDirective {\n    /** @hidden */\n    constructor(renderer) {\n      this.renderer = renderer;\n      /** @hidden */\n      this.onDestroy$ = new Subject();\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      // TODO: update startWith args to be \"undefined\" after migration to rxjs 7.\n      // Now it throws irrelevant warning about deprecation\n      const headersChanges$ = this.notificationHeader.changes.pipe(startWith(0));\n      const actionsChanges$ = this.notificationActions.changes.pipe(startWith(0), switchMap(() => {\n        // also listen to button changes for each notificationActions component\n        const buttonsChanges$ = this.notificationActions.toArray().reduce((acc, c) => acc.concat(c.buttons.changes), []);\n        return merge(buttonsChanges$).pipe(startWith(0));\n      }));\n      merge(headersChanges$, actionsChanges$).pipe(debounceTime(10),\n      // omitting extra emissions\n      filter(() => this.notificationHeader.length > 0 && this.notificationActions.length > 0), takeUntil(this.onDestroy$)).subscribe(() => {\n        // using only the first header for \"aria-describedby\" of associated buttons\n        const firstHeader = this.notificationHeader.first;\n        this.notificationActions.forEach(actionsComponent => {\n          actionsComponent.buttons.toArray().map(b => b.elementRef().nativeElement)\n          // skipping buttons that already have this attribute\n          .filter(b => !b.hasAttribute('aria-describedby')).forEach(b => {\n            // setting aria-describedby on each button with an id of related header\n            this.renderer.setAttribute(b, 'aria-describedby', firstHeader.uniqueId);\n          });\n        });\n      });\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this.onDestroy$.next();\n    }\n  }\n  NotificationGroupBaseDirective.ɵfac = function NotificationGroupBaseDirective_Factory(t) {\n    return new (t || NotificationGroupBaseDirective)(i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  NotificationGroupBaseDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NotificationGroupBaseDirective,\n    contentQueries: function NotificationGroupBaseDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NotificationHeaderComponent, 5);\n        i0.ɵɵcontentQuery(dirIndex, NotificationActionsComponent, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.notificationHeader = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.notificationActions = _t);\n      }\n    }\n  });\n  return NotificationGroupBaseDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NotificationBodyComponent = /*#__PURE__*/(() => {\n  class NotificationBodyComponent extends NotificationGroupBaseDirective {\n    constructor() {\n      super(...arguments);\n      /** @hidden */\n      this.fdNotificationBodyClass = true;\n    }\n  }\n  NotificationBodyComponent.ɵfac = /* @__PURE__ */function () {\n    let ɵNotificationBodyComponent_BaseFactory;\n    return function NotificationBodyComponent_Factory(t) {\n      return (ɵNotificationBodyComponent_BaseFactory || (ɵNotificationBodyComponent_BaseFactory = i0.ɵɵgetInheritedFactory(NotificationBodyComponent)))(t || NotificationBodyComponent);\n    };\n  }();\n  NotificationBodyComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NotificationBodyComponent,\n    selectors: [[\"fd-notification-body\"]],\n    hostVars: 2,\n    hostBindings: function NotificationBodyComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-notification__body\", ctx.fdNotificationBodyClass);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    template: function NotificationBodyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NotificationBodyComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NotificationContentComponent = /*#__PURE__*/(() => {\n  class NotificationContentComponent {\n    constructor() {\n      /** @hidden */\n      this.fdNotificationFooterClass = true;\n    }\n  }\n  NotificationContentComponent.ɵfac = function NotificationContentComponent_Factory(t) {\n    return new (t || NotificationContentComponent)();\n  };\n  NotificationContentComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NotificationContentComponent,\n    selectors: [[\"fd-notification-content\"]],\n    hostVars: 2,\n    hostBindings: function NotificationContentComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-notification__content\", ctx.fdNotificationFooterClass);\n      }\n    },\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    template: function NotificationContentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NotificationContentComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NotificationLimitComponent = /*#__PURE__*/(() => {\n  class NotificationLimitComponent {\n    constructor() {\n      /** @hidden */\n      this.fdNotificationLimitClass = true;\n    }\n  }\n  NotificationLimitComponent.ɵfac = function NotificationLimitComponent_Factory(t) {\n    return new (t || NotificationLimitComponent)();\n  };\n  NotificationLimitComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NotificationLimitComponent,\n    selectors: [[\"fd-notification-limit\"]],\n    hostVars: 2,\n    hostBindings: function NotificationLimitComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-notification__limit\", ctx.fdNotificationLimitClass);\n      }\n    },\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    template: function NotificationLimitComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NotificationLimitComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NotificationGroupHeaderComponent = /*#__PURE__*/(() => {\n  class NotificationGroupHeaderComponent extends NotificationGroupBaseDirective {\n    /** @hidden */\n    get expandDescribedBy() {\n      return this.notificationHeader?.first?.uniqueId;\n    }\n    /** @hidden */\n    get _expandButtonContentDensity() {\n      return typeof this.expandCompact === 'undefined' ? 'global' : ContentDensityMode.COMPACT;\n    }\n    /** @hidden */\n    constructor(_cdRef, _rtlService, renderer) {\n      super(renderer);\n      this._cdRef = _cdRef;\n      this._rtlService = _rtlService;\n      /** @hidden */\n      this.fdNotificationGroupHeaderClass = true;\n      /** @hidden */\n      this._rtl = false;\n      /** @hidden */\n      this._subscriptions = new Subscription();\n      /** Whether the button is in expanded state */\n      this.expanded = true;\n      /** Output event triggered when the Expand button is clicked */\n      this.expandedChange = new EventEmitter();\n    }\n    /** @hidden */\n    ngOnInit() {\n      this._listenRtl();\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._subscriptions.unsubscribe();\n    }\n    /** Method that toggles the Notification list content */\n    toggleExpand() {\n      this.expanded = !this.expanded;\n      this.expandedChange.emit(this.expanded);\n    }\n    /** @hidden */\n    _getButtonIcon() {\n      return this.expanded ? 'slim-arrow-down' : this._rtl ? 'slim-arrow-left' : 'slim-arrow-right';\n    }\n    /** @hidden */\n    _listenRtl() {\n      if (this._rtlService) {\n        this._subscriptions.add(this._rtlService.rtl.subscribe(rtl => {\n          this._rtl = rtl;\n          this._cdRef.markForCheck();\n        }));\n      }\n    }\n  }\n  NotificationGroupHeaderComponent.ɵfac = function NotificationGroupHeaderComponent_Factory(t) {\n    return new (t || NotificationGroupHeaderComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.RtlService, 8), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  NotificationGroupHeaderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NotificationGroupHeaderComponent,\n    selectors: [[\"fd-notification-group-header\"]],\n    hostVars: 2,\n    hostBindings: function NotificationGroupHeaderComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-notification__group-header\", ctx.fdNotificationGroupHeaderClass);\n      }\n    },\n    inputs: {\n      expandCompact: \"expandCompact\",\n      expandAriaLabel: \"expandAriaLabel\",\n      expandAriaLabelledBy: \"expandAriaLabelledBy\",\n      expanded: \"expanded\"\n    },\n    outputs: {\n      expandedChange: \"expandedChange\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c3,\n    decls: 6,\n    vars: 7,\n    consts: [[\"fd-button\", \"\", \"fdType\", \"transparent\", \"role\", \"button\", 3, \"fdContentDensity\", \"click\"], [1, \"fd-notification__content\"]],\n    template: function NotificationGroupHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c2);\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function NotificationGroupHeaderComponent_Template_button_click_0_listener() {\n          return ctx.toggleExpand();\n        });\n        i0.ɵɵelement(1, \"i\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵprojection(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵprojection(4, 1);\n        i0.ɵɵprojection(5, 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"fdContentDensity\", ctx._expandButtonContentDensity);\n        i0.ɵɵattribute(\"aria-expanded\", ctx.expanded)(\"aria-describedby\", ctx.expandDescribedBy)(\"aria-label\", ctx.expandAriaLabel)(\"aria-labelledby\", ctx.expandAriaLabelledBy);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassMap(\"sap-icon--\" + ctx._getButtonIcon());\n      }\n    },\n    dependencies: [i2$1.ButtonComponent, i3.ContentDensityDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NotificationGroupHeaderComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NotificationGroupComponent = /*#__PURE__*/(() => {\n  class NotificationGroupComponent {\n    /** @hidden */\n    constructor(_elementRef, _popover) {\n      this._elementRef = _elementRef;\n      this._popover = _popover;\n      /** Whether the Notification Group is in mobile mode */\n      this.mobile = false;\n      if (this._popover) {\n        this._popover.focusTrapped = true;\n        this._popover.focusAutoCapture = true;\n      }\n    }\n    /** @hidden */\n    ngOnChanges() {\n      this.buildComponentCssClass();\n    }\n    /** @hidden CssClassBuilder interface implementation\n     * function is responsible for order which css classes are applied\n     */\n    buildComponentCssClass() {\n      return ['fd-notification fd-notification--group fd-notification-custom-block', this.mobile ? 'fd-notification--mobile' : '', this.class];\n    }\n    /** @hidden */\n    elementRef() {\n      return this._elementRef;\n    }\n    /** @hidden */\n    ngOnInit() {\n      this.buildComponentCssClass();\n    }\n  }\n  NotificationGroupComponent.ɵfac = function NotificationGroupComponent_Factory(t) {\n    return new (t || NotificationGroupComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(FD_POPOVER_COMPONENT, 8));\n  };\n  NotificationGroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NotificationGroupComponent,\n    selectors: [[\"fd-notification-group\"]],\n    hostVars: 2,\n    hostBindings: function NotificationGroupComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"width\", ctx.width);\n      }\n    },\n    inputs: {\n      class: \"class\",\n      mobile: \"mobile\",\n      width: \"width\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    template: function NotificationGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  __decorate([applyCssClass, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", Array)], NotificationGroupComponent.prototype, \"buildComponentCssClass\", null);\n  return NotificationGroupComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NotificationGroupListComponent = /*#__PURE__*/(() => {\n  class NotificationGroupListComponent {\n    /** @hidden */\n    constructor(_changeDetectorRef) {\n      this._changeDetectorRef = _changeDetectorRef;\n      /** @hidden */\n      this._subscriptions = new Subscription();\n    }\n    /** @hidden */\n    ngAfterContentInit() {\n      this.expanded = this.groupHeader.expanded;\n      this._subscriptions.add(this.groupHeader.expandedChange.subscribe(value => {\n        this.expanded = value;\n        this._changeDetectorRef.detectChanges();\n      }));\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._subscriptions.unsubscribe();\n    }\n  }\n  NotificationGroupListComponent.ɵfac = function NotificationGroupListComponent_Factory(t) {\n    return new (t || NotificationGroupListComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  NotificationGroupListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NotificationGroupListComponent,\n    selectors: [[\"fd-notification-group-list\"]],\n    contentQueries: function NotificationGroupListComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NotificationGroupHeaderComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.groupHeader = _t.first);\n      }\n    },\n    ngContentSelectors: _c5,\n    decls: 2,\n    vars: 1,\n    consts: [[4, \"ngIf\"]],\n    template: function NotificationGroupListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c4);\n        i0.ɵɵprojection(0);\n        i0.ɵɵtemplate(1, NotificationGroupListComponent_ng_container_1_Template, 2, 0, \"ng-container\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.expanded);\n      }\n    },\n    dependencies: [i1$2.NgIf],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NotificationGroupListComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NotificationTitleDirective = /*#__PURE__*/(() => {\n  class NotificationTitleDirective {\n    constructor() {\n      /** @hidden */\n      this.fdNotificationTitleClass = true;\n      /** Whether the title is unread. */\n      this.unread = false;\n    }\n  }\n  NotificationTitleDirective.ɵfac = function NotificationTitleDirective_Factory(t) {\n    return new (t || NotificationTitleDirective)();\n  };\n  NotificationTitleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NotificationTitleDirective,\n    selectors: [[\"\", \"fdNotificationTitle\", \"\"], [\"\", \"fd-notification-title\", \"\"]],\n    hostVars: 4,\n    hostBindings: function NotificationTitleDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-notification__title\", ctx.fdNotificationTitleClass)(\"fd-notification__title--unread\", ctx.unread);\n      }\n    },\n    inputs: {\n      unread: \"unread\"\n    }\n  });\n  return NotificationTitleDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NotificationIndicatorDirective = /*#__PURE__*/(() => {\n  class NotificationIndicatorDirective {\n    /** @hidden */\n    constructor(_elementRef) {\n      this._elementRef = _elementRef;\n    }\n    /** @hidden */\n    ngOnChanges() {\n      this.buildComponentCssClass();\n    }\n    /** @hidden */\n    ngOnInit() {\n      this.buildComponentCssClass();\n    }\n    /** @hidden\n     * CssClassBuilder interface implementation\n     * function must return single string\n     * function is responsible for order which css classes are applied\n     */\n    buildComponentCssClass() {\n      return ['fd-notification__indicator', this.type ? 'fd-notification__indicator--' + this.type : '', this.class];\n    }\n    /** @hidden */\n    elementRef() {\n      return this._elementRef;\n    }\n  }\n  NotificationIndicatorDirective.ɵfac = function NotificationIndicatorDirective_Factory(t) {\n    return new (t || NotificationIndicatorDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  NotificationIndicatorDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NotificationIndicatorDirective,\n    selectors: [[\"\", \"fdNotificationIndicator\", \"\"], [\"\", \"fd-notification-indicator\", \"\"]],\n    inputs: {\n      type: \"type\",\n      class: \"class\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  __decorate([applyCssClass, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", Array)], NotificationIndicatorDirective.prototype, \"buildComponentCssClass\", null);\n  return NotificationIndicatorDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NotificationParagraphDirective = /*#__PURE__*/(() => {\n  class NotificationParagraphDirective {\n    constructor() {\n      /** @hidden */\n      this.fdNotificationParagraphClass = true;\n    }\n  }\n  NotificationParagraphDirective.ɵfac = function NotificationParagraphDirective_Factory(t) {\n    return new (t || NotificationParagraphDirective)();\n  };\n  NotificationParagraphDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NotificationParagraphDirective,\n    selectors: [[\"\", \"fdNotificationParagraph\", \"\"], [\"\", \"fd-notification-paragraph\", \"\"]],\n    hostVars: 2,\n    hostBindings: function NotificationParagraphDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-notification__paragraph\", ctx.fdNotificationParagraphClass);\n      }\n    }\n  });\n  return NotificationParagraphDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NotificationFooterContentDirective = /*#__PURE__*/(() => {\n  class NotificationFooterContentDirective {\n    constructor() {\n      /** @hidden */\n      this.fdNotificationTitleClass = true;\n    }\n  }\n  NotificationFooterContentDirective.ɵfac = function NotificationFooterContentDirective_Factory(t) {\n    return new (t || NotificationFooterContentDirective)();\n  };\n  NotificationFooterContentDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NotificationFooterContentDirective,\n    selectors: [[\"\", \"fdNotificationFooterContent\", \"\"], [\"\", \"fd-notification-footer-content\", \"\"]],\n    hostVars: 2,\n    hostBindings: function NotificationFooterContentDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-notification__footer-content\", ctx.fdNotificationTitleClass);\n      }\n    }\n  });\n  return NotificationFooterContentDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NotificationSeparatorDirective = /*#__PURE__*/(() => {\n  class NotificationSeparatorDirective {\n    constructor() {\n      /** @hidden */\n      this.fdNotificationSeparatorClass = true;\n    }\n  }\n  NotificationSeparatorDirective.ɵfac = function NotificationSeparatorDirective_Factory(t) {\n    return new (t || NotificationSeparatorDirective)();\n  };\n  NotificationSeparatorDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NotificationSeparatorDirective,\n    selectors: [[\"\", \"fdNotificationSeparator\", \"\"], [\"\", \"fd-notification-separator\", \"\"]],\n    hostVars: 2,\n    hostBindings: function NotificationSeparatorDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-notification__separator\", ctx.fdNotificationSeparatorClass);\n      }\n    }\n  });\n  return NotificationSeparatorDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NotificationLimitTitleDirective = /*#__PURE__*/(() => {\n  class NotificationLimitTitleDirective {\n    constructor() {\n      /** @hidden */\n      this.fdNotificationTitleClass = true;\n    }\n  }\n  NotificationLimitTitleDirective.ɵfac = function NotificationLimitTitleDirective_Factory(t) {\n    return new (t || NotificationLimitTitleDirective)();\n  };\n  NotificationLimitTitleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NotificationLimitTitleDirective,\n    selectors: [[\"\", \"fdNotificationLimitTitle\", \"\"], [\"\", \"fd-notification-limit-title\", \"\"]],\n    hostVars: 2,\n    hostBindings: function NotificationLimitTitleDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-notification__limit--title\", ctx.fdNotificationTitleClass);\n      }\n    }\n  });\n  return NotificationLimitTitleDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NotificationLimitDescriptionDirective = /*#__PURE__*/(() => {\n  class NotificationLimitDescriptionDirective {\n    constructor() {\n      /** @hidden */\n      this.fdNotificationDescriptionClass = true;\n    }\n  }\n  NotificationLimitDescriptionDirective.ɵfac = function NotificationLimitDescriptionDirective_Factory(t) {\n    return new (t || NotificationLimitDescriptionDirective)();\n  };\n  NotificationLimitDescriptionDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NotificationLimitDescriptionDirective,\n    selectors: [[\"\", \"fdNotificationLimitDescription\", \"\"], [\"\", \"fd-notification-limit-description\", \"\"]],\n    hostVars: 2,\n    hostBindings: function NotificationLimitDescriptionDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-notification__limit--description\", ctx.fdNotificationDescriptionClass);\n      }\n    }\n  });\n  return NotificationLimitDescriptionDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NotificationModule = /*#__PURE__*/(() => {\n  class NotificationModule {}\n  NotificationModule.ɵfac = function NotificationModule_Factory(t) {\n    return new (t || NotificationModule)();\n  };\n  NotificationModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NotificationModule\n  });\n  NotificationModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DynamicComponentService, NotificationService],\n    imports: [CommonModule, ButtonModule, A11yModule]\n  });\n  return NotificationModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NotificationActionsComponent, NotificationBodyComponent, NotificationComponent, NotificationConfig, NotificationContainer, NotificationContentComponent, NotificationFooterComponent, NotificationFooterContentDirective, NotificationGroupBaseDirective, NotificationGroupComponent, NotificationGroupHeaderComponent, NotificationGroupListComponent, NotificationHeaderComponent, NotificationIndicatorDirective, NotificationLimitComponent, NotificationLimitDescriptionDirective, NotificationLimitTitleDirective, NotificationModule, NotificationParagraphDirective, NotificationRef, NotificationSeparatorDirective, NotificationService, NotificationTitleDirective };\n//# sourceMappingURL=fundamental-ngx-core-notification.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}