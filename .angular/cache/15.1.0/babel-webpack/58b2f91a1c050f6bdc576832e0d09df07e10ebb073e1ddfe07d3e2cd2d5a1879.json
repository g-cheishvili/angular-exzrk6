{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@fundamental-ngx/core/link';\nimport { LinkModule } from '@fundamental-ngx/core/link';\nimport * as i3 from '@fundamental-ngx/cdk/utils';\nimport { LineClampModule } from '@fundamental-ngx/cdk/utils';\nimport * as i4 from '@fundamental-ngx/i18n';\nimport { I18nModule } from '@fundamental-ngx/i18n';\nfunction TextComponent_a_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 5);\n    i0.ɵɵlistener(\"keydown.enter\", function TextComponent_a_4_Template_a_keydown_enter_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleTextView());\n    })(\"click\", function TextComponent_a_4_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.toggleTextView());\n    });\n    i0.ɵɵpipe(1, \"fdTranslate\");\n    i0.ɵɵpipe(2, \"fdTranslate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerText\", ctx_r1.isCollapsed ? ctx_r1.moreLabel || i0.ɵɵpipeBind1(1, 1, \"coreText.moreLabel\") : ctx_r1.lessLabel || i0.ɵɵpipeBind1(2, 3, \"coreText.lessLabel\"));\n  }\n}\nlet TextComponent = /*#__PURE__*/(() => {\n  class TextComponent {\n    /** @hidden */\n    get _isCollapsed() {\n      return this.isCollapsed && !!this.maxLines && this.maxLines > 0;\n    }\n    /** @hidden */\n    get _expandable() {\n      return this.expandable && !!this.maxLines && this.maxLines > 0;\n    }\n    /** @hidden */\n    constructor(_changeDetectorRef) {\n      this._changeDetectorRef = _changeDetectorRef;\n      /**\n       * Max visible lines of text\n       */\n      this.maxLines = null;\n      /**\n       * Property allowing browsers to render whitespace and tabs\n       */\n      this.whitespaces = false;\n      /**\n       * Property for managing hyphenation, using css rule hyphens.\n       */\n      this.hyphenation = null;\n      /**\n       * Option that adds more and less buttons to expand/collapse text\n       */\n      this.expandable = false;\n      /**\n       * Option to set text collapsed or expand on render\n       */\n      this.isCollapsed = true;\n      /**\n       * Event, notifying about collapse state changes\n       */\n      this.isCollapsedChange = new EventEmitter();\n      /** @hidden */\n      this._hasMore = false;\n    }\n    /** @hidden */\n    toggleTextView() {\n      this.isCollapsed = !this.isCollapsed;\n      this.isCollapsedChange.emit(this.isCollapsed);\n    }\n    /** @hidden */\n    checkLineCount(count) {\n      this._hasMore = !!this.maxLines && count > this.maxLines;\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n  TextComponent.ɵfac = function TextComponent_Factory(t) {\n    return new (t || TextComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  TextComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TextComponent,\n    selectors: [[\"fd-text\"]],\n    inputs: {\n      text: \"text\",\n      maxLines: \"maxLines\",\n      whitespaces: \"whitespaces\",\n      hyphenation: \"hyphenation\",\n      expandable: \"expandable\",\n      moreLabel: \"moreLabel\",\n      lessLabel: \"lessLabel\",\n      isCollapsed: \"isCollapsed\"\n    },\n    outputs: {\n      isCollapsedChange: \"isCollapsedChange\"\n    },\n    decls: 5,\n    vars: 8,\n    consts: [[1, \"fd-text\"], [\"fdkLineClamp\", \"\", 1, \"fd-text__lineclamp\", 3, \"fdLineclampState\", \"fdLineClampLines\", \"lineCountUpdate\"], [\"lineClamp\", \"fdLineClamp\"], [\"fdkLineClampTarget\", \"\", 3, \"fdLineClampTargetText\", \"update\"], [\"fd-link\", \"\", \"tabindex\", \"0\", \"class\", \"fd-text__link--more\", 3, \"innerText\", \"keydown.enter\", \"click\", 4, \"ngIf\"], [\"fd-link\", \"\", \"tabindex\", \"0\", 1, \"fd-text__link--more\", 3, \"innerText\", \"keydown.enter\", \"click\"]],\n    template: function TextComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"p\", 0)(1, \"span\", 1, 2);\n        i0.ɵɵlistener(\"lineCountUpdate\", function TextComponent_Template_span_lineCountUpdate_1_listener($event) {\n          return ctx.checkLineCount($event);\n        });\n        i0.ɵɵelementStart(3, \"span\", 3);\n        i0.ɵɵlistener(\"update\", function TextComponent_Template_span_update_3_listener($event) {\n          i0.ɵɵrestoreView(_r5);\n          const _r0 = i0.ɵɵreference(2);\n          return i0.ɵɵresetView(_r0.refreshTarget($event));\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(4, TextComponent_a_4_Template, 3, 5, \"a\", 4);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"hyphens\", ctx.hyphenation);\n        i0.ɵɵclassProp(\"fd-text--pre-wrap\", ctx.whitespaces);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"fdLineclampState\", ctx._isCollapsed)(\"fdLineClampLines\", ctx.maxLines);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"fdLineClampTargetText\", ctx.text);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx._expandable && ctx._hasMore);\n      }\n    },\n    dependencies: [i1.NgIf, i2.LinkComponent, i3.LineClampTargetDirective, i3.LineClampDirective, i4.FdTranslatePipe],\n    styles: [\"/*!\\n * Fundamental Library Styles v0.28.3\\n * Copyright (c) 2023 SAP SE or an SAP affiliate company.\\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/main/LICENSE)\\n */.fd-text{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:0}.fd-text:after,.fd-text:before{box-sizing:inherit;font-size:inherit}.fd-text::selection{background-color:var(--fdText_Selected_Background_Color);color:var(--sapContent_ContrastTextColor)}.fd-text--max-lines{-webkit-box-orient:vertical;display:-webkit-box;overflow:hidden}.fd-text--pre-wrap{white-space:pre-wrap}.fd-text--hyphenation{-webkit-hyphens:auto;hyphens:auto}.fd-text__link--more{cursor:pointer;text-transform:uppercase}.fd-text__lineclamp{display:block}.fd-text__link--more{text-transform:uppercase;cursor:pointer}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return TextComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TextModule = /*#__PURE__*/(() => {\n  class TextModule {}\n  TextModule.ɵfac = function TextModule_Factory(t) {\n    return new (t || TextModule)();\n  };\n  TextModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TextModule\n  });\n  TextModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, LinkModule, LineClampModule, I18nModule]\n  });\n  return TextModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TextComponent, TextModule };\n//# sourceMappingURL=fundamental-ngx-core-text.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}