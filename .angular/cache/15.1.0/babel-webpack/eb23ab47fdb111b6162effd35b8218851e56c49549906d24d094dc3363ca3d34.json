{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Optional, Inject, ViewChild, Input, HostBinding, Output, Directive, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { LIST_ITEM_COMPONENT } from '@fundamental-ngx/cdk/utils';\nimport equal from 'fast-deep-equal';\nimport { Subscription } from 'rxjs';\nimport { registerFormItemControl } from '@fundamental-ngx/core/form';\nimport * as i1 from '@fundamental-ngx/core/content-density';\nimport { contentDensityObserverProviders, DeprecatedCompactDirective, CONTENT_DENSITY_DIRECTIVE, ContentDensityModule } from '@fundamental-ngx/core/content-density';\nconst _c0 = [\"inputElement\"];\nconst _c1 = [\"labelElement\"];\nfunction CheckboxComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.label, \" \");\n  }\n}\nfunction CheckboxComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 6);\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nconst _c2 = [\"*\"];\nconst FD_CHECKBOX_VALUES_DEFAULT = {\n  trueValue: true,\n  falseValue: false,\n  thirdStateValue: null\n};\nconst FD_CHECKBOX_COMPONENT = new InjectionToken('FdCheckboxComponent');\nlet checkboxUniqueId = 0;\nlet CheckboxComponent = /*#__PURE__*/(() => {\n  class CheckboxComponent {\n    /** Current selection state of the checkbox component */\n    set value(value) {\n      this.writeValue(value);\n    }\n    get value() {\n      return this.checkboxValue;\n    }\n    /** Sets values returned by control. */\n    set values(checkboxValues) {\n      this._values = {\n        ...FD_CHECKBOX_VALUES_DEFAULT,\n        ...(checkboxValues ?? {})\n      };\n    }\n    get values() {\n      return this._values;\n    }\n    /** @hidden Used to define if control is in 'indeterminate' state.*/\n    get isIndeterminate() {\n      return this.checkboxState === 'indeterminate';\n    }\n    /** @hidden Used to define if control is in 'checked' / 'unchecked' state. */\n    get isChecked() {\n      return this.checkboxState === 'checked' || this.checkboxState === 'force-checked';\n    }\n    /** @hidden */\n    constructor(elementRef, tabIndexValue = 0, _changeDetectorRef, renderer, _contentDensityObserver, _listItemComponent) {\n      this.elementRef = elementRef;\n      this.tabIndexValue = tabIndexValue;\n      this._changeDetectorRef = _changeDetectorRef;\n      this.renderer = renderer;\n      this._contentDensityObserver = _contentDensityObserver;\n      this._listItemComponent = _listItemComponent;\n      /** Sets [id] property of input, binds input with input label using [for] property. */\n      this.inputId = `fd-checkbox-${checkboxUniqueId++}`;\n      /** Enables controls third state. */\n      this.tristate = false;\n      /** Allows to prevent user from manually selecting controls third state. */\n      this.tristateSelectable = false;\n      /** If it is mandatory field */\n      this.required = false;\n      /** @hidden */\n      this._subscriptions = new Subscription();\n      /** Whether checkbox should be rendered standalone (without any text). */\n      this.standalone = false;\n      /** @hidden */\n      this.position = 'relative';\n      /** @hidden */\n      this.outline = 'none';\n      /** Emits event on focus change */\n      this.focusChange = new EventEmitter();\n      /** @hidden values returned by control. */\n      this._values = {\n        ...FD_CHECKBOX_VALUES_DEFAULT\n      };\n      /** @hidden Reference to callback provided by FormControl.*/\n      this.onTouched = () => {};\n      /** @hidden Reference to callback provided by FormControl.*/\n      this.onValueChange = () => {};\n      this.tabIndexValue = tabIndexValue;\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      this._contentDensityObserver.consume({\n        elementRef: () => this.inputElement\n      }, {\n        elementRef: () => this.labelElement\n      });\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._subscriptions.unsubscribe();\n    }\n    /**\n     * @hidden ControlValueAccessor interface\n     * - sets new control value\n     * - updates control state\n     */\n    writeValue(value) {\n      this.checkboxValue = value;\n      this._setState();\n      this._detectChanges();\n    }\n    /** @hidden ControlValueAccessor interface method - sets onValueChange callback.*/\n    registerOnChange(fn) {\n      this.onValueChange = fn;\n    }\n    /** @hidden ControlValueAccessor interface method - sets onTouched callback.*/\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /** @hidden Called by FormControl - used to disable / enable control.*/\n    setDisabledState(disabled) {\n      this.disabled = disabled;\n      this._detectChanges();\n    }\n    /**\n     * @hidden\n     * Based on current control state:\n     * - sets next control value\n     * - emits new control value\n     * - updates control state based on new control value\n     * */\n    nextValue(previousValue) {\n      switch (previousValue || this.checkboxState) {\n        case 'checked':\n          this.checkboxValue = this.values.falseValue;\n          break;\n        case 'unchecked':\n          this.checkboxValue = this.tristate && this.tristateSelectable ? this.values.thirdStateValue : this.values.trueValue;\n          break;\n        case 'indeterminate':\n        case 'force-checked':\n          this.checkboxValue = this.values.trueValue;\n          this.renderer.setProperty(this.inputElement.nativeElement, 'checked', 'true');\n          break;\n        default:\n          this.checkboxValue = this.tristate && this.tristateSelectable ? this.values.thirdStateValue : this.values.trueValue;\n          break;\n      }\n      this._setState();\n      this.onValueChange(this.checkboxValue);\n      this._detectChanges();\n    }\n    /** @hidden handles blur event */\n    _onBlur() {\n      if (typeof this.onTouched === 'function') {\n        this.onTouched();\n      }\n      this.focusChange.emit(false);\n    }\n    /** @hidden handles focus event */\n    _onFocus() {\n      this.focusChange.emit(true);\n    }\n    /** @hidden handles click on the label associated with native checkbox input */\n    _onLabelClick(event) {\n      // We have to stop propagation for click events on the input label.\n      // By default, when a user clicks on a label element, a generated click event will be\n      // dispatched on the associated input element. This will lead to duplicated \"click\" event dispatched from the component\n      event.stopPropagation();\n    }\n    /** @hidden handles click on the native checkbox input */\n    _onInputClick(event) {\n      // When there's a click event dispatched from the input, we have to catch it, process and then re-dispatch it further.\n      // This is needed in order to set the value to the component before any external listeners will receive it.\n      // Otherwise checkbox might be out of sync.\n      event.stopPropagation();\n      this.nextValue();\n      this.elementRef.nativeElement.dispatchEvent(new MouseEvent(event.type, event));\n    }\n    /** @hidden Based on current control value sets new control state. */\n    _setState() {\n      if (equal(this.checkboxValue, this.values.trueValue)) {\n        this.checkboxState = 'checked';\n      } else if (equal(this.checkboxValue, this.values.falseValue)) {\n        this.checkboxState = 'unchecked';\n      } else if (this.tristate && equal(this.checkboxValue, this.values.thirdStateValue)) {\n        this.checkboxState = 'indeterminate';\n      } else if (!this.checkboxValue) {\n        this.checkboxState = 'unchecked';\n      }\n    }\n    /** Method to trigger change detection in component */\n    _detectChanges() {\n      if (!this._changeDetectorRef['destroyed']) {\n        this._changeDetectorRef.detectChanges();\n      }\n    }\n  }\n  CheckboxComponent.ɵfac = function CheckboxComponent_Factory(t) {\n    return new (t || CheckboxComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵinjectAttribute('tabIndexValue'), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.ContentDensityObserver), i0.ɵɵdirectiveInject(LIST_ITEM_COMPONENT, 8));\n  };\n  CheckboxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CheckboxComponent,\n    selectors: [[\"fd-checkbox\"]],\n    viewQuery: function CheckboxComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.labelElement = _t.first);\n      }\n    },\n    hostVars: 7,\n    hostBindings: function CheckboxComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", -1);\n        i0.ɵɵstyleProp(\"position\", ctx.position)(\"outline\", ctx.outline);\n        i0.ɵɵclassProp(\"fd-checkbox--standalone\", ctx.standalone);\n      }\n    },\n    inputs: {\n      ariaLabel: \"ariaLabel\",\n      value: \"value\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      ariaDescribedBy: \"ariaDescribedBy\",\n      title: \"title\",\n      inputId: \"inputId\",\n      state: \"state\",\n      name: \"name\",\n      label: \"label\",\n      disabled: \"disabled\",\n      tristate: \"tristate\",\n      tristateSelectable: \"tristateSelectable\",\n      labelClass: \"labelClass\",\n      required: \"required\",\n      values: \"values\",\n      standalone: \"standalone\"\n    },\n    outputs: {\n      focusChange: \"focusChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CheckboxComponent),\n      multi: true\n    }, {\n      provide: FD_CHECKBOX_COMPONENT,\n      useExisting: CheckboxComponent\n    }, registerFormItemControl(CheckboxComponent), contentDensityObserverProviders()])],\n    ngContentSelectors: _c2,\n    decls: 7,\n    vars: 21,\n    consts: [[\"type\", \"checkbox\", 1, \"fd-checkbox\", 3, \"id\", \"name\", \"disabled\", \"indeterminate\", \"checked\", \"click\", \"blur\", \"focus\"], [\"inputElement\", \"\"], [1, \"fd-checkbox__label\", 3, \"for\", \"click\"], [\"labelElement\", \"\"], [1, \"fd-checkbox__label-container\"], [4, \"ngIf\"], [1, \"fd-checkbox__text\"]],\n    template: function CheckboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"input\", 0, 1);\n        i0.ɵɵlistener(\"click\", function CheckboxComponent_Template_input_click_0_listener($event) {\n          return ctx._onInputClick($event);\n        })(\"blur\", function CheckboxComponent_Template_input_blur_0_listener() {\n          return ctx._onBlur();\n        })(\"focus\", function CheckboxComponent_Template_input_focus_0_listener() {\n          return ctx._onFocus();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"label\", 2, 3);\n        i0.ɵɵlistener(\"click\", function CheckboxComponent_Template_label_click_2_listener($event) {\n          return ctx._onLabelClick($event);\n        });\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵtemplate(5, CheckboxComponent_ng_container_5_Template, 3, 1, \"ng-container\", 5);\n        i0.ɵɵtemplate(6, CheckboxComponent_ng_container_6_Template, 3, 0, \"ng-container\", 5);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.state ? \"is-\" + ctx.state : \"\");\n        i0.ɵɵproperty(\"id\", ctx.inputId)(\"name\", ctx.name)(\"disabled\", ctx.disabled)(\"indeterminate\", ctx.isIndeterminate)(\"checked\", ctx.isChecked);\n        i0.ɵɵattribute(\"tabindex\", ctx.tabIndexValue)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-describedby\", ctx.ariaDescribedBy)(\"aria-disabled\", ctx.disabled)(\"aria-required\", ctx.required);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMap(ctx.labelClass);\n        i0.ɵɵclassProp(\"fd-checkbox__label--required\", ctx.required);\n        i0.ɵɵproperty(\"for\", ctx.inputId);\n        i0.ɵɵattribute(\"title\", ctx.title);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.label);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.label);\n      }\n    },\n    dependencies: [i2.NgIf],\n    styles: [\"/*!\\n * Fundamental Library Styles v0.28.3\\n * Copyright (c) 2023 SAP SE or an SAP affiliate company.\\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/main/LICENSE)\\n *//*!\\n.fd-checkbox\\n*/.fd-checkbox{-webkit-box-sizing:border-box;-webkit-appearance:none;appearance:none;background-color:var(--sapField_Background);border:0;border-color:var(--sapField_BorderColor);border-radius:var(--sapField_BorderCornerRadius);border-style:solid;border-width:var(--sapField_BorderWidth);box-sizing:border-box;color:var(--sapTextColor);color:var(--sapField_TextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;opacity:.0001;outline:none;overflow:hidden;padding:0;position:absolute;text-overflow:ellipsis;white-space:nowrap}.fd-checkbox:after,.fd-checkbox:before{box-sizing:inherit;font-size:inherit}.fd-checkbox::placeholder{color:var(--sapField_PlaceholderTextColor);font-style:italic}.fd-checkbox::selection{background-color:var(--sapSelectedColor);color:var(--sapContent_ContrastTextColor)}.fd-checkbox.is-success{background:var(--sapField_SuccessBackgroundStyle);background-color:var(--sapField_SuccessBackground);border:var(--sapField_SuccessColor) var(--sapField_SuccessBorderWidth) var(--sapField_SuccessBorderStyle)}.fd-checkbox.is-success.is-hover,.fd-checkbox.is-success:hover{-webkit-box-shadow:var(--fdInput_Success_Box_Shadow_Hover);background-color:var(--fdInput_Success_Background_Color_Hover);border-color:var(--sapField_SuccessColor);box-shadow:var(--fdInput_Success_Box_Shadow_Hover)}.fd-checkbox.is-success.is-focus,.fd-checkbox.is-success:focus{background:var(--sapField_Focus_Background);outline-color:var(--fdInput_Success_Outline_Color);z-index:5}.fd-checkbox.is-success.is-focus.is-hover,.fd-checkbox.is-success.is-focus:hover,.fd-checkbox.is-success:focus.is-hover,.fd-checkbox.is-success:focus:hover{box-shadow:none}.fd-checkbox.is-error{background:var(--sapField_InvalidBackgroundStyle);background-color:var(--sapField_InvalidBackground);border:var(--sapField_InvalidColor) var(--sapField_InvalidBorderWidth) var(--sapField_InvalidBorderStyle)}.fd-checkbox.is-error.is-hover,.fd-checkbox.is-error:hover{-webkit-box-shadow:var(--fdInput_Error_Box_Shadow_Hover);background-color:var(--fdInput_Error_Background_Color_Hover);border-color:var(--sapField_InvalidColor);box-shadow:var(--fdInput_Error_Box_Shadow_Hover)}.fd-checkbox.is-error.is-focus,.fd-checkbox.is-error:focus{background:var(--sapField_Focus_Background);outline-color:var(--fdInput_Error_Outline_Color);z-index:5}.fd-checkbox.is-error.is-focus.is-hover,.fd-checkbox.is-error.is-focus:hover,.fd-checkbox.is-error:focus.is-hover,.fd-checkbox.is-error:focus:hover{box-shadow:none}.fd-checkbox.is-warning{background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapField_WarningBackground);border:var(--sapField_WarningColor) var(--sapField_WarningBorderWidth) var(--sapField_WarningBorderStyle)}.fd-checkbox.is-warning.is-hover,.fd-checkbox.is-warning:hover{-webkit-box-shadow:var(--fdInput_Warning_Box_Shadow_Hover);background-color:var(--fdInput_Warning_Background_Color_Hover);border-color:var(--sapField_WarningColor);box-shadow:var(--fdInput_Warning_Box_Shadow_Hover)}.fd-checkbox.is-warning.is-focus,.fd-checkbox.is-warning:focus{background:var(--sapField_Focus_Background);outline-color:var(--fdInput_Warning_Outline_Color);z-index:5}.fd-checkbox.is-warning.is-focus.is-hover,.fd-checkbox.is-warning.is-focus:hover,.fd-checkbox.is-warning:focus.is-hover,.fd-checkbox.is-warning:focus:hover{box-shadow:none}.fd-checkbox.is-alert{background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapField_WarningBackground);border:var(--sapField_WarningColor) var(--sapField_WarningBorderWidth) var(--sapField_WarningBorderStyle)}.fd-checkbox.is-alert.is-hover,.fd-checkbox.is-alert:hover{-webkit-box-shadow:var(--fdInput_Warning_Box_Shadow_Hover);background-color:var(--fdInput_Warning_Background_Color_Hover);border-color:var(--sapField_WarningColor);box-shadow:var(--fdInput_Warning_Box_Shadow_Hover)}.fd-checkbox.is-alert.is-focus,.fd-checkbox.is-alert:focus{background:var(--sapField_Focus_Background);outline-color:var(--fdInput_Warning_Outline_Color);z-index:5}.fd-checkbox.is-alert.is-focus.is-hover,.fd-checkbox.is-alert.is-focus:hover,.fd-checkbox.is-alert:focus.is-hover,.fd-checkbox.is-alert:focus:hover{box-shadow:none}.fd-checkbox.is-information{background:var(--sapField_InformationBackgroundStyle);background-color:var(--sapField_InformationBackground);border:var(--sapField_InformationColor) var(--sapField_InformationBorderWidth) var(--sapField_InformationBorderStyle)}.fd-checkbox.is-information.is-hover,.fd-checkbox.is-information:hover{-webkit-box-shadow:var(--fdInput_Information_Box_Shadow_Hover);background-color:var(--fdInput_Information_Background_Color_Hover);border-color:var(--sapField_InformationColor);box-shadow:var(--fdInput_Information_Box_Shadow_Hover)}.fd-checkbox.is-information.is-focus,.fd-checkbox.is-information:focus{background:var(--sapField_Focus_Background);outline-color:var(--fdInput_Information_Outline_Color);z-index:5}.fd-checkbox.is-information.is-focus.is-hover,.fd-checkbox.is-information.is-focus:hover,.fd-checkbox.is-information:focus.is-hover,.fd-checkbox.is-information:focus:hover{box-shadow:none}.fd-checkbox.is-alert.is-focus,.fd-checkbox.is-alert:focus,.fd-checkbox.is-error.is-focus,.fd-checkbox.is-error:focus,.fd-checkbox.is-information.is-focus,.fd-checkbox.is-information:focus,.fd-checkbox.is-warning.is-focus,.fd-checkbox.is-warning:focus{outline-offset:var(--fdInput_Outline_Offset_States);z-index:5}.fd-checkbox.is-disabled,.fd-checkbox:disabled,.fd-checkbox[aria-disabled=true]{opacity:var(--sapContent_DisabledOpacity);pointer-events:none}.fd-checkbox.is-readonly,.fd-checkbox[aria-readonly=true],.fd-checkbox[readonly]{background:var(--sapField_ReadOnly_BackgroundStyle);background-color:var(--sapField_ReadOnly_Background);border-color:var(--sapField_ReadOnly_BorderColor);border-radius:var(--fdInput_ReadOnly_Border_Radius)}.fd-checkbox.is-readonly.is-hover,.fd-checkbox.is-readonly:hover,.fd-checkbox[aria-readonly=true].is-hover,.fd-checkbox[aria-readonly=true]:hover,.fd-checkbox[readonly].is-hover,.fd-checkbox[readonly]:hover{-webkit-box-shadow:none;background:var(--sapField_ReadOnly_BackgroundStyle);background-color:var(--sapField_ReadOnly_Background);border-color:var(--sapField_ReadOnly_BorderColor);border-radius:var(--fdInput_ReadOnly_Border_Radius);box-shadow:none}.fd-checkbox.is-readonly.is-focus,.fd-checkbox.is-readonly:focus,.fd-checkbox[aria-readonly=true].is-focus,.fd-checkbox[aria-readonly=true]:focus,.fd-checkbox[readonly].is-focus,.fd-checkbox[readonly]:focus{background:var(--sapField_ReadOnly_BackgroundStyle);background-color:var(--sapField_ReadOnly_Background);border-color:var(--sapField_ReadOnly_BorderColor);border-radius:var(--fdInput_ReadOnly_Border_Radius);z-index:5}.fd-checkbox,.fd-checkbox.is-error,.fd-checkbox.is-information,.fd-checkbox.is-success,.fd-checkbox.is-warning{border-style:initial}.fd-checkbox__label{-webkit-box-sizing:border-box;-ms-flex-item-align:start;align-items:center;align-self:flex-start;border:0;box-sizing:border-box;color:var(--sapTextColor);color:var(--sapContent_LabelColor);cursor:text;cursor:pointer;display:flex;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);line-height:1rem;margin:0 .5rem 0 0;max-width:100%;overflow:hidden;padding:0;padding:var(--fdCheckbox_Padding);position:relative;text-overflow:ellipsis;white-space:nowrap;width:-moz-fit-content;width:fit-content}.fd-checkbox__label:after,.fd-checkbox__label:before{box-sizing:inherit;font-size:inherit}.fd-checkbox__label[dir=rtl],[dir=rtl] .fd-checkbox__label{margin-left:.5rem;margin-right:0}.fd-checkbox__label:before{-webkit-box-pack:center;-ms-flex-pack:center;align-items:center;background-color:var(--fdCheckbox_Background_Color);border:var(--fdCheckbox_Border);border-radius:var(--sapField_BorderCornerRadius);color:var(--fdCheckbox_Selected_Color);content:\\\"\\\";display:inline-flex;font-family:SAP-icons;height:var(--fdCheckbox_Dimensions);justify-content:center;min-width:var(--fdCheckbox_Dimensions);width:var(--fdCheckbox_Dimensions)}.fd-checkbox__label:after{padding-left:.125rem;position:relative}.fd-checkbox__label.is-empty,.fd-checkbox__label:empty{margin:0}.fd-checkbox__label[dir=rtl]:after,[dir=rtl] .fd-checkbox__label:after{padding-left:0;padding-right:.125rem}.fd-checkbox__label.is-hover:before,.fd-checkbox__label:hover:before{-webkit-box-shadow:var(--fdCheckbox_Hover_Shadow);background-color:var(--fdCheckbox_Hover_Background);border-color:var(--fdCheckbox_Hover_Border_Color);box-shadow:var(--fdCheckbox_Hover_Shadow)}.fd-checkbox__label:focus{outline:none}.fd-checkbox__label--required .fd-checkbox__text,.fd-checkbox__label[aria-required=true] .fd-checkbox__text{padding-right:.5rem}.fd-checkbox__label--required .fd-checkbox__text[dir=rtl],.fd-checkbox__label[aria-required=true] .fd-checkbox__text[dir=rtl],[dir=rtl] .fd-checkbox__label--required .fd-checkbox__text,[dir=rtl] .fd-checkbox__label[aria-required=true] .fd-checkbox__text{padding-left:.5rem;padding-right:0}.fd-checkbox__label--required .fd-checkbox__text:after,.fd-checkbox__label[aria-required=true] .fd-checkbox__text:after{color:var(--sapField_RequiredColor);content:\\\"*\\\";font-size:var(--sapFontSize);font-weight:700;padding-left:.125rem;position:absolute}.fd-checkbox__label--required .fd-checkbox__text[dir=rtl]:after,.fd-checkbox__label[aria-required=true] .fd-checkbox__text[dir=rtl]:after,[dir=rtl] .fd-checkbox__label--required .fd-checkbox__text:after,[dir=rtl] .fd-checkbox__label[aria-required=true] .fd-checkbox__text:after{padding-left:0;padding-right:.125rem}.fd-checkbox__label-container{-webkit-box-sizing:border-box;align-items:center;border:0;box-sizing:border-box;color:var(--sapTextColor);display:flex;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;height:1rem;line-height:var(--sapContent_LineHeight);margin:0;padding:0;pointer-events:none;width:100%}.fd-checkbox__label-container:after,.fd-checkbox__label-container:before{box-sizing:inherit;font-size:inherit}.fd-checkbox__text{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;margin-left:var(--fdCheckbox_Padding);margin-right:0;overflow:hidden;padding:0;text-overflow:ellipsis;white-space:nowrap}.fd-checkbox__text:after,.fd-checkbox__text:before{box-sizing:inherit;font-size:inherit}.fd-checkbox__text[dir=rtl],[dir=rtl] .fd-checkbox__text{margin-left:0;margin-right:var(--fdCheckbox_Padding)}.fd-checkbox:checked+.fd-checkbox__label:before{content:\\\"\\\\e05b\\\"}.fd-checkbox:indeterminate+.fd-checkbox__label:after{background-color:var(--fdCheckbox_Selected_Color);content:\\\"\\\";height:var(--fdCheckbox_Tristate_Size);margin-left:var(--fdCheckbox_Tristate_Offset);position:absolute;width:var(--fdCheckbox_Tristate_Size)}.fd-checkbox[dir=rtl]:indeterminate+.fd-checkbox__label:after,[dir=rtl] .fd-checkbox:indeterminate+.fd-checkbox__label:after{margin-left:0;margin-right:var(--fdCheckbox_Tristate_Offset)}.fd-checkbox.is-alert+.fd-checkbox__label,.fd-checkbox.is-warning+.fd-checkbox__label{--fdCheckbox_Background_Color:var(--sapField_WarningBackground);--fdCheckbox_Hover_Background:var(--fdCheckbox_State_Hover_Background);--fdCheckbox_Border:var(--sapField_WarningBorderWidth) var(--fdCheckbox_Warning_Error_Information_Border_Style) var(--sapField_WarningColor);--fdCheckbox_Hover_Shadow:var(--fdCheckbox_Warning_State_Shadow);--fdCheckbox_Hover_Border_Color:var(--sapField_WarningColor);--fdCheckbox_Selected_Color:var(--sapField_TextColor)}.fd-checkbox.is-error+.fd-checkbox__label{--fdCheckbox_Background_Color:var(--sapField_InvalidBackground);--fdCheckbox_Hover_Background:var(--fdCheckbox_State_Hover_Background);--fdCheckbox_Border:var(--sapField_InvalidBorderWidth) var(--fdCheckbox_Warning_Error_Information_Border_Style) var(--sapField_InvalidColor);--fdCheckbox_Hover_Shadow:var(--fdCheckbox_Error_State_Shadow);--fdCheckbox_Hover_Border_Color:var(--sapField_InvalidColor);--fdCheckbox_Selected_Color:var(--sapField_InvalidColor)}.fd-checkbox.is-success+.fd-checkbox__label{--fdCheckbox_Background_Color:var(--sapField_SuccessBackground);--fdCheckbox_Hover_Background:var(--fdCheckbox_State_Hover_Background);--fdCheckbox_Border:var(--sapField_SuccessBorderWidth) solid var(--sapField_SuccessColor);--fdCheckbox_Hover_Shadow:var(--fdCheckbox_Success_State_Shadow);--fdCheckbox_Hover_Border_Color:var(--sapField_SuccessColor);--fdCheckbox_Selected_Color:var(--sapField_SuccessColor)}.fd-checkbox.is-information+.fd-checkbox__label{--fdCheckbox_Background_Color:var(--sapField_InformationBackground);--fdCheckbox_Hover_Background:var(--fdCheckbox_State_Hover_Background);--fdCheckbox_Border:var(--sapField_InformationBorderWidth) var(--fdCheckbox_Warning_Error_Information_Border_Style) var(--sapField_InformationColor);--fdCheckbox_Hover_Shadow:var(--fdCheckbox_Information_State_Shadow);--fdCheckbox_Hover_Border_Color:var(--sapField_InformationColor);--fdCheckbox_Selected_Color:var(--sapField_InformationColor)}.fd-checkbox.is-readonly+.fd-checkbox__label,.fd-checkbox[readonly]+.fd-checkbox__label{--fdCheckbox_Background_Color:var(--sapField_ReadOnly_Background);--fdCheckbox_Hover_Background:var(--fdCheckbox_State_Hover_Background);--fdCheckbox_Border:var(--fdCheckbox_Readonly_Border_Width) var(--fdCheckbox_Readonly_Border_Type) var(--sapField_ReadOnly_BorderColor);--fdCheckbox_Hover_Shadow:none;--fdCheckbox_Hover_Border_Color:var(--sapField_ReadOnly_BorderColor);--fdCheckbox_Selected_Color:var(--sapContent_NonInteractiveIconColor)}.fd-checkbox.is-focus,.fd-checkbox:focus{z-index:5}.fd-checkbox.is-focus+.fd-checkbox__label,.fd-checkbox:focus+.fd-checkbox__label{border-radius:var(--fdCheckbox_Outline_Border_Radius);outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);outline-offset:calc(var(--fdCheckbox_Focus_Outline_Offset) - var(--fdCheckbox_Padding))}.fd-checkbox.is-disabled,.fd-checkbox:disabled,.fd-checkbox[aria-disabled=true]{opacity:.0001}.fd-checkbox.is-disabled+.fd-checkbox__label,.fd-checkbox:disabled+.fd-checkbox__label,.fd-checkbox[aria-disabled=true]+.fd-checkbox__label{opacity:.4;pointer-events:none}.fd-checkbox[class*=-compact]+.fd-checkbox__label,.fd-checkbox[class*=-condensed]+.fd-checkbox__label,[class*=-compact] .fd-checkbox:not([class*=-cozy])+.fd-checkbox__label,[class*=-condensed] .fd-checkbox:not([class*=-cozy])+.fd-checkbox__label{--fdCheckbox_Dimensions:var(--fdCheckbox_Compact_Dimensions);--fdCheckbox_Padding:var(--fdCheckbox_Compact_Padding)}.fd-checkbox[class*=-compact]:indeterminate+.fd-checkbox__label,.fd-checkbox[class*=-condensed]:indeterminate+.fd-checkbox__label,[class*=-compact] .fd-checkbox:not([class*=-cozy]):indeterminate+.fd-checkbox__label,[class*=-condensed] .fd-checkbox:not([class*=-cozy]):indeterminate+.fd-checkbox__label{--fdCheckbox_Tristate_Size:var(--fdCheckbox_Tristate_Compact_Size);--fdCheckbox_Tristate_Offset:var(--fdCheckbox_Tristate_Compact_Offset)}.fd-checkbox[class*=-compact].is-focus,.fd-checkbox[class*=-compact]:focus,.fd-checkbox[class*=-condensed].is-focus,.fd-checkbox[class*=-condensed]:focus,[class*=-compact] .fd-checkbox:not([class*=-cozy]).is-focus,[class*=-compact] .fd-checkbox:not([class*=-cozy]):focus,[class*=-condensed] .fd-checkbox:not([class*=-cozy]).is-focus,[class*=-condensed] .fd-checkbox:not([class*=-cozy]):focus{z-index:5}.fd-checkbox[class*=-compact].is-focus+.fd-checkbox__label,.fd-checkbox[class*=-compact]:focus+.fd-checkbox__label,.fd-checkbox[class*=-condensed].is-focus+.fd-checkbox__label,.fd-checkbox[class*=-condensed]:focus+.fd-checkbox__label,[class*=-compact] .fd-checkbox:not([class*=-cozy]).is-focus+.fd-checkbox__label,[class*=-compact] .fd-checkbox:not([class*=-cozy]):focus+.fd-checkbox__label,[class*=-condensed] .fd-checkbox:not([class*=-cozy]).is-focus+.fd-checkbox__label,[class*=-condensed] .fd-checkbox:not([class*=-cozy]):focus+.fd-checkbox__label{--fdCheckbox_Outline_Border_Radius:var(--fdCheckbox_Compact_Outline_Border_Radius)}fd-checkbox .fd-checkbox__text:empty{margin:0}fd-checkbox .fd-checkbox__label{-webkit-user-select:none;user-select:none}fd-checkbox.fd-checkbox--standalone .fd-checkbox__label{margin:0}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return CheckboxComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DeprecatedCheckboxContentDensityDirective = /*#__PURE__*/(() => {\n  class DeprecatedCheckboxContentDensityDirective extends DeprecatedCompactDirective {\n    /** @hidden */\n    constructor() {\n      super('fd-checkbox');\n    }\n  }\n  DeprecatedCheckboxContentDensityDirective.ɵfac = function DeprecatedCheckboxContentDensityDirective_Factory(t) {\n    return new (t || DeprecatedCheckboxContentDensityDirective)();\n  };\n  DeprecatedCheckboxContentDensityDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DeprecatedCheckboxContentDensityDirective,\n    selectors: [[\"fd-checkbox\", \"compact\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CONTENT_DENSITY_DIRECTIVE,\n      useExisting: forwardRef(() => DeprecatedCheckboxContentDensityDirective)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return DeprecatedCheckboxContentDensityDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet CheckboxModule = /*#__PURE__*/(() => {\n  class CheckboxModule {}\n  CheckboxModule.ɵfac = function CheckboxModule_Factory(t) {\n    return new (t || CheckboxModule)();\n  };\n  CheckboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CheckboxModule\n  });\n  CheckboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, FormsModule, ContentDensityModule, ContentDensityModule]\n  });\n  return CheckboxModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CheckboxComponent, CheckboxModule, DeprecatedCheckboxContentDensityDirective, FD_CHECKBOX_COMPONENT, FD_CHECKBOX_VALUES_DEFAULT };\n//# sourceMappingURL=fundamental-ngx-core-checkbox.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}