{"ast":null,"code":"import _asyncToGenerator from \"/home/webpct/angular-exzrk6/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from '@angular/core';\nimport { Directive, HostBinding, Injectable, Optional, InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, ContentChild, TemplateRef, ViewChild, ContentChildren, forwardRef, NgModule, Injector } from '@angular/core';\nimport { Subject, Subscription, fromEvent, defer, timer, of } from 'rxjs';\nimport { distinctUntilChanged, takeUntil, filter, switchMap, startWith, take, map } from 'rxjs/operators';\nimport * as i3 from '@fundamental-ngx/cdk/utils';\nimport { KeyUtil, InitialFocusModule, DynamicComponentService } from '@fundamental-ngx/cdk/utils';\nimport { RIGHT_ARROW, LEFT_ARROW, DOWN_ARROW, UP_ARROW, SPACE, ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@fundamental-ngx/core/icon';\nimport { IconModule } from '@fundamental-ngx/core/icon';\nimport * as i5$1 from '@fundamental-ngx/core/content-density';\nimport { DeprecatedCompactDirective, CONTENT_DENSITY_DIRECTIVE, contentDensityObserverProviders, ContentDensityModule } from '@fundamental-ngx/core/content-density';\nimport * as i1 from '@fundamental-ngx/core/dialog';\nimport { DialogBodyComponent, DialogModule } from '@fundamental-ngx/core/dialog';\nimport * as i3$1 from '@fundamental-ngx/core/popover';\nimport { BasePopoverClass, PopoverService, PopoverModule } from '@fundamental-ngx/core/popover';\nimport { MobileModeBase, MobileModeControl, MOBILE_MODE_CONFIG } from '@fundamental-ngx/core/mobile-mode';\nimport * as i5 from '@fundamental-ngx/core/bar';\nimport * as i7 from '@fundamental-ngx/core/title';\nimport * as i8 from '@fundamental-ngx/core/button';\nimport { ButtonModule } from '@fundamental-ngx/core/button';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * The directive that represents the menu title.\n */\nconst _c0 = [\"fd-menu-item\", \"\"];\nfunction MenuItemComponent_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MenuItemComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ul\", 1);\n    i0.ɵɵtemplate(2, MenuItemComponent_ng_container_1_ng_container_2_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"id\", ctx_r0.itemId)(\"aria-hidden\", !ctx_r0.submenuVisible)(\"aria-label\", ctx_r0.submenu.ariaLabel)(\"aria-labelledby\", ctx_r0.submenu.ariaLabelledby);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.submenu.templateRef);\n  }\n}\nconst _c1 = [\"*\"];\nfunction SubmenuComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction MenuAddonDirective_fd_icon_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"fd-icon\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"glyph\", ctx_r0.glyph);\n  }\n}\nconst _c2 = [\"dialogTemplate\"];\nfunction MenuMobileComponent_ng_template_0_ng_template_2_fd_bar_element_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"fd-bar-element\")(1, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function MenuMobileComponent_ng_template_0_ng_template_2_fd_bar_element_1_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r11.backToParentLevel());\n    });\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"glyph\", i0.ɵɵpipeBind1(2, 2, ctx_r9.navigationIcon$));\n    i0.ɵɵattribute(\"aria-label\", \"Go to previous menu level: \" + ctx_r9.title);\n  }\n}\nfunction MenuMobileComponent_ng_template_0_ng_template_2_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function MenuMobileComponent_ng_template_0_ng_template_2_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r13.close());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"mobile\", true);\n  }\n}\nfunction MenuMobileComponent_ng_template_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, MenuMobileComponent_ng_template_0_ng_template_2_fd_bar_element_1_Template, 3, 4, \"fd-bar-element\", 5);\n    i0.ɵɵelementStart(2, \"fd-bar-element\")(3, \"h1\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"div\", 8)(6, \"fd-bar-element\");\n    i0.ɵɵtemplate(7, MenuMobileComponent_ng_template_0_ng_template_2_button_7_Template, 1, 1, \"button\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.isSubmenu);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r6.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.mobileConfig.hasCloseButton);\n  }\n}\nfunction MenuMobileComponent_ng_template_0_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MenuMobileComponent_ng_template_0_fd_dialog_footer_5_fd_button_bar_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"fd-button-bar\", 14);\n    i0.ɵɵlistener(\"click\", function MenuMobileComponent_ng_template_0_fd_dialog_footer_5_fd_button_bar_1_Template_fd_button_bar_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r17.close());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"label\", ctx_r15.mobileConfig.approveButtonText);\n  }\n}\nfunction MenuMobileComponent_ng_template_0_fd_dialog_footer_5_fd_button_bar_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"fd-button-bar\", 15);\n    i0.ɵɵlistener(\"click\", function MenuMobileComponent_ng_template_0_fd_dialog_footer_5_fd_button_bar_2_Template_fd_button_bar_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r19.close());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"label\", ctx_r16.mobileConfig.cancelButtonText);\n  }\n}\nfunction MenuMobileComponent_ng_template_0_fd_dialog_footer_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"fd-dialog-footer\");\n    i0.ɵɵtemplate(1, MenuMobileComponent_ng_template_0_fd_dialog_footer_5_fd_button_bar_1_Template, 1, 1, \"fd-button-bar\", 12);\n    i0.ɵɵtemplate(2, MenuMobileComponent_ng_template_0_fd_dialog_footer_5_fd_button_bar_2_Template, 1, 1, \"fd-button-bar\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.mobileConfig.approveButtonText);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.mobileConfig.cancelButtonText);\n  }\n}\nfunction MenuMobileComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"fd-dialog\", 2)(1, \"fd-dialog-header\");\n    i0.ɵɵtemplate(2, MenuMobileComponent_ng_template_0_ng_template_2_Template, 8, 3, \"ng-template\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"fd-dialog-body\");\n    i0.ɵɵtemplate(4, MenuMobileComponent_ng_template_0_ng_container_4_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, MenuMobileComponent_ng_template_0_fd_dialog_footer_5_Template, 3, 2, \"fd-dialog-footer\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dialog_r4 = ctx.$implicit;\n    const dialogConfig_r5 = ctx.dialogConfig;\n    const ctx_r1 = i0.ɵɵnextContext();\n    const _r2 = i0.ɵɵreference(3);\n    i0.ɵɵproperty(\"dialogConfig\", dialogConfig_r5)(\"dialogRef\", dialog_r4);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r1.isSubmenu ? _r2 : ctx_r1.view) || null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mobileConfig.approveButtonText || ctx_r1.mobileConfig.cancelButtonText);\n  }\n}\nfunction MenuMobileComponent_ng_template_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MenuMobileComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nav\", 16)(1, \"ul\", 17);\n    i0.ɵɵtemplate(2, MenuMobileComponent_ng_template_2_ng_container_2_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.view || null);\n  }\n}\nconst _c3 = [\"menuRootTemplate\"];\nfunction MenuComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"nav\", 3)(2, \"ul\", 4);\n    i0.ɵɵprojection(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"fd-menu--mobile\", ctx_r2.mobile);\n    i0.ɵɵproperty(\"id\", ctx_r2.id);\n    i0.ɵɵattribute(\"aria-labelledby\", ctx_r2.ariaLabelledby)(\"aria-label\", ctx_r2.ariaLabel);\n  }\n}\nlet MenuTitleDirective = /*#__PURE__*/(() => {\n  class MenuTitleDirective {\n    /** Returns element title text */\n    get title() {\n      return this._elementRef.nativeElement.textContent;\n    }\n    /** @hidden */\n    constructor(_elementRef) {\n      this._elementRef = _elementRef;\n      /** @hidden */\n      this.fdMenuTitleClass = true;\n    }\n  }\n  MenuTitleDirective.ɵfac = function MenuTitleDirective_Factory(t) {\n    return new (t || MenuTitleDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  MenuTitleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MenuTitleDirective,\n    selectors: [[\"\", \"fd-menu-title\", \"\"]],\n    hostVars: 3,\n    hostBindings: function MenuTitleDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"title\", ctx.title);\n        i0.ɵɵclassProp(\"fd-menu__title\", ctx.fdMenuTitleClass);\n      }\n    }\n  });\n  return MenuTitleDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MenuInteractiveDirective = /*#__PURE__*/(() => {\n  class MenuInteractiveDirective {\n    /** @hidden */\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n      /** @hidden */\n      this.tabindex = 0;\n      /** @hidden */\n      this.disabled = false;\n      /** @hidden */\n      this.selected = false;\n      /** @hidden */\n      this.ariaHaspopup = false;\n      /** @hidden */\n      this.fdMenuLinkClass = true;\n      /** @hidden */\n      this._fromSplitButton = false;\n    }\n    /** @hidden */\n    setSelected(isSelected) {\n      this.selected = isSelected && (this.ariaHaspopup || this._fromSplitButton);\n    }\n    /** @hidden */\n    setDisabled(isDisabled) {\n      this.disabled = isDisabled;\n      this.tabindex = isDisabled ? -1 : 0;\n    }\n    /** @hidden */\n    setSubmenu(hasSubmenu, itemId) {\n      this.ariaHaspopup = hasSubmenu;\n      this.ariaControls = hasSubmenu ? itemId || this.ariaControls : null;\n    }\n  }\n  MenuInteractiveDirective.ɵfac = function MenuInteractiveDirective_Factory(t) {\n    return new (t || MenuInteractiveDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  MenuInteractiveDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MenuInteractiveDirective,\n    selectors: [[\"\", \"fd-menu-interactive\", \"\"]],\n    hostAttrs: [\"role\", \"menuitem\"],\n    hostVars: 10,\n    hostBindings: function MenuInteractiveDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", ctx.tabindex)(\"aria-controls\", ctx.ariaControls)(\"aria-expanded\", ctx.selected)(\"aria-haspopup\", ctx.ariaHaspopup);\n        i0.ɵɵclassProp(\"is-disabled\", ctx.disabled)(\"is-selected\", ctx.selected)(\"fd-menu__link\", ctx.fdMenuLinkClass);\n      }\n    }\n  });\n  return MenuInteractiveDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MenuService = /*#__PURE__*/(() => {\n  class MenuService {\n    /** @hidden */\n    get _isRtl() {\n      return this._rtlService?.rtl.value;\n    }\n    /** @hidden */\n    constructor(_renderer, _rtlService) {\n      this._renderer = _renderer;\n      this._rtlService = _rtlService;\n      /** Collection of active menu nodes */\n      this.activeNodePath = [];\n      /** Collection of active menu nodes */\n      this._isMobileMode = new Subject();\n    }\n    /** Reference to menu component */\n    get menuComponent() {\n      return this._menuComponent;\n    }\n    /** Returns menu mode observable */\n    get isMobileMode() {\n      return this._isMobileMode.pipe(distinctUntilChanged());\n    }\n    /** Sets menu mode */\n    setMenuMode(value) {\n      this._isMobileMode.next(value);\n    }\n    /** Sets given menu item as focused */\n    setFocused(menuItem) {\n      this.focusedNode = this.menuMap.get(menuItem);\n      this.focusedNode?.item?.focus();\n    }\n    /**\n     * Sets state of a given menu item\n     * @param isActive - Whether should be set as active or inactive\n     * @param menuItem `MenuItemComponent` that should be set as active or inactive\n     */\n    setActive(isActive, menuItem) {\n      if (!menuItem || isActive && menuItem.disabled) {\n        return;\n      }\n      if (isActive) {\n        this._addToActivePath(menuItem);\n      } else {\n        this._removeFromActivePath(menuItem);\n      }\n      this._emitActivePath();\n    }\n    /**\n     * Close active sibling submenu if any\n     * @param menuItem to look for active siblings\n     */\n    setInactiveSiblingMenuItem(menuItem) {\n      this._removeActiveSibling(menuItem);\n      this._emitActivePath();\n    }\n    /** Initializes menu service based on given Menu Component */\n    setMenuComponent(menu) {\n      this._menuComponent = menu;\n      this.menuMap = this._buildMenuMap(this._menuComponent);\n    }\n    /** Clears Active Node Path and resets Focused Node */\n    resetMenuState() {\n      this._clearActivePath();\n      this.focusedNode = undefined;\n      this._emitActivePath();\n    }\n    /** - Updates the structure of the menu\n     *  - Validates Active Node Path\n     *  - Validates Focused Node */\n    rebuildMenu() {\n      this.menuMap = this._buildMenuMap(this._menuComponent);\n      const deadNode = this.activeNodePath.find(node => !this.menuMap.has(node.item));\n      if (deadNode?.item) {\n        this.setActive(false, deadNode.item);\n      }\n      const invalidFocusedElement = this.focusedNode && !this.menuMap.get(this.focusedNode.item);\n      if (invalidFocusedElement) {\n        this.focusedNode = this.activeNodePath[this.activeNodePath.length - 1] || this.menuMap.get(null).children[0];\n      }\n    }\n    /** Adds Menu keyboard support */\n    addKeyboardSupport(elementRef) {\n      this.removeKeyboardSupport();\n      this._setKeyboardSupport(elementRef);\n    }\n    /** Removes Menu keyboard support */\n    removeKeyboardSupport() {\n      if (this._destroyKeyboardHandlerListener) {\n        this._destroyKeyboardHandlerListener();\n      }\n    }\n    /** @hidden */\n    onDestroy() {\n      this.removeKeyboardSupport();\n    }\n    /** @hidden Returns siblings of given node */\n    _nodeSiblings(node) {\n      return node.parent ? node.parent.children : this.menuMap.get(null)?.children;\n    }\n    /** @hidden Adds given element to the Active Node Path and setts as active*/\n    _addToActivePath(menuItem) {\n      const menuNode = this.menuMap.get(menuItem);\n      this._removeActiveSibling(menuItem);\n      if (menuNode) {\n        this.activeNodePath.push(menuNode);\n        menuNode.item?.setSelected(true);\n      }\n    }\n    /** @hidden Removes given element and all its successors from the Active Node Path and setts as inactive*/\n    _removeFromActivePath(menuItem) {\n      const menuNode = this.menuMap.get(menuItem);\n      if (menuNode) {\n        const pathIndex = this.activeNodePath.findIndex(i => i.item === menuNode.item);\n        if (pathIndex !== -1) {\n          this.activeNodePath.splice(pathIndex).forEach(removedActiveNode => removedActiveNode.item?.setSelected(false));\n        }\n      }\n    }\n    /** @hidden Removes all elements from the Active Node Path and sets them as closed */\n    _clearActivePath() {\n      if (this.activeNodePath.length) {\n        this._removeFromActivePath(this.activeNodePath[0].item);\n      }\n    }\n    /** @hidden\n     * - Builds Menu Nodes based on Menu Items\n     * - Creates Map of the Menu Nodes */\n    _buildMenuMap(menu) {\n      function buildNode(menuItem) {\n        return {\n          item: menuItem,\n          parent: null,\n          children: menuItem.submenu ? menuItem.submenu.menuItems.map(subMenuItem => buildNode(subMenuItem)) : []\n        };\n      }\n      function setParents(node, parent) {\n        node.parent = parent;\n        node.children.forEach(childNode => setParents(childNode, node));\n      }\n      function toMap(node, map = new Map()) {\n        map.set(node.item, node);\n        node.children.forEach(childNode => toMap(childNode, map));\n        return map;\n      }\n      const rootItems = menu._menuItems.filter(rootItem => !rootItem.parentSubmenu);\n      /** root item */\n      const menuTree = {\n        item: null,\n        parent: null,\n        children: rootItems.map(item => buildNode(item))\n      };\n      setParents(menuTree, null);\n      return toMap(menuTree);\n    }\n    /** @hidden Removes active sibling of a given menu item from the Active Path */\n    _removeActiveSibling(menuItem) {\n      const menuNode = this.menuMap.get(menuItem);\n      const children = menuNode?.parent?.children.map(i => i.item);\n      const activeSibling = this.activeNodePath.find(i => children?.includes(i.item));\n      if (activeSibling) {\n        const activeParentIndex = this.activeNodePath.indexOf(menuNode?.parent);\n        this._removeFromActivePath(activeParentIndex !== -1 ? activeSibling.item : this.activeNodePath[0].item);\n      }\n    }\n    /** @hidden Adds keyboard support */\n    _setKeyboardSupport(elementRef) {\n      this._destroyKeyboardHandlerListener = this._renderer.listen(elementRef.nativeElement, 'keydown', event => this._handleKey(event));\n    }\n    /** @hidden */\n    _handleKey(event) {\n      const focusRight = node => {\n        setTimeout(() => this.setFocused(node.children[0].item));\n      };\n      let matched = true;\n      if (!this.focusedNode) {\n        return;\n      }\n      if (KeyUtil.isKeyCode(event, RIGHT_ARROW) && !this._isRtl || KeyUtil.isKeyCode(event, LEFT_ARROW) && this._isRtl) {\n        if (this.focusedNode?.children.length) {\n          this.setActive(true, this.focusedNode.item);\n          focusRight(this.focusedNode);\n        }\n      } else if (KeyUtil.isKeyCode(event, LEFT_ARROW) && !this._isRtl || KeyUtil.isKeyCode(event, RIGHT_ARROW) && this._isRtl) {\n        if (this.focusedNode.parent?.item) {\n          this.setActive(false, this.focusedNode.parent.item);\n          this.setFocused(this.focusedNode.parent.item);\n        }\n      } else if (KeyUtil.isKeyCode(event, DOWN_ARROW)) {\n        const closest = this._closestEnabled(this.focusedNode, 'down');\n        if (closest) {\n          this.setFocused(closest.item);\n        }\n      } else if (KeyUtil.isKeyCode(event, UP_ARROW)) {\n        const closest = this._closestEnabled(this.focusedNode, 'up');\n        if (closest) {\n          this.setFocused(closest.item);\n        }\n      } else if (KeyUtil.isKeyCode(event, [SPACE, ENTER])) {\n        const focusedNode = this.focusedNode;\n        this.setActive(true, focusedNode?.item);\n        focusedNode.item?.click();\n        if (focusedNode.children.length) {\n          focusRight(focusedNode);\n        }\n      } else if (KeyUtil.isKeyCode(event, ESCAPE) && this.menuComponent.closeOnEscapeKey) {\n        this.menuComponent.close();\n      } else {\n        matched = false;\n      }\n      if (matched) {\n        event.preventDefault();\n      }\n    }\n    /** @hidden Emits an array of active menu items */\n    _emitActivePath() {\n      this.menuComponent.activePath.emit(this.activeNodePath.map(node => node.item));\n    }\n    /** @hidden Depending on direction returns closest enabled sibling of given node */\n    _closestEnabled(node, direction) {\n      const siblings = direction === 'up' ? [...(this._nodeSiblings(node) ?? [])].reverse() : this._nodeSiblings(node);\n      if (siblings) {\n        const startIndex = siblings.indexOf(node) + 1;\n        for (let i = startIndex; i < siblings.length; i++) {\n          if (siblings[i].item && !siblings[i].item.disabled) {\n            return siblings[i];\n          }\n        }\n      }\n      return null;\n    }\n  }\n  MenuService.ɵfac = function MenuService_Factory(t) {\n    return new (t || MenuService)(i0.ɵɵinject(i0.Renderer2), i0.ɵɵinject(i3.RtlService, 8));\n  };\n  MenuService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MenuService,\n    factory: MenuService.ɵfac\n  });\n  return MenuService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet menuUniqueId$1 = 0;\nconst SUBMENU = new InjectionToken('Submenu component dependency');\nlet MenuItemComponent = /*#__PURE__*/(() => {\n  class MenuItemComponent {\n    /** @hidden */\n    constructor(elementRef, menuService, _changeDetectorRef, _submenu) {\n      this.elementRef = elementRef;\n      this.menuService = menuService;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._submenu = _submenu;\n      /** Set the Menu Item as disabled/enabled */\n      this.disabled = false;\n      /** Menu Item id attribute value */\n      this.itemId = `fd-menu-item-${menuUniqueId$1++}`;\n      /** Emitted when the menu item is selected. */\n      // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n      this.onSelect = new EventEmitter();\n      /** @hidden Whether sub-menu is currently visible*/\n      this.submenuVisible = false;\n      /** @hidden */\n      this._subscriptions = new Subscription();\n      /** @hidden */\n      this._hoverSubscriptions = new Subscription();\n    }\n    /** @hidden */\n    ngOnInit() {\n      if (this.parentSubmenu) {\n        this._submenu = this.parentSubmenu;\n        this._submenu._registerItem(this);\n      }\n    }\n    /** @hidden */\n    ngAfterContentInit() {\n      this._setMenuService();\n      this._initialiseItemState();\n      this._listenOnMenuLinkClick();\n      this._listenOnOuterFocus();\n      this._listenOnMenuMode();\n    }\n    /** @hidden */\n    ngOnChanges(changes) {\n      if (changes['disabled'] && !changes['disabled'].firstChange) {\n        this.menuInteractive.setDisabled(this.disabled);\n      }\n      if (changes['submenu'] && !changes['submenu'].firstChange) {\n        this.menuInteractive.setSubmenu(!!this.submenu, this.submenu ? this.itemId : undefined);\n      }\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      if (this.parentSubmenu) {\n        this._submenu?._unregisterItem(this);\n      }\n      this._subscriptions.unsubscribe();\n      this._hoverSubscriptions.unsubscribe();\n    }\n    /** Whether menu item has popup (desktop mode)  */\n    get hasPopup() {\n      return !!this.submenu && (!this.menuService?.menuComponent || !this.menuService?.menuComponent.mobile);\n    }\n    /** Focuses Menu Item interactive element */\n    focus() {\n      if (this.menuInteractive) {\n        this.menuInteractive.elementRef.nativeElement.focus();\n      }\n    }\n    /** Clicks Menu Item interactive element */\n    click() {\n      if (this.menuInteractive) {\n        this.menuInteractive.elementRef.nativeElement.click();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** @hidden Sets menu item as selected/unselected based on isSelected flag */\n    setSelected(isSelected, fromSplit) {\n      this.menuInteractive.setSelected(isSelected);\n      this.submenuVisible = isSelected && !!this.submenu;\n      if (!fromSplit) {\n        this.onSelect.emit();\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n    /** @hidden Creates click listener on menu item interactive element */\n    _listenOnMenuLinkClick() {\n      this._subscriptions.add(fromEvent(this.menuInteractive.elementRef.nativeElement, 'click').subscribe(() => this.menuService?.setActive(true, this)));\n    }\n    /** @hidden Creates hover listeners for activating/deactivating menu item */\n    _listenOnMenuLinkHover() {\n      const hoverSubscriptions = new Subscription();\n      const mouseEnter$ = fromEvent(this.menuInteractive.elementRef.nativeElement, 'mouseenter');\n      const mouseLeave$ = fromEvent(this.menuInteractive.elementRef.nativeElement, 'mouseleave');\n      const timerFactory$ = defer(() => timer(this.menuService ? this.menuService.menuComponent.openOnHoverTime : 0).pipe(takeUntil(mouseLeave$)));\n      // Set active on hover\n      hoverSubscriptions.add(mouseEnter$.pipe(filter(() => !!this.menuService), switchMap(() => timerFactory$)).subscribe(() => {\n        if (this.submenu) {\n          // Open submenu\n          this.menuService.setActive(true, this);\n        }\n        if (!this.submenu) {\n          // Close sibling submenu if opened\n          this.menuService.setInactiveSiblingMenuItem(this);\n        }\n      }));\n      return hoverSubscriptions;\n    }\n    /** @hidden Initializes menu link state based on item initial state */\n    _initialiseItemState() {\n      this.menuInteractive.setSubmenu(!!this.submenu, this.itemId);\n      this.menuInteractive.setDisabled(this.disabled);\n    }\n    /** @hidden Checks for Menu Service dependency and passes it if further */\n    _setMenuService() {\n      this.menuService = this.menuService || this._submenu?.menuService || null;\n      if (this.submenu && this.menuService) {\n        this.submenu.menuService = this.menuService;\n      }\n    }\n    /** @hidden Listen on menu mode and set proper mode listeners */\n    _listenOnMenuMode() {\n      this.menuService?.isMobileMode.subscribe(isMobile => {\n        this._hoverSubscriptions.unsubscribe();\n        if (!isMobile) {\n          this._hoverSubscriptions = this._listenOnMenuLinkHover();\n        }\n      });\n    }\n    /** @hidden Updates focused menu item on outer focus */\n    _listenOnOuterFocus() {\n      this._subscriptions.add(fromEvent(this.menuInteractive.elementRef.nativeElement, 'focus').subscribe(() => {\n        if (this.menuService && this.menuService.focusedNode !== this.menuService.menuMap.get(this)) {\n          this.menuService.setFocused(this);\n        }\n      }));\n    }\n  }\n  MenuItemComponent.ɵfac = function MenuItemComponent_Factory(t) {\n    return new (t || MenuItemComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MenuService, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(SUBMENU, 8));\n  };\n  MenuItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MenuItemComponent,\n    selectors: [[\"li\", \"fd-menu-item\", \"\"]],\n    contentQueries: function MenuItemComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MenuTitleDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, MenuInteractiveDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menuItemTitle = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menuInteractive = _t.first);\n      }\n    },\n    hostAttrs: [\"attr.role\", \"menuitem\"],\n    hostVars: 2,\n    hostBindings: function MenuItemComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-menu__item\", true);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      itemId: \"itemId\",\n      submenu: \"submenu\",\n      parentSubmenu: \"parentSubmenu\"\n    },\n    outputs: {\n      onSelect: \"onSelect\"\n    },\n    exportAs: [\"fd-menu-item\"],\n    features: [i0.ɵɵNgOnChangesFeature],\n    attrs: _c0,\n    ngContentSelectors: _c1,\n    decls: 2,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [\"role\", \"menu\", 1, \"fd-menu__sublist\"], [4, \"ngTemplateOutlet\"]],\n    template: function MenuItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n        i0.ɵɵtemplate(1, MenuItemComponent_ng_container_1_Template, 3, 5, \"ng-container\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasPopup && ctx.submenu);\n      }\n    },\n    dependencies: [i4.NgIf, i4.NgTemplateOutlet],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MenuItemComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet SubmenuComponent = /*#__PURE__*/(() => {\n  class SubmenuComponent {\n    constructor() {\n      /** @hidden */\n      this._registeredItems = [];\n      /** @hidden */\n      this._menuItemsChange$ = new Subject();\n    }\n    /** @hidden */\n    get menuItems() {\n      return this._projectedItems.length ? this._projectedItems.toArray() : this._registeredItems;\n    }\n    /** @hidden */\n    ngAfterContentInit() {\n      this._projectedItems.changes.subscribe(() => this._menuItemsChange$.next());\n    }\n    /** @hidden method for manually registering item when it's not visible for @ContentChildren */\n    _registerItem(item) {\n      this._registeredItems.push(item);\n      this._menuItemsChange$.next();\n    }\n    /** @hidden method for manually unregistering item when it's not visible for @ContentChildren */\n    _unregisterItem(item) {\n      this._registeredItems = this._registeredItems.filter(i => i !== item);\n      this._menuItemsChange$.next();\n    }\n  }\n  SubmenuComponent.ɵfac = function SubmenuComponent_Factory(t) {\n    return new (t || SubmenuComponent)();\n  };\n  SubmenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: SubmenuComponent,\n    selectors: [[\"fd-submenu\"]],\n    contentQueries: function SubmenuComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MenuItemComponent, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._projectedItems = _t);\n      }\n    },\n    viewQuery: function SubmenuComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TemplateRef, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n      }\n    },\n    inputs: {\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledby: \"ariaLabelledby\"\n    },\n    exportAs: [\"fdSubmenu\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: SUBMENU,\n      useExisting: SubmenuComponent\n    }])],\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    template: function SubmenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, SubmenuComponent_ng_template_0_Template, 1, 0, \"ng-template\");\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return SubmenuComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MenuShortcutDirective = /*#__PURE__*/(() => {\n  class MenuShortcutDirective {\n    /** @hidden */\n    constructor(_menuItem, _elementRef) {\n      this._menuItem = _menuItem;\n      this._elementRef = _elementRef;\n      /** Hide shortcuts in mobile mode */\n      this.hideOnMobile = true;\n      /** @hidden */\n      this.fdMenuShortcutClass = true;\n      /** @hidden */\n      this._subscriptions = new Subscription();\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      this._hideOnMobile();\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._subscriptions.unsubscribe();\n    }\n    /** @hidden */\n    _hideOnMobile() {\n      this._subscriptions.add(this._menuItem.menuService?.isMobileMode.pipe(filter(() => this.hideOnMobile)).subscribe(isMobile => {\n        if (isMobile) {\n          this._elementRef.nativeElement.style.display = 'none';\n        } else {\n          this._elementRef.nativeElement.style.display = null;\n        }\n      }));\n    }\n  }\n  MenuShortcutDirective.ɵfac = function MenuShortcutDirective_Factory(t) {\n    return new (t || MenuShortcutDirective)(i0.ɵɵdirectiveInject(MenuItemComponent), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  MenuShortcutDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MenuShortcutDirective,\n    selectors: [[\"\", \"fd-menu-shortcut\", \"\"]],\n    hostVars: 2,\n    hostBindings: function MenuShortcutDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-menu__shortcut\", ctx.fdMenuShortcutClass);\n      }\n    },\n    inputs: {\n      hideOnMobile: \"hideOnMobile\"\n    }\n  });\n  return MenuShortcutDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MenuTriggerDirective = /*#__PURE__*/(() => {\n  class MenuTriggerDirective {\n    /** Set reference to Menu Component */\n    set menu(menu) {\n      this._unsubscribeFromMenu();\n      if (menu) {\n        menu.trigger = this._elementRef;\n        this._subscribeToMenu(menu);\n      }\n      this._setAriaAttributes(menu);\n    }\n    /** @hidden */\n    constructor(_elementRef) {\n      this._elementRef = _elementRef;\n      /** @hidden */\n      this._menuSubscription = new Subscription();\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._unsubscribeFromMenu();\n    }\n    /** @hidden */\n    _subscribeToMenu(menu) {\n      this._menuSubscription.add(menu.isOpenChange.subscribe(() => {\n        this._setAriaAttributes(menu);\n      }));\n    }\n    /** @hidden */\n    _unsubscribeFromMenu() {\n      this._menuSubscription.unsubscribe();\n      this._menuSubscription = new Subscription();\n    }\n    /** @hidden */\n    _setAriaAttributes(menu) {\n      this.ariaHasPopup = !!menu;\n      this.ariaExpanded = menu?.isOpen;\n      this.ariaControls = menu?.isOpen ? menu.id : null;\n    }\n  }\n  MenuTriggerDirective.ɵfac = function MenuTriggerDirective_Factory(t) {\n    return new (t || MenuTriggerDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  MenuTriggerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MenuTriggerDirective,\n    selectors: [[\"\", \"fdMenuTrigger\", \"\"]],\n    hostVars: 3,\n    hostBindings: function MenuTriggerDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-haspopup\", ctx.ariaHasPopup)(\"aria-controls\", ctx.ariaControls)(\"aria-expanded\", ctx.ariaExpanded);\n      }\n    },\n    inputs: {\n      menu: [\"fdMenuTrigger\", \"menu\"]\n    }\n  });\n  return MenuTriggerDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nlet MenuAddonDirective = /*#__PURE__*/(() => {\n  class MenuAddonDirective {\n    constructor() {\n      /** Whether is used as submenu indicator */\n      this.submenuIndicator = false;\n      /** Sets Aria hidden attribute */\n      this.ariaHidden = true;\n      /** @hidden */\n      this.fdAddonAfterClass = true;\n      /** @hidden */\n      this.fdAddonBeforeClass = false;\n    }\n    /** Whether addon is used before or after text */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n    set setAddonPosition(position) {\n      this.fdAddonBeforeClass = position === 'before';\n      this.fdAddonAfterClass = position === 'after';\n    }\n  }\n  MenuAddonDirective.ɵfac = function MenuAddonDirective_Factory(t) {\n    return new (t || MenuAddonDirective)();\n  };\n  MenuAddonDirective.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MenuAddonDirective,\n    selectors: [[\"fd-menu-addon\"]],\n    hostVars: 7,\n    hostBindings: function MenuAddonDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-hidden\", ctx.ariaHidden);\n        i0.ɵɵclassProp(\"fd-menu__addon-after--submenu\", ctx.submenuIndicator)(\"fd-menu__addon-after\", ctx.fdAddonAfterClass)(\"fd-menu__addon-before\", ctx.fdAddonBeforeClass);\n      }\n    },\n    inputs: {\n      setAddonPosition: [\"position\", \"setAddonPosition\"],\n      glyph: \"glyph\",\n      submenuIndicator: \"submenuIndicator\",\n      ariaHidden: \"ariaHidden\"\n    },\n    ngContentSelectors: _c1,\n    decls: 2,\n    vars: 1,\n    consts: [[\"role\", \"presentation\", 3, \"glyph\", 4, \"ngIf\"], [\"role\", \"presentation\", 3, \"glyph\"]],\n    template: function MenuAddonDirective_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, MenuAddonDirective_fd_icon_0_Template, 1, 1, \"fd-icon\", 0);\n        i0.ɵɵprojection(1);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.glyph);\n      }\n    },\n    dependencies: [i4.NgIf, i2.IconComponent],\n    encapsulation: 2\n  });\n  return MenuAddonDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DeprecatedMenuCompactDirective = /*#__PURE__*/(() => {\n  class DeprecatedMenuCompactDirective extends DeprecatedCompactDirective {\n    /** @hidden */\n    constructor() {\n      super('fd-menu');\n    }\n  }\n  DeprecatedMenuCompactDirective.ɵfac = function DeprecatedMenuCompactDirective_Factory(t) {\n    return new (t || DeprecatedMenuCompactDirective)();\n  };\n  DeprecatedMenuCompactDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DeprecatedMenuCompactDirective,\n    selectors: [[\"fd-menu\", \"compact\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CONTENT_DENSITY_DIRECTIVE,\n      useExisting: forwardRef(() => DeprecatedMenuCompactDirective)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return DeprecatedMenuCompactDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MenuSeparatorComponent = /*#__PURE__*/(() => {\n  class MenuSeparatorComponent {\n    constructor() {\n      /** @hidden */\n      this.fdMenuSeparatorClass = true;\n    }\n  }\n  MenuSeparatorComponent.ɵfac = function MenuSeparatorComponent_Factory(t) {\n    return new (t || MenuSeparatorComponent)();\n  };\n  MenuSeparatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MenuSeparatorComponent,\n    selectors: [[\"fd-menu-separator\"]],\n    hostVars: 2,\n    hostBindings: function MenuSeparatorComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-menu__separator\", ctx.fdMenuSeparatorClass);\n      }\n    },\n    decls: 0,\n    vars: 0,\n    template: function MenuSeparatorComponent_Template(rf, ctx) {},\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MenuSeparatorComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst MENU_COMPONENT = new InjectionToken('MenuInterface');\nlet MenuMobileComponent = /*#__PURE__*/(() => {\n  class MenuMobileComponent extends MobileModeBase {\n    /** @hidden */\n    set _watch(_dialogBody) {\n      if (_dialogBody) {\n        this._menuService.addKeyboardSupport(_dialogBody.elementRef());\n      }\n    }\n    /** @hidden */\n    constructor(elementRef, dialogService, _menuService, _changeDetectorRef, _ngZone, _rtlService, menuComponent, mobileModes) {\n      super(elementRef, dialogService, menuComponent, MobileModeControl.MENU, mobileModes);\n      this._menuService = _menuService;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._ngZone = _ngZone;\n      this._rtlService = _rtlService;\n      /** @hidden External content */\n      this.childContent = undefined;\n    }\n    /** @hidden */\n    ngOnInit() {\n      this._listenOnActivePathChange();\n      this._listenOnMenuOpenChange();\n      this._listenOnTextDirection();\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      super.onDestroy();\n    }\n    /** Closes the Dialog and Menu component */\n    close() {\n      this.dialogRef.close();\n      this._component.close();\n    }\n    /** Navigate back to parent level of submenu */\n    backToParentLevel() {\n      const menuItem = this._menuService.activeNodePath[this._menuService.activeNodePath.length - 1].item;\n      this._menuService.setActive(false, menuItem);\n      this._executeOnStable(() => {\n        menuItem?.focus();\n      });\n    }\n    /** @hidden Opens the Dialog */\n    _openDialog() {\n      this.dialogRef = this._dialogService.open(this.dialogTemplate, {\n        mobile: true,\n        disablePaddings: true,\n        ...this.dialogConfig,\n        escKeyCloseable: false,\n        backdropClickCloseable: false,\n        container: this._elementRef.nativeElement\n      });\n    }\n    /** @hidden Listens on Active Path changes and updates mobile view */\n    _listenOnActivePathChange() {\n      const initialItemPath = this._menuService.activeNodePath.map(node => node.item).filter(v => !!v);\n      this._component.activePath.pipe(takeUntil(this._onDestroy$), startWith(initialItemPath)).subscribe(items => this._setMenuView(items));\n    }\n    /**\n     * @hidden\n     * Executes a function when the zone is stable.\n     */\n    _executeOnStable(fn) {\n      if (this._ngZone.isStable) {\n        fn();\n      } else {\n        this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n      }\n    }\n    /** @hidden Sets menu view, title and isSubmenu flag */\n    _setMenuView(items) {\n      const lastItem = items[items.length - 1];\n      this.isSubmenu = !!items.length;\n      this.title = this._getDialogTitle(lastItem);\n      this.view = this._getMenuView(lastItem);\n      this._changeDetectorRef.markForCheck();\n      this._executeOnStable(() => {\n        this._menuService.focusedNode?.item?.focus();\n      });\n    }\n    /** @hidden Opens/closes the Dialog based on Menu isOpenChange events */\n    _listenOnMenuOpenChange() {\n      this._component.isOpenChange.pipe(takeUntil(this._onDestroy$)).subscribe(isOpen => isOpen ? this._openDialog() : this.dialogRef.close());\n    }\n    /** @hidden Sets navigation arrow depending on text direction */\n    _listenOnTextDirection() {\n      this.navigationIcon$ = this._rtlService ? this._rtlService.rtl.pipe(map(isRtl => isRtl ? 'navigation-right-arrow' : 'navigation-left-arrow')) : of('navigation-left-arrow');\n    }\n    /** @hidden Returns dialog title */\n    _getDialogTitle(menuItem) {\n      if (this.isSubmenu) {\n        return menuItem.menuItemTitle ? menuItem.menuItemTitle.title : '';\n      }\n      return this.mobileConfig.title || '';\n    }\n    /** @hidden Returns dialog content view */\n    _getMenuView(menuItem) {\n      if (this.isSubmenu) {\n        return menuItem.submenu ? menuItem.submenu.templateRef : this.view;\n      }\n      return this.childContent;\n    }\n  }\n  MenuMobileComponent.ɵfac = function MenuMobileComponent_Factory(t) {\n    return new (t || MenuMobileComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.DialogService), i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.RtlService, 8), i0.ɵɵdirectiveInject(MENU_COMPONENT), i0.ɵɵdirectiveInject(MOBILE_MODE_CONFIG, 8));\n  };\n  MenuMobileComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MenuMobileComponent,\n    selectors: [[\"fd-menu-mobile\"]],\n    viewQuery: function MenuMobileComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(DialogBodyComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dialogTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._watch = _t.first);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 4,\n    vars: 0,\n    consts: [[\"dialogTemplate\", \"\"], [\"subMenuTemplate\", \"\"], [3, \"dialogConfig\", \"dialogRef\"], [\"fdkTemplate\", \"header\"], [4, \"ngTemplateOutlet\"], [4, \"ngIf\"], [\"fd-bar-left\", \"\"], [\"fd-title\", \"\"], [\"fd-bar-right\", \"\"], [\"fd-dialog-close-button\", \"\", 3, \"mobile\", \"click\", 4, \"ngIf\"], [\"fd-button\", \"\", \"fdType\", \"transparent\", \"id\", \"menu-mobile-navigate-back\", \"fdCozy\", \"\", 3, \"glyph\", \"click\"], [\"fd-dialog-close-button\", \"\", 3, \"mobile\", \"click\"], [\"fdType\", \"emphasized\", 3, \"label\", \"click\", 4, \"ngIf\"], [\"fd-initial-focus\", \"\", 3, \"label\", \"click\", 4, \"ngIf\"], [\"fdType\", \"emphasized\", 3, \"label\", \"click\"], [\"fd-initial-focus\", \"\", 3, \"label\", \"click\"], [1, \"fd-menu\", \"fd-menu--mobile\"], [1, \"fd-menu__sublist\"]],\n    template: function MenuMobileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MenuMobileComponent_ng_template_0_Template, 6, 4, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, MenuMobileComponent_ng_template_2_Template, 3, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    dependencies: [i4.NgIf, i4.NgTemplateOutlet, i1.DialogComponent, i1.DialogBodyComponent, i1.DialogFooterComponent, i1.DialogHeaderComponent, i1.DialogCloseButtonComponent, i5.BarLeftDirective, i5.BarRightDirective, i5.BarElementDirective, i5.ButtonBarComponent, i5$1.ContentDensityDirective, i7.TitleComponent, i3.TemplateDirective, i3.InitialFocusDirective, i3.DeprecatedInitialFocusDirective, i8.ButtonComponent, i4.AsyncPipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MenuMobileComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MenuMobileModule = /*#__PURE__*/(() => {\n  class MenuMobileModule {}\n  MenuMobileModule.ɵfac = function MenuMobileModule_Factory(t) {\n    return new (t || MenuMobileModule)();\n  };\n  MenuMobileModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MenuMobileModule\n  });\n  MenuMobileModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, DialogModule, ButtonModule]\n  });\n  return MenuMobileModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet menuUniqueId = 0;\n/**\n * The component that represents a menu.\n */\nlet MenuComponent = /*#__PURE__*/(() => {\n  class MenuComponent extends BasePopoverClass {\n    /** Set menu in mobile mode */\n    set mobile(value) {\n      this._mobile = coerceBooleanProperty(value);\n      this._menuService.setMenuMode(this.mobile);\n    }\n    get mobile() {\n      return this._mobile;\n    }\n    /** @hidden */\n    get _popoverConfig() {\n      return {\n        ...this,\n        additionalBodyClass: (this.additionalBodyClass ?? '') + ' fd-popover--menu'\n      };\n    }\n    /** @hidden */\n    constructor(elementRef, dialogConfig, _rendered, _menuService, _changeDetectorRef, _popoverService, _injector, _viewContainerRef, _dynamicComponentService, _contentDensityObserver) {\n      super();\n      this.elementRef = elementRef;\n      this.dialogConfig = dialogConfig;\n      this._rendered = _rendered;\n      this._menuService = _menuService;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._popoverService = _popoverService;\n      this._injector = _injector;\n      this._viewContainerRef = _viewContainerRef;\n      this._dynamicComponentService = _dynamicComponentService;\n      this._contentDensityObserver = _contentDensityObserver;\n      /** Whether the popover is disabled. */\n      this.disabled = false;\n      /** Whether the popover should be focusTrapped. */\n      this.focusTrapped = true;\n      /**\n       * Whether the popover should automatically move focus into the trapped region upon\n       * initialization and return focus to the previous activeElement upon destruction.\n       */\n      this.focusAutoCapture = true;\n      /** Should fd-scrollbar have tabindex*/\n      this.tabbableScrollbar = false;\n      /** Open submenu on hover after given milliseconds */\n      this.openOnHoverTime = 0;\n      /** Display menu without integrated popover */\n      this.mobileConfig = {\n        cancelButtonText: 'Cancel'\n      };\n      /** Id of the control. */\n      this.id = `fd-menu-${menuUniqueId++}`;\n      /** Emits array of active menu items */\n      this.activePath = new EventEmitter();\n      /** @hidden Whether use a menu in mobile mode */\n      this._mobile = false;\n      /** @hidden */\n      this._subscriptions = new Subscription();\n    }\n    /** @hidden */\n    ngOnInit() {\n      /** keep isOpen up to date */\n      this.isOpenChange.subscribe(isOpen => {\n        this.isOpen = isOpen;\n        // when popover got closed by its own mechanism (e.x. click outside)\n        // we need to clean up a menu as well\n        if (!isOpen) {\n          this._cleanUpMenuAfterClose();\n        }\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n    /** @hidden */\n    ngAfterContentInit() {\n      this._menuService.setMenuComponent(this);\n      this._listenOnMenuItemsChange();\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      this._menuService.isMobileMode.subscribe(isMobile => {\n        this._setupView();\n        // Since it is mobile, it's needed to disable popoverService\n        if (isMobile) {\n          this._popoverService.deactivate();\n        }\n      });\n      this._menuService.setMenuMode(this.mobile);\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._destroyMobileComponent();\n      this._destroyEventListeners();\n      this._menuService.onDestroy();\n      this._subscriptions.unsubscribe();\n      this._popoverService.onDestroy();\n    }\n    /** @hidden */\n    set trigger(trigger) {\n      this._externalTrigger = trigger;\n      this._popoverService.initialise(this._externalTrigger);\n      this._destroyEventListeners();\n      this._listenOnTriggerRefClicks();\n    }\n    get trigger() {\n      return this._externalTrigger;\n    }\n    /** Opens the menu */\n    open() {\n      if (this.mobile) {\n        this.isOpen = true;\n        this.isOpenChange.emit(this.isOpen);\n      } else {\n        this._popoverService.open();\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Closes the menu */\n    close() {\n      if (this.mobile) {\n        this.isOpen = false;\n        this.isOpenChange.emit(this.isOpen);\n      } else {\n        this._popoverService.close();\n      }\n      this._cleanUpMenuAfterClose();\n      this._focusTrigger();\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Toggles menu open/close state */\n    toggle() {\n      this.isOpen ? this.close() : this.open();\n    }\n    /** Method called to refresh position of opened popover */\n    refreshPosition() {\n      this._popoverService.refreshPosition();\n    }\n    /** @hidden */\n    _cleanUpMenuAfterClose() {\n      this._menuService.resetMenuState();\n    }\n    /** @hidden Select and instantiate menu view mode */\n    _setupView() {\n      if (this.mobile) {\n        this._setupMobileMode();\n      } else {\n        this._setupPopoverService();\n      }\n      this._changeDetectorRef.detectChanges();\n    }\n    /** @hidden */\n    _setupPopoverService() {\n      this._subscriptions.add(this._popoverService._onLoad.subscribe(elementRef => this._menuService.addKeyboardSupport(elementRef)));\n      this._popoverService.templateContent = this._menuRootTemplate;\n      this._popoverService.initialise(this._externalTrigger, this._popoverConfig);\n    }\n    /** @hidden Open Menu in mobile mode */\n    _setupMobileMode() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const injector = Injector.create({\n          providers: [{\n            provide: MENU_COMPONENT,\n            useValue: _this\n          }],\n          parent: _this._injector\n        });\n        _this._mobileModeComponentRef = yield _this._dynamicComponentService.createDynamicModule(_this._menuRootTemplate, MenuMobileModule, MenuMobileComponent, _this._viewContainerRef, injector);\n        _this._listenOnTriggerRefClicks();\n      })();\n    }\n    /** @hidden Listen on menu items change and rebuild menu */\n    _listenOnMenuItemsChange() {\n      this._subscriptions.add(this._menuItems.changes.subscribe(() => this._menuService.rebuildMenu()));\n      // Whether menu have submenu or not.\n      let isSubmenu = false;\n      this._menuItems.forEach(menuItem => {\n        if (menuItem.submenu?.menuItems) {\n          isSubmenu = true;\n          this._subscriptions.add(menuItem.submenu._menuItemsChange$.subscribe(() => this._menuService.rebuildMenu()));\n        }\n      });\n      this.disableScrollbar = isSubmenu;\n    }\n    /**\n     * @hidden\n     * This is going to be removed in feature, on dialog and dynamic service component refactor\n     */\n    _listenOnTriggerRefClicks() {\n      this._destroyEventListeners();\n      if (this.trigger && this.mobile) {\n        this._clickEventListener = this._rendered.listen(this.trigger.nativeElement, 'click', () => this.toggle());\n      }\n    }\n    /**\n     * @hidden\n     * This is going to be removed in feature, on dialog and dynamic service component refactor\n     */\n    _destroyEventListeners() {\n      if (this._clickEventListener) {\n        this._clickEventListener();\n        this._clickEventListener = null;\n      }\n    }\n    /** @hidden */\n    _destroyMobileComponent() {\n      if (this._mobileModeComponentRef) {\n        this._mobileModeComponentRef.destroy();\n      }\n    }\n    /** @hidden */\n    _focusTrigger() {\n      if (this.focusTrapped && this.trigger) {\n        this.trigger.nativeElement.focus();\n      }\n    }\n  }\n  MenuComponent.ɵfac = function MenuComponent_Factory(t) {\n    return new (t || MenuComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.DialogConfig, 8), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3$1.PopoverService), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i3.DynamicComponentService, 8), i0.ɵɵdirectiveInject(i5$1.ContentDensityObserver));\n  };\n  MenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MenuComponent,\n    selectors: [[\"fd-menu\"]],\n    contentQueries: function MenuComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MenuItemComponent, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._menuItems = _t);\n      }\n    },\n    viewQuery: function MenuComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c3, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._menuRootTemplate = _t.first);\n      }\n    },\n    inputs: {\n      mobile: \"mobile\",\n      disabled: \"disabled\",\n      focusTrapped: \"focusTrapped\",\n      focusAutoCapture: \"focusAutoCapture\",\n      tabbableScrollbar: \"tabbableScrollbar\",\n      openOnHoverTime: \"openOnHoverTime\",\n      mobileConfig: \"mobileConfig\",\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledby: \"ariaLabelledby\",\n      id: \"id\"\n    },\n    outputs: {\n      activePath: \"activePath\"\n    },\n    features: [i0.ɵɵProvidersFeature([MenuService, PopoverService, contentDensityObserverProviders()]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 4,\n    vars: 0,\n    consts: [[\"viewContainer\", \"\"], [\"menuRootTemplate\", \"\"], [1, \"fd-popover__wrapper--visible\"], [\"role\", \"menu\", 1, \"fd-menu\", 3, \"id\"], [\"role\", \"none\", 1, \"fd-menu__list\", \"fd-menu__list--no-shadow\"]],\n    template: function MenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementContainer(0, null, 0);\n        i0.ɵɵtemplate(2, MenuComponent_ng_template_2_Template, 4, 5, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    styles: [\"/*!\\n * Fundamental Library Styles v0.28.3\\n * Copyright (c) 2023 SAP SE or an SAP affiliate company.\\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/main/LICENSE)\\n */.fd-dialog__body{--fdButton_Menu_Border_Radius:0}.fd-menu{--fdMenu_Icon_Width:2.25rem;--fdMenu_Icon_Before_Margin:0 0 0 -.75rem;--fdMenu_Icon_After_Margin:0 -1rem 0 0;-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;max-width:20rem;padding:0;width:-moz-fit-content;width:fit-content}.fd-menu:after,.fd-menu:before{box-sizing:inherit;font-size:inherit}.fd-menu__list,.fd-menu__sublist{-webkit-box-sizing:border-box;-ms-flex-wrap:wrap;-webkit-box-shadow:var(--sapContent_Shadow1);border:0;border-radius:var(--fdButton_Menu_Border_Radius);box-shadow:var(--sapContent_Shadow1);box-sizing:border-box;color:var(--sapTextColor);display:flex;flex-direction:column;flex-wrap:wrap;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);list-style:none;margin:0;padding:0}.fd-menu__list:after,.fd-menu__list:before,.fd-menu__sublist:after,.fd-menu__sublist:before{box-sizing:inherit;font-size:inherit}.fd-menu__list--no-shadow,.fd-menu__sublist--no-shadow{box-shadow:none}.fd-menu__sublist{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;left:100%;line-height:var(--sapContent_LineHeight);margin:.25rem 0 0 -.25rem;min-width:100%;padding:0;position:absolute;top:0;z-index:2}.fd-menu__sublist:after,.fd-menu__sublist:before{box-sizing:inherit;font-size:inherit}.fd-menu__sublist[dir=rtl],[dir=rtl] .fd-menu__sublist{left:auto;margin:.25rem -.25rem 0 0;right:100%}.fd-menu__sublist[aria-hidden=true]{display:none}.fd-menu__list>.fd-menu__item{position:relative;width:100%}.fd-menu__list--overflow{flex-wrap:nowrap;overflow-y:scroll;scrollbar-color:var(--fdScrollbar_Thumb_Color) var(--fdScrollbar_Track_Color)}.fd-menu__list--overflow.is-focus,.fd-menu__list--overflow:focus{outline:none;z-index:5}.fd-menu__list--overflow::-webkit-scrollbar{height:var(--fdScrollbar_Dimension);width:var(--fdScrollbar_Dimension)}.fd-menu__list--overflow::-webkit-scrollbar-corner,.fd-menu__list--overflow::-webkit-scrollbar-track{background-color:var(--fdScrollbar_Track_Color)}.fd-menu__list--overflow::-webkit-scrollbar-thumb{-webkit-box-shadow:inset 0 0 0 var(--fdScrollbar_Dimension) var(--fdScrollbar_Thumb_Color);background-color:transparent;border:var(--fdScrollbar_Thumb_Offset) solid transparent;border-radius:calc(var(--fdScrollbar_Thumb_Border_Radius) - var(--fdScrollbar_Thumb_Offset));box-shadow:inset 0 0 0 var(--fdScrollbar_Dimension) var(--fdScrollbar_Thumb_Color)}.fd-menu__list--overflow::-webkit-scrollbar-thumb:active,.fd-menu__list--overflow::-webkit-scrollbar-thumb:hover{box-shadow:inset 0 0 0 var(--fdScrollbar_Dimension) var(--fdScrollbar_Thumb_Hover_Color)}.fd-menu__list--overflow::-webkit-scrollbar-corner,.fd-menu__list--overflow::-webkit-scrollbar-track{border-radius:0 var(--fdScrollbar_Border_Radius) var(--fdScrollbar_Border_Radius) 0}.fd-menu__list--overflow[dir=rtl]::-webkit-scrollbar-corner,.fd-menu__list--overflow[dir=rtl]::-webkit-scrollbar-track,[dir=rtl] .fd-menu__list--overflow::-webkit-scrollbar-corner,[dir=rtl] .fd-menu__list--overflow::-webkit-scrollbar-track{border-radius:var(--fdScrollbar_Border_Radius) 0 0 var(--fdScrollbar_Border_Radius)}.fd-menu__separator{-webkit-box-sizing:border-box;background-color:var(--sapGroup_ContentBorderColor);border:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;height:.0625rem;line-height:var(--sapContent_LineHeight);margin:0;padding:0;width:100%}.fd-menu__separator:after,.fd-menu__separator:before{box-sizing:inherit;font-size:inherit}.fd-menu__item{-webkit-box-sizing:border-box;background-color:var(--sapList_Background);border:0;border-radius:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:0;position:relative}.fd-menu__item:after,.fd-menu__item:before{box-sizing:inherit;font-size:inherit}.fd-menu__item:first-child,.fd-menu__item:first-child .fd-menu__link:after{border-top-left-radius:var(--fdButton_Menu_Border_Radius);border-top-right-radius:var(--fdButton_Menu_Border_Radius)}.fd-menu__item:last-of-type,.fd-menu__item:last-of-type .fd-menu__link:after{border-bottom-left-radius:var(--fdButton_Menu_Border_Radius);border-bottom-right-radius:var(--fdButton_Menu_Border_Radius)}.fd-menu__link{-webkit-box-sizing:border-box;align-items:center;border:0;border-radius:inherit;box-sizing:border-box;color:var(--sapTextColor);cursor:pointer;display:flex;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;height:var(--fdMenu_Link_Height, 2.75rem);line-height:var(--sapContent_LineHeight);margin:0;outline:none;padding:0;padding:var(--fdMenu_Link_Padding, .75rem 1rem .75rem .75rem);text-decoration:none;width:100%}.fd-menu__link:after,.fd-menu__link:before{box-sizing:inherit;font-size:inherit}.fd-menu__link.is-focus:after,.fd-menu__link:focus:after{border-color:var(--sapContent_FocusColor);border-style:var(--sapContent_FocusStyle);border-width:var(--sapContent_FocusWidth);content:\\\"\\\";inset:.0625rem;pointer-events:none;position:absolute}.fd-menu__link.is-hover,.fd-menu__link:hover{background-color:var(--sapList_Hover_Background)}.fd-menu__link.is-selected,.fd-menu__link[aria-selected=true]{background-color:var(--sapList_SelectionBackgroundColor);border-bottom:.0625rem solid var(--sapList_SelectionBorderColor)}.fd-menu__link.is-selected .fd-menu__addon-after,.fd-menu__link.is-selected .fd-menu__addon-before,.fd-menu__link.is-selected .fd-menu__shortcut,.fd-menu__link[aria-selected=true] .fd-menu__addon-after,.fd-menu__link[aria-selected=true] .fd-menu__addon-before,.fd-menu__link[aria-selected=true] .fd-menu__shortcut{color:var(--sapContent_NonInteractiveIconColor)}.fd-menu__link.is-selected.is-hover:not(:active):not(.is-active),.fd-menu__link.is-selected:hover:not(:active):not(.is-active),.fd-menu__link[aria-selected=true].is-hover:not(:active):not(.is-active),.fd-menu__link[aria-selected=true]:hover:not(:active):not(.is-active){background-color:var(--sapList_Hover_SelectionBackground)}.fd-menu__link.is-selected.is-focus,.fd-menu__link.is-selected:focus,.fd-menu__link[aria-selected=true].is-focus,.fd-menu__link[aria-selected=true]:focus{z-index:5}.fd-menu__link.is-selected.is-focus:after,.fd-menu__link.is-selected:focus:after,.fd-menu__link[aria-selected=true].is-focus:after,.fd-menu__link[aria-selected=true]:focus:after{bottom:.125rem}.fd-menu__link.is-active,.fd-menu__link:active{background-color:var(--sapList_Active_Background);color:var(--sapList_Active_TextColor)}.fd-menu__link.is-active:after,.fd-menu__link:active:after{display:none}.fd-menu__link.is-active .fd-menu__addon-after,.fd-menu__link.is-active .fd-menu__addon-before,.fd-menu__link.is-active .fd-menu__shortcut,.fd-menu__link.is-active .fd-menu__title,.fd-menu__link:active .fd-menu__addon-after,.fd-menu__link:active .fd-menu__addon-before,.fd-menu__link:active .fd-menu__shortcut,.fd-menu__link:active .fd-menu__title{color:var(--sapList_Active_TextColor)}.fd-menu__link.is-active.is-focus,.fd-menu__link.is-active:focus,.fd-menu__link:active.is-focus,.fd-menu__link:active:focus{outline-color:var(--fdMenu_Active_State_Focus);z-index:5}.fd-menu__link.is-disabled,.fd-menu__link:disabled,.fd-menu__link[aria-disabled=true]{opacity:var(--sapContent_DisabledOpacity);pointer-events:none}.fd-menu__link.is-disabled.is-focus,.fd-menu__link.is-disabled:focus,.fd-menu__link:disabled.is-focus,.fd-menu__link:disabled:focus,.fd-menu__link[aria-disabled=true].is-focus,.fd-menu__link[aria-disabled=true]:focus{z-index:5}.fd-menu__link.is-disabled.is-focus:after,.fd-menu__link.is-disabled:focus:after,.fd-menu__link:disabled.is-focus:after,.fd-menu__link:disabled:focus:after,.fd-menu__link[aria-disabled=true].is-focus:after,.fd-menu__link[aria-disabled=true]:focus:after{display:none}.fd-menu__link.has-child.is-expanded:not(:active):not(.is-active),.fd-menu__link.has-child[aria-expanded=true]:not(:active):not(.is-active){background-color:var(--sapList_SelectionBackgroundColor);border-bottom:.0625rem solid var(--sapList_SelectionBorderColor)}.fd-menu__link.has-child.is-expanded:not(:active):not(.is-active) .fd-menu__addon-after,.fd-menu__link.has-child.is-expanded:not(:active):not(.is-active) .fd-menu__addon-before,.fd-menu__link.has-child.is-expanded:not(:active):not(.is-active) .fd-menu__shortcut,.fd-menu__link.has-child[aria-expanded=true]:not(:active):not(.is-active) .fd-menu__addon-after,.fd-menu__link.has-child[aria-expanded=true]:not(:active):not(.is-active) .fd-menu__addon-before,.fd-menu__link.has-child[aria-expanded=true]:not(:active):not(.is-active) .fd-menu__shortcut{color:var(--sapContent_NonInteractiveIconColor)}.fd-menu__link.has-child.is-expanded:not(:active):not(.is-active).is-hover:not(:active):not(.is-active),.fd-menu__link.has-child.is-expanded:not(:active):not(.is-active):hover:not(:active):not(.is-active),.fd-menu__link.has-child[aria-expanded=true]:not(:active):not(.is-active).is-hover:not(:active):not(.is-active),.fd-menu__link.has-child[aria-expanded=true]:not(:active):not(.is-active):hover:not(:active):not(.is-active){background-color:var(--sapList_Hover_SelectionBackground)}.fd-menu__link.has-child.is-expanded:not(:active):not(.is-active).is-focus,.fd-menu__link.has-child.is-expanded:not(:active):not(.is-active):focus,.fd-menu__link.has-child[aria-expanded=true]:not(:active):not(.is-active).is-focus,.fd-menu__link.has-child[aria-expanded=true]:not(:active):not(.is-active):focus{z-index:5}.fd-menu__link.has-child.is-expanded:not(:active):not(.is-active).is-focus:after,.fd-menu__link.has-child.is-expanded:not(:active):not(.is-active):focus:after,.fd-menu__link.has-child[aria-expanded=true]:not(:active):not(.is-active).is-focus:after,.fd-menu__link.has-child[aria-expanded=true]:not(:active):not(.is-active):focus:after{bottom:.125rem}.fd-menu__title{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);color:var(--sapList_TextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;overflow:hidden;padding:0;text-overflow:ellipsis;text-shadow:var(--fdMenu_Text_Shadow);white-space:nowrap;width:100%}.fd-menu__title:after,.fd-menu__title:before{box-sizing:inherit;font-size:inherit}.fd-menu__addon-after,.fd-menu__addon-before{-webkit-box-sizing:border-box;-webkit-box-pack:center;-ms-flex-pack:center;align-items:center;background-color:transparent;border:0;box-sizing:border-box;color:var(--sapTextColor);color:var(--sapContent_NonInteractiveIconColor);display:flex;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-size:var(--sapFontLargeSize);font-weight:400;forced-color-adjust:none;height:1.25rem;justify-content:center;line-height:var(--sapContent_LineHeight);margin:0;min-width:var(--fdMenu_Icon_Width);padding:0;text-shadow:var(--fdMenu_Text_Shadow);width:var(--fdMenu_Icon_Width)}.fd-menu__addon-after:after,.fd-menu__addon-after:before,.fd-menu__addon-before:after,.fd-menu__addon-before:before{box-sizing:inherit;font-size:inherit}.fd-menu__addon-after [class*=sap-icon],.fd-menu__addon-after[class*=sap-icon],.fd-menu__addon-before [class*=sap-icon],.fd-menu__addon-before[class*=sap-icon]{background:inherit;border-radius:inherit;color:inherit;font-size:inherit;line-height:1}.fd-menu__addon-before{margin:var(--fdMenu_Icon_Before_Margin)}.fd-menu__addon-after,.fd-menu__addon-before[dir=rtl],[dir=rtl] .fd-menu__addon-before{margin:var(--fdMenu_Icon_After_Margin)}.fd-menu__addon-after[dir=rtl],[dir=rtl] .fd-menu__addon-after{margin:var(--fdMenu_Icon_Before_Margin)}.fd-menu__addon-after--submenu{font-size:var(--sapFontSmallSize)}.fd-menu__addon-after--submenu:before{content:\\\"\\\\e066\\\"}.fd-menu__addon-after--submenu:before,.fd-menu__addon-after--submenu[dir=rtl]:before,[dir=rtl] .fd-menu__addon-after--submenu:before{font-family:SAP-icons;text-align:center;text-decoration:inherit;text-rendering:optimizeLegibility;text-transform:none}.fd-menu__addon-after--submenu[dir=rtl]:before,[dir=rtl] .fd-menu__addon-after--submenu:before{content:\\\"\\\\e067\\\"}.fd-menu__shortcut{-webkit-box-sizing:border-box;-ms-flex-negative:0;border:0;box-sizing:border-box;color:var(--sapTextColor);color:var(--sapContent_NonInteractiveIconColor);display:flex;flex-shrink:0;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;overflow:hidden;padding:0 0 0 1rem;text-overflow:ellipsis;white-space:nowrap}.fd-menu__shortcut:after,.fd-menu__shortcut:before{box-sizing:inherit;font-size:inherit}.fd-menu__shortcut[dir=rtl],[dir=rtl] .fd-menu__shortcut{padding-left:0;padding-right:1rem}.fd-menu--overflow{-webkit-box-shadow:var(--sapContent_Shadow1);border-radius:var(--fdButton_Menu_Border_Radius);box-shadow:var(--sapContent_Shadow1);overflow-y:scroll;scrollbar-color:var(--fdScrollbar_Thumb_Color) var(--fdScrollbar_Track_Color)}.fd-menu--overflow.is-focus,.fd-menu--overflow:focus{outline:none;z-index:5}.fd-menu--overflow::-webkit-scrollbar{height:var(--fdScrollbar_Dimension);width:var(--fdScrollbar_Dimension)}.fd-menu--overflow::-webkit-scrollbar-corner,.fd-menu--overflow::-webkit-scrollbar-track{background-color:var(--fdScrollbar_Track_Color)}.fd-menu--overflow::-webkit-scrollbar-thumb{-webkit-box-shadow:inset 0 0 0 var(--fdScrollbar_Dimension) var(--fdScrollbar_Thumb_Color);background-color:transparent;border:var(--fdScrollbar_Thumb_Offset) solid transparent;border-radius:calc(var(--fdScrollbar_Thumb_Border_Radius) - var(--fdScrollbar_Thumb_Offset));box-shadow:inset 0 0 0 var(--fdScrollbar_Dimension) var(--fdScrollbar_Thumb_Color)}.fd-menu--overflow::-webkit-scrollbar-thumb:active,.fd-menu--overflow::-webkit-scrollbar-thumb:hover{box-shadow:inset 0 0 0 var(--fdScrollbar_Dimension) var(--fdScrollbar_Thumb_Hover_Color)}.fd-menu--overflow::-webkit-scrollbar-corner,.fd-menu--overflow::-webkit-scrollbar-track{border-radius:0 var(--fdScrollbar_Border_Radius) var(--fdScrollbar_Border_Radius) 0}.fd-menu--overflow[dir=rtl]::-webkit-scrollbar-corner,.fd-menu--overflow[dir=rtl]::-webkit-scrollbar-track,[dir=rtl] .fd-menu--overflow::-webkit-scrollbar-corner,[dir=rtl] .fd-menu--overflow::-webkit-scrollbar-track{border-radius:var(--fdScrollbar_Border_Radius) 0 0 var(--fdScrollbar_Border_Radius)}.fd-menu--overflow .fd-menu__list{box-shadow:none}.fd-menu--overflow .fd-menu__item:first-child{border-top-right-radius:0}.fd-menu--overflow .fd-menu__item:first-child[dir=rtl],[dir=rtl] .fd-menu--overflow .fd-menu__item:first-child{border-top-left-radius:0;border-top-right-radius:var(--fdButton_Menu_Border_Radius)}.fd-menu--overflow .fd-menu__item:last-of-type{border-bottom-right-radius:0}.fd-menu--overflow .fd-menu__item:last-of-type[dir=rtl],[dir=rtl] .fd-menu--overflow .fd-menu__item:last-of-type{border-bottom-left-radius:0;border-bottom-right-radius:var(--fdButton_Menu_Border_Radius)}.fd-menu--full-width{max-width:100%}.fd-menu[class*=-compact],.fd-menu[class*=-condensed],[class*=-compact] .fd-menu:not([class*=-cozy]),[class*=-condensed] .fd-menu:not([class*=-cozy]){--fdMenu_Icon_Before_Margin:0 0 0 -.5rem;--fdMenu_Icon_After_Margin:0 -.75rem 0 0;--fdMenu_Icon_Width:2rem;--fdMenu_Link_Padding:.375rem .75rem;--fdMenu_Link_Height:2rem}.fd-menu--mobile{--fdMenu_Icon_Before_Margin:0 0 0 -1rem;--fdMenu_Icon_After_Margin:0 -1rem 0 0;--fdMenu_Icon_Width:2.75rem;max-width:100%;width:100%}.fd-menu--mobile .fd-menu__list,.fd-menu--mobile .fd-menu__sublist{-webkit-box-shadow:none;border-radius:0;box-shadow:none;margin:0;position:static}.fd-menu--mobile .fd-menu__list .fd-menu__item,.fd-menu--mobile .fd-menu__sublist .fd-menu__item{border-radius:0}.fd-menu--mobile .fd-menu__list .fd-menu__link,.fd-menu--mobile .fd-menu__sublist .fd-menu__link{padding:.75rem 1rem}:host{display:inline}fd-menu .fd-menu__list,fd-menu .fd-menu__sublist{flex-wrap:nowrap}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MenuComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MenuModule = /*#__PURE__*/(() => {\n  class MenuModule {}\n  MenuModule.ɵfac = function MenuModule_Factory(t) {\n    return new (t || MenuModule)();\n  };\n  MenuModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MenuModule\n  });\n  MenuModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DynamicComponentService],\n    imports: [CommonModule, PopoverModule, IconModule, InitialFocusModule, ContentDensityModule, ContentDensityModule]\n  });\n  return MenuModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass DefaultMenuItem {}\nlet MenuKeyboardService = /*#__PURE__*/(() => {\n  class MenuKeyboardService {\n    constructor() {\n      /** Event emitted when an item link is clicked.*/\n      this.itemClicked = new Subject();\n      /** Whether user wants to remove keyboard handling */\n      this.disableKeydownHandling = false;\n    }\n    /** Function that should be called every time, keydown event is used on some menu item,\n     * it provides whole functionality for handling\n     * ArrowDown - focus, ArrowUp - focus, Space bar - simulate click, Enter key - simulate click.\n     * @param event KeyboardEvent\n     * @param index index of items starts from 0\n     * @param menuItems array of menu item directives\n     * */\n    keyDownHandler(event, index, menuItems) {\n      if (this.disableKeydownHandling) {\n        return;\n      }\n      if (KeyUtil.isKeyCode(event, DOWN_ARROW)) {\n        if (menuItems.length > index + 1) {\n          menuItems[index + 1].focus();\n        } else {\n          if (this.focusEscapeAfterList) {\n            this.focusEscapeAfterList();\n          } else {\n            menuItems[0].focus();\n          }\n        }\n        event.preventDefault();\n      } else if (KeyUtil.isKeyCode(event, UP_ARROW)) {\n        if (index > 0) {\n          menuItems[index - 1].focus();\n        } else {\n          if (this.focusEscapeBeforeList) {\n            this.focusEscapeBeforeList();\n          } else {\n            menuItems[menuItems.length - 1].focus();\n          }\n        }\n        event.preventDefault();\n      } else if (KeyUtil.isKeyCode(event, [SPACE, ENTER])) {\n        if (menuItems[index]) {\n          menuItems[index].click();\n          event.preventDefault();\n        }\n      }\n    }\n  }\n  MenuKeyboardService.ɵfac = function MenuKeyboardService_Factory(t) {\n    return new (t || MenuKeyboardService)();\n  };\n  MenuKeyboardService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MenuKeyboardService,\n    factory: MenuKeyboardService.ɵfac\n  });\n  return MenuKeyboardService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DefaultMenuItem, DeprecatedMenuCompactDirective, MENU_COMPONENT, MenuAddonDirective, MenuComponent, MenuInteractiveDirective, MenuItemComponent, MenuKeyboardService, MenuMobileComponent, MenuMobileModule, MenuModule, MenuSeparatorComponent, MenuService, MenuShortcutDirective, MenuTitleDirective, MenuTriggerDirective, SUBMENU, SubmenuComponent };\n//# sourceMappingURL=fundamental-ngx-core-menu.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}