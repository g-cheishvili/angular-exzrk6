{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Inject, HostListener, forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ContentChildren, ViewChild, HostBinding, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@angular/cdk/overlay';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { TAB, DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW } from '@angular/cdk/keycodes';\nimport { Subscription, of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport * as i2 from '@fundamental-ngx/cdk/utils';\nimport { KeyUtil, getRandomColorAccent, applyCssClass } from '@fundamental-ngx/cdk/utils';\nimport { __decorate, __metadata } from 'tslib';\nconst _c0 = [\"avatarGroupContainer\"];\nconst _c1 = [\"*\"];\nconst AVATAR_GROUP_FOCUSABLE_AVATAR_DIRECTIVE = new InjectionToken('AvatarGroupFocusableAvatarDirective');\nconst AVATAR_GROUP_COMPONENT = new InjectionToken('AvatarGroupComponent');\nlet AvatarGroupItemDirective = /*#__PURE__*/(() => {\n  class AvatarGroupItemDirective {\n    /** @hidden */\n    constructor(_elementRef, _component) {\n      this._elementRef = _elementRef;\n      this._component = _component;\n      /** Item disable state */\n      this.disabled = false;\n    }\n    /** @hidden */\n    get _element() {\n      return this._elementRef.nativeElement;\n    }\n    /** Handler for mouse events */\n    onClick() {\n      if (this._component) {\n        this._component._setActiveItem(this);\n      }\n    }\n    /** @hidden */\n    focus() {\n      this._element.focus();\n    }\n  }\n  AvatarGroupItemDirective.ɵfac = function AvatarGroupItemDirective_Factory(t) {\n    return new (t || AvatarGroupItemDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(AVATAR_GROUP_COMPONENT, 8));\n  };\n  AvatarGroupItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: AvatarGroupItemDirective,\n    selectors: [[\"\", \"fd-avatar-group-item\", \"\"]],\n    hostAttrs: [1, \"fd-avatar-group__item\"],\n    hostBindings: function AvatarGroupItemDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function AvatarGroupItemDirective_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n    }\n  });\n  return AvatarGroupItemDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet avatarGroupCount = 0;\nlet AvatarGroupComponent = /*#__PURE__*/(() => {\n  class AvatarGroupComponent {\n    /** @hidden */\n    get isGroupType() {\n      return this.type === 'group';\n    }\n    /** @hidden */\n    get _avatarGroupWidth() {\n      return this.avatarGroupContainer?.nativeElement?.offsetWidth;\n    }\n    /** @hidden */\n    get _avatarGroupItemWidth() {\n      return this.mainItems.first?._element.offsetWidth ?? 0;\n    }\n    /** @hidden */\n    get _avatarGroupItemWithMarginsWidth() {\n      if (!this.mainItems.first) {\n        return this._avatarGroupItemWidth;\n      }\n      const elementStyles = getComputedStyle(this.mainItems.first._element);\n      return this._avatarGroupItemWidth + parseInt(elementStyles.marginLeft, 10) + parseInt(elementStyles.marginRight, 10);\n    }\n    /** @hidden */\n    constructor(_viewportRuler, _rtlService) {\n      this._viewportRuler = _viewportRuler;\n      this._rtlService = _rtlService;\n      /** Id of the Avatar Group. */\n      this.id = `fd-avatar-group-${avatarGroupCount++}`;\n      /** The size of the Avatar Group. Options include: *xs*, *s*, *m*, *l* and *xl* (default: *s*). */\n      this.size = 's';\n      /** The type of the Avatar Group. Options include: *group* and *individual* (default: *group*). */\n      this.type = 'group';\n      /** Counter for all avatars. */\n      this.allItemsCount = 0;\n      /** Counter for visible in overflow popover avatars. */\n      this.overflowItemsCount = 0;\n      /** @hidden */\n      this._subscription = new Subscription();\n      /** @hidden handles rtl service */\n      this._dir = 'ltr';\n    }\n    /** @hidden */\n    ngOnInit() {\n      this._subscription.add(this._viewportRuler.change().subscribe(() => this._onResize()));\n    }\n    /** @hidden */\n    ngOnChanges() {\n      this._assignCssClasses();\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      this._reset();\n      this._subscription.add(of(true).pipe(delay(5)).subscribe(() => this._collapseItems()));\n      this._listenForItemChanges();\n      this._setKeyboardEventsManager();\n      this._subscribeToRtl();\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._subscription.unsubscribe();\n      this._keyboardEventsManager.destroy();\n    }\n    /** @hidden */\n    keyUpHandler(event) {\n      if (KeyUtil.isKeyCode(event, TAB)) {\n        const index = this.mainItems.toArray().findIndex(item => item._element === event.target);\n        if (index !== -1) {\n          this._keyboardEventsManager.setActiveItem(index);\n        }\n      }\n      if (KeyUtil.isKeyCode(event, [DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW])) {\n        event.preventDefault();\n        // passing the event to key manager so we get a change fired\n        this._keyboardEventsManager.onKeydown(event);\n      }\n    }\n    /** @hidden */\n    _setActiveItem(item) {\n      this._keyboardEventsManager.setActiveItem(item);\n    }\n    /** @hidden */\n    _onResize() {\n      this._reset();\n      this._collapseItems();\n    }\n    /** @hidden */\n    _reset() {\n      this.allItemsCount = this.mainItems.length;\n      this.overflowItemsCount = 0;\n      this.mainItems.forEach(it => {\n        it._element.style.display = 'inline-block';\n        it.disabled = false;\n      });\n    }\n    /** @hidden */\n    _collapseItems() {\n      const allItemsCounter = this.mainItems?.length || 0;\n      let contentWidth = 0;\n      let idx = 0;\n      const avatarGroupItemWidth = this._avatarGroupItemWidth;\n      const avatarGroupItemWithMarginsWidth = this._avatarGroupItemWithMarginsWidth;\n      while (idx < allItemsCounter) {\n        const newContentWidth = idx === 0 && this.isGroupType ? contentWidth + avatarGroupItemWidth : contentWidth + avatarGroupItemWithMarginsWidth;\n        if (newContentWidth >= this._avatarGroupWidth) {\n          // -1 because the last element in the loop will be replaced by the overflow button\n          const newIdx = idx - 1;\n          this.overflowItemsCount = allItemsCounter - newIdx;\n          const mainItemsToHide = this.mainItems.toArray().slice(newIdx);\n          mainItemsToHide.forEach(it => {\n            it._element.style.display = 'none';\n            it.disabled = true;\n          });\n          break;\n        }\n        contentWidth = newContentWidth;\n        idx++;\n      }\n    }\n    /** @hidden */\n    _listenForItemChanges() {\n      this._subscription.add(this.mainItems.changes.subscribe(() => this._onResize()));\n    }\n    /** @hidden */\n    _assignCssClasses() {\n      this.rootClassNames = {\n        'fd-avatar-group': true,\n        [`fd-avatar-group--${this.type}-type`]: !!this.type,\n        [`fd-avatar-group--${this.size}`]: !!this.size,\n        [this.class]: !!this.class\n      };\n    }\n    /** @hidden */\n    _setKeyboardEventsManager() {\n      this._keyboardEventsManager?.destroy();\n      this._keyboardEventsManager = new FocusKeyManager(this.mainItems).withWrap().withHorizontalOrientation(this._dir);\n    }\n    /** @hidden Rtl change subscription */\n    _subscribeToRtl() {\n      if (!this._rtlService) {\n        return;\n      }\n      const rtlSub = this._rtlService.rtl.subscribe(isRtl => {\n        this._dir = isRtl ? 'rtl' : 'ltr';\n        this._keyboardEventsManager = this._keyboardEventsManager.withHorizontalOrientation(this._dir);\n      });\n      this._subscription.add(rtlSub);\n    }\n  }\n  AvatarGroupComponent.ɵfac = function AvatarGroupComponent_Factory(t) {\n    return new (t || AvatarGroupComponent)(i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(i2.RtlService, 8));\n  };\n  AvatarGroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AvatarGroupComponent,\n    selectors: [[\"fd-avatar-group\"]],\n    contentQueries: function AvatarGroupComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, AvatarGroupItemDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mainItems = _t);\n      }\n    },\n    viewQuery: function AvatarGroupComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.avatarGroupContainer = _t.first);\n      }\n    },\n    hostBindings: function AvatarGroupComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keyup\", function AvatarGroupComponent_keyup_HostBindingHandler($event) {\n          return ctx.keyUpHandler($event);\n        });\n      }\n    },\n    inputs: {\n      id: \"id\",\n      class: \"class\",\n      size: \"size\",\n      type: \"type\",\n      ariaLabel: \"ariaLabel\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: AVATAR_GROUP_COMPONENT,\n      useExisting: forwardRef(() => AvatarGroupComponent)\n    }]), i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c1,\n    decls: 3,\n    vars: 4,\n    consts: [[3, \"id\"], [\"avatarGroupContainer\", \"\"]],\n    template: function AvatarGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.rootClassNames);\n        i0.ɵɵproperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel);\n      }\n    },\n    styles: [\"/*!\\n * Fundamental Library Styles v0.28.3\\n * Copyright (c) 2023 SAP SE or an SAP affiliate company.\\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/main/LICENSE)\\n */.fd-avatar{--fdAvatarZoomIconPosition:0;-webkit-box-sizing:border-box;background-color:var(--fdAvatar_BackgroundColor);background-position:50%;background-repeat:no-repeat;background-size:cover;border:0;border:var(--fdAvatar_Border);border-radius:var(--sapElement_BorderCornerRadius);box-sizing:border-box;color:var(--sapTextColor);color:var(--sapContent_ContrastTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:0;position:relative;text-shadow:var(--fdAvatar_Text_Shadow);vertical-align:middle}.fd-avatar:after,.fd-avatar:before{box-sizing:inherit;font-size:inherit}.fd-avatar.is-focus,.fd-avatar:focus{outline:none}.fd-avatar.is-focus:after,.fd-avatar:focus:after{border-color:var(--sapContent_FocusColor);border-radius:var(--fdAvatar_Focus_Outline_Radius);border-style:var(--sapContent_FocusStyle);border-width:var(--sapContent_FocusWidth);bottom:var(--fdAvatar_Focus_Outline_Offset);content:\\\"\\\";left:var(--fdAvatar_Focus_Outline_Offset);pointer-events:none;position:absolute;right:var(--fdAvatar_Focus_Outline_Offset);top:var(--fdAvatar_Focus_Outline_Offset)}.fd-avatar[tabindex=\\\"0\\\"]{cursor:pointer}.fd-avatar__zoom-icon [class*=sap-icon],.fd-avatar__zoom-icon[class*=sap-icon]{-webkit-box-pack:center;-ms-flex-pack:center;align-items:center;background:inherit;background-color:var(--sapButton_Emphasized_Background);border:.0625rem solid var(--sapButton_Emphasized_BorderColor);border-radius:inherit;border-radius:50%;color:inherit;color:var(--sapButton_Emphasized_TextColor);display:flex;font-size:inherit;justify-content:center;line-height:1;position:absolute}.fd-avatar__zoom-icon [class*=sap-icon] [class*=sap-icon],.fd-avatar__zoom-icon [class*=sap-icon][class*=sap-icon],.fd-avatar__zoom-icon[class*=sap-icon] [class*=sap-icon],.fd-avatar__zoom-icon[class*=sap-icon][class*=sap-icon]{bottom:var(--fdAvatarZoomIconPosition);right:var(--fdAvatarZoomIconPosition)}.fd-avatar__zoom-icon [class*=sap-icon] [class*=sap-icon][dir=rtl],.fd-avatar__zoom-icon [class*=sap-icon][class*=sap-icon][dir=rtl],.fd-avatar__zoom-icon[class*=sap-icon] [class*=sap-icon][dir=rtl],.fd-avatar__zoom-icon[class*=sap-icon][class*=sap-icon][dir=rtl],[dir=rtl] .fd-avatar__zoom-icon [class*=sap-icon] [class*=sap-icon],[dir=rtl] .fd-avatar__zoom-icon [class*=sap-icon][class*=sap-icon],[dir=rtl] .fd-avatar__zoom-icon[class*=sap-icon] [class*=sap-icon],[dir=rtl] .fd-avatar__zoom-icon[class*=sap-icon][class*=sap-icon]{left:var(--fdAvatarZoomIconPosition);right:auto}.fd-avatar__icon [class*=sap-icon],.fd-avatar__icon[class*=sap-icon]{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-box-align:center;-ms-flex-align:center;align-content:center;align-items:center;background:inherit;border-radius:inherit;color:inherit;display:flex;font-size:inherit;justify-content:center;line-height:1}.fd-avatar--circle{border-radius:50%}.fd-avatar--circle.is-focus,.fd-avatar--circle:focus{outline:none}.fd-avatar--circle.is-focus:after,.fd-avatar--circle:focus:after{border-color:var(--sapContent_FocusColor);border-radius:var(--fdAvatar_Focus_Outline_Radius_Circle);border-style:var(--sapContent_FocusStyle);border-width:var(--sapContent_FocusWidth);bottom:var(--fdAvatar_Focus_Outline_Offset);content:\\\"\\\";left:var(--fdAvatar_Focus_Outline_Offset);pointer-events:none;position:absolute;right:var(--fdAvatar_Focus_Outline_Offset);top:var(--fdAvatar_Focus_Outline_Offset)}.fd-avatar--transparent{background-color:var(--fdAvatar_Transparent_BackgroundColor);color:var(--sapContent_IconColor)}.fd-avatar--background-contain{background-size:contain}.fd-avatar--placeholder{background-color:var(--sapContent_ImagePlaceholderBackground)}.fd-avatar--tile{background-color:var(--fdAvatar_Tile_BackgroundColor)}.fd-avatar--border{border:.0625rem solid var(--sapGroup_ContentBorderColor)}.fd-avatar--accent-color-1{background-color:var(--fdAvatar_Accent_Color_1);border:var(--fdAvatar_Accent_Color_1_Border);color:var(--fdAvatar_Accent_Color_1_Text)}.fd-avatar--accent-color-2{background-color:var(--fdAvatar_Accent_Color_2);border:var(--fdAvatar_Accent_Color_2_Border);color:var(--fdAvatar_Accent_Color_2_Text)}.fd-avatar--accent-color-3{background-color:var(--fdAvatar_Accent_Color_3);border:var(--fdAvatar_Accent_Color_3_Border);color:var(--fdAvatar_Accent_Color_3_Text)}.fd-avatar--accent-color-4{background-color:var(--fdAvatar_Accent_Color_4);border:var(--fdAvatar_Accent_Color_4_Border);color:var(--fdAvatar_Accent_Color_4_Text)}.fd-avatar--accent-color-5{background-color:var(--fdAvatar_Accent_Color_5);border:var(--fdAvatar_Accent_Color_5_Border);color:var(--fdAvatar_Accent_Color_5_Text)}.fd-avatar--accent-color-6{background-color:var(--fdAvatar_Accent_Color_6);border:var(--fdAvatar_Accent_Color_6_Border);color:var(--fdAvatar_Accent_Color_6_Text)}.fd-avatar--accent-color-7{background-color:var(--fdAvatar_Accent_Color_7);border:var(--fdAvatar_Accent_Color_7_Border);color:var(--fdAvatar_Accent_Color_7_Text)}.fd-avatar--accent-color-8{background-color:var(--fdAvatar_Accent_Color_8);border:var(--fdAvatar_Accent_Color_8_Border);color:var(--fdAvatar_Accent_Color_8_Text)}.fd-avatar--accent-color-9{background-color:var(--fdAvatar_Accent_Color_9);border:var(--fdAvatar_Accent_Color_9_Border);color:var(--fdAvatar_Accent_Color_9_Text)}.fd-avatar--accent-color-10{background-color:var(--fdAvatar_Accent_Color_10);border:var(--fdAvatar_Accent_Color_10_Border);color:var(--fdAvatar_Accent_Color_10_Text)}.fd-avatar--xs{--fdAvatarZoomIconOffset:-.125rem;font-size:1rem;font-stretch:condensed;height:2rem;max-height:2rem;max-width:2rem;min-height:2rem;min-width:2rem;width:2rem}.fd-avatar--xs .fd-avatar__zoom-icon [class*=sap-icon],.fd-avatar--xs .fd-avatar__zoom-icon[class*=sap-icon]{font-size:.75rem;height:1.125rem;min-width:1.125rem;width:1.125rem}.fd-avatar--s{--fdAvatarZoomIconOffset:-.125rem;font-size:1.125rem;font-stretch:condensed;height:3rem;max-height:3rem;max-width:3rem;min-height:3rem;min-width:3rem;width:3rem}.fd-avatar--s .fd-avatar__zoom-icon [class*=sap-icon],.fd-avatar--s .fd-avatar__zoom-icon[class*=sap-icon]{font-size:.75rem;height:1.125rem;min-width:1.125rem;width:1.125rem}.fd-avatar--m{--fdAvatarZoomIconOffset:-.125rem;font-size:1.5rem;font-stretch:normal;height:4rem;max-height:4rem;max-width:4rem;min-height:4rem;min-width:4rem;width:4rem}.fd-avatar--m .fd-avatar__zoom-icon [class*=sap-icon],.fd-avatar--m .fd-avatar__zoom-icon[class*=sap-icon]{font-size:.75rem;height:1.125rem;min-width:1.125rem;width:1.125rem}.fd-avatar--l{--fdAvatarZoomIconOffset:-.1875rem;font-size:2.25rem;font-stretch:normal;height:5rem;max-height:5rem;max-width:5rem;min-height:5rem;min-width:5rem;width:5rem}.fd-avatar--l .fd-avatar__zoom-icon [class*=sap-icon],.fd-avatar--l .fd-avatar__zoom-icon[class*=sap-icon]{font-size:.875rem;height:1.25rem;min-width:1.25rem;width:1.25rem}.fd-avatar--xl{--fdAvatarZoomIconOffset:-.25rem;font-size:3rem;font-stretch:normal;height:7rem;max-height:7rem;max-width:7rem;min-height:7rem;min-width:7rem;width:7rem}.fd-avatar--xl .fd-avatar__zoom-icon [class*=sap-icon],.fd-avatar--xl .fd-avatar__zoom-icon[class*=sap-icon]{font-size:1rem;height:1.75rem;min-width:1.75rem;width:1.75rem}.fd-avatar--accent-color-1.fd-avatar--shell,.fd-avatar--accent-color-10.fd-avatar--shell,.fd-avatar--accent-color-2.fd-avatar--shell,.fd-avatar--accent-color-3.fd-avatar--shell,.fd-avatar--accent-color-4.fd-avatar--shell,.fd-avatar--accent-color-5.fd-avatar--shell,.fd-avatar--accent-color-6.fd-avatar--shell,.fd-avatar--accent-color-7.fd-avatar--shell,.fd-avatar--accent-color-8.fd-avatar--shell,.fd-avatar--accent-color-9.fd-avatar--shell{border:.0625rem solid var(--sapShell_InteractiveBorderColor)}.fd-avatar--l,.fd-avatar--m,.fd-avatar--s,.fd-avatar--xl,.fd-avatar--xs{-webkit-box-pack:center;-ms-flex-pack:center;align-items:center;display:inline-flex;justify-content:center;margin:0;padding:0}.fd-avatar--l:not(.fd-avatar--circle),.fd-avatar--m:not(.fd-avatar--circle),.fd-avatar--s:not(.fd-avatar--circle),.fd-avatar--xl:not(.fd-avatar--circle),.fd-avatar--xs:not(.fd-avatar--circle){--fdAvatarZoomIconPosition:var(--fdAvatarZoomIconOffset)}/*!\\n.fd-avatar-group+((--individual|--group), (--xs|--s|--m|--l|--xl)\\n*/.fd-avatar-group{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);display:flex;flex-direction:row;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:0}.fd-avatar-group:after,.fd-avatar-group:before{box-sizing:inherit;font-size:inherit}.fd-avatar-group--group-type[tabindex=\\\"0\\\"],.fd-avatar-group__popover-control[tabindex=\\\"0\\\"]{cursor:pointer}.fd-avatar-group--group-type[tabindex=\\\"0\\\"].is-focus,.fd-avatar-group--group-type[tabindex=\\\"0\\\"]:focus,.fd-avatar-group__popover-control[tabindex=\\\"0\\\"].is-focus,.fd-avatar-group__popover-control[tabindex=\\\"0\\\"]:focus{outline:none}.fd-avatar-group--group-type[tabindex=\\\"0\\\"].is-focus:after,.fd-avatar-group--group-type[tabindex=\\\"0\\\"]:focus:after,.fd-avatar-group__popover-control[tabindex=\\\"0\\\"].is-focus:after,.fd-avatar-group__popover-control[tabindex=\\\"0\\\"]:focus:after{border-color:var(--sapContent_FocusColor);border-radius:var(--fdAvatarGroup_Focus_Outline_Radius);border-style:var(--sapContent_FocusStyle);border-width:var(--sapContent_FocusWidth);bottom:var(--fdAvatarGroup_Focus_Outline_Offset);content:\\\"\\\";left:var(--fdAvatarGroup_Focus_Outline_Offset);pointer-events:none;position:absolute;right:var(--fdAvatarGroup_Focus_Outline_Offset);top:var(--fdAvatarGroup_Focus_Outline_Offset)}.fd-avatar-group__popover-control{display:flex;height:auto}.fd-avatar-group__focusable-avatar.is-focus,.fd-avatar-group__focusable-avatar:focus,.fd-avatar-group__item[tabindex=\\\"0\\\"].is-focus,.fd-avatar-group__item[tabindex=\\\"0\\\"]:focus{outline:none;z-index:5}.fd-avatar-group__focusable-avatar.is-focus .fd-avatar:after,.fd-avatar-group__focusable-avatar:focus .fd-avatar:after,.fd-avatar-group__item[tabindex=\\\"0\\\"].is-focus .fd-avatar:after,.fd-avatar-group__item[tabindex=\\\"0\\\"]:focus .fd-avatar:after{border-color:var(--sapContent_FocusColor);border-radius:var(--fdAvatar_Focus_Outline_Radius_Circle);border-style:var(--sapContent_FocusStyle);border-width:var(--sapContent_FocusWidth);bottom:var(--fdAvatar_Focus_Outline_Offset);content:\\\"\\\";left:var(--fdAvatar_Focus_Outline_Offset);pointer-events:none;position:absolute;right:var(--fdAvatar_Focus_Outline_Offset);top:var(--fdAvatar_Focus_Outline_Offset)}.fd-avatar-group--group-type .fd-avatar-group__more-button{pointer-events:none}.fd-avatar-group__item{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);display:inline-block;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:0;position:relative}.fd-avatar-group__item:after,.fd-avatar-group__item:before{box-sizing:inherit;font-size:inherit}.fd-avatar-group__more-button{outline:none!important}.fd-avatar-group__more-button.is-focus,.fd-avatar-group__more-button:focus{outline:none}.fd-avatar-group__more-button.is-focus:after,.fd-avatar-group__more-button:focus:after{border-color:var(--sapContent_FocusColor);border-radius:var(--fdAvatar_Focus_Outline_Radius_Circle);border-style:var(--sapContent_FocusStyle);border-width:var(--sapContent_FocusWidth);bottom:var(--fdAvatar_Focus_Outline_Offset);content:\\\"\\\";left:var(--fdAvatar_Focus_Outline_Offset);pointer-events:none;position:absolute;right:var(--fdAvatar_Focus_Outline_Offset);top:var(--fdAvatar_Focus_Outline_Offset)}.fd-avatar-group__more-button .fd-avatar-group__button-text{font-size:inherit}.fd-avatar-group__overflow-body{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:1rem;white-space:normal}.fd-avatar-group__overflow-body:after,.fd-avatar-group__overflow-body:before{box-sizing:inherit;font-size:inherit}.fd-avatar-group__overflow-body--no-padding{padding:0}.fd-avatar-group__overflow-body--no-horizontal-scroll{overflow-x:hidden}.fd-avatar-group__overflow-body--no-vertical-scroll{overflow-y:hidden}.fd-avatar-group__overflow-body .fd-avatar-group__item{margin:.25rem}.fd-avatar-group--xs .fd-avatar-group__item,.fd-avatar-group--xs .fd-avatar-group__more-button{height:2rem;max-height:2rem;max-width:2rem;min-height:2rem;min-width:2rem;width:2rem}.fd-avatar-group--xs .fd-avatar-group__more-button{border-radius:25rem;border-width:var(--fdAvatarGroup_MoreButton_Border);font-size:1rem}.fd-avatar-group--s .fd-avatar-group__item,.fd-avatar-group--s .fd-avatar-group__more-button{height:3rem;max-height:3rem;max-width:3rem;min-height:3rem;min-width:3rem;width:3rem}.fd-avatar-group--s .fd-avatar-group__more-button{border-radius:25rem;border-width:var(--fdAvatarGroup_MoreButton_Border);font-size:1.125rem}.fd-avatar-group--m .fd-avatar-group__item,.fd-avatar-group--m .fd-avatar-group__more-button{height:4rem;max-height:4rem;max-width:4rem;min-height:4rem;min-width:4rem;width:4rem}.fd-avatar-group--m .fd-avatar-group__more-button{border-radius:25rem;border-width:var(--fdAvatarGroup_MoreButton_Border);font-size:1.5rem}.fd-avatar-group--l .fd-avatar-group__item,.fd-avatar-group--l .fd-avatar-group__more-button{height:5rem;max-height:5rem;max-width:5rem;min-height:5rem;min-width:5rem;width:5rem}.fd-avatar-group--l .fd-avatar-group__more-button{border-radius:25rem;border-width:var(--fdAvatarGroup_MoreButton_Border);font-size:2.25rem}.fd-avatar-group--xl .fd-avatar-group__item,.fd-avatar-group--xl .fd-avatar-group__more-button{height:7rem;max-height:7rem;max-width:7rem;min-height:7rem;min-width:7rem;width:7rem}.fd-avatar-group--xl .fd-avatar-group__more-button{border-radius:25rem;border-width:var(--fdAvatarGroup_MoreButton_Border);font-size:3rem}.fd-avatar-group--individual-type.fd-avatar-group--xs .fd-avatar-group__item{margin-left:0;margin-right:.0625rem}.fd-avatar-group--individual-type.fd-avatar-group--xs .fd-avatar-group__item[dir=rtl],[dir=rtl] .fd-avatar-group--individual-type.fd-avatar-group--xs .fd-avatar-group__item{margin-left:.0625rem;margin-right:0}.fd-avatar-group--individual-type.fd-avatar-group--s .fd-avatar-group__item{margin-left:0;margin-right:.125rem}.fd-avatar-group--individual-type.fd-avatar-group--s .fd-avatar-group__item[dir=rtl],[dir=rtl] .fd-avatar-group--individual-type.fd-avatar-group--s .fd-avatar-group__item{margin-left:.125rem;margin-right:0}.fd-avatar-group--individual-type.fd-avatar-group--m .fd-avatar-group__item{margin-left:0;margin-right:.125rem}.fd-avatar-group--individual-type.fd-avatar-group--m .fd-avatar-group__item[dir=rtl],[dir=rtl] .fd-avatar-group--individual-type.fd-avatar-group--m .fd-avatar-group__item{margin-left:.125rem;margin-right:0}.fd-avatar-group--individual-type.fd-avatar-group--l .fd-avatar-group__item{margin-left:0;margin-right:.125rem}.fd-avatar-group--individual-type.fd-avatar-group--l .fd-avatar-group__item[dir=rtl],[dir=rtl] .fd-avatar-group--individual-type.fd-avatar-group--l .fd-avatar-group__item{margin-left:.125rem;margin-right:0}.fd-avatar-group--individual-type.fd-avatar-group--xl .fd-avatar-group__item{margin-left:0;margin-right:.25rem}.fd-avatar-group--individual-type.fd-avatar-group--xl .fd-avatar-group__item[dir=rtl],[dir=rtl] .fd-avatar-group--individual-type.fd-avatar-group--xl .fd-avatar-group__item{margin-left:.25rem;margin-right:0}.fd-avatar-group--group-type.fd-avatar-group--xs .fd-avatar-group__item{margin-left:0;margin-right:-.75rem}.fd-avatar-group--group-type.fd-avatar-group--xs .fd-avatar-group__item[dir=rtl],[dir=rtl] .fd-avatar-group--group-type.fd-avatar-group--xs .fd-avatar-group__item{margin-left:-.75rem;margin-right:0}.fd-avatar-group--group-type.fd-avatar-group--s .fd-avatar-group__item{margin-left:0;margin-right:-1.25rem}.fd-avatar-group--group-type.fd-avatar-group--s .fd-avatar-group__item[dir=rtl],[dir=rtl] .fd-avatar-group--group-type.fd-avatar-group--s .fd-avatar-group__item{margin-left:-1.25rem;margin-right:0}.fd-avatar-group--group-type.fd-avatar-group--m .fd-avatar-group__item{margin-left:0;margin-right:-1.625rem}.fd-avatar-group--group-type.fd-avatar-group--m .fd-avatar-group__item[dir=rtl],[dir=rtl] .fd-avatar-group--group-type.fd-avatar-group--m .fd-avatar-group__item{margin-left:-1.625rem;margin-right:0}.fd-avatar-group--group-type.fd-avatar-group--l .fd-avatar-group__item{margin-left:0;margin-right:-2rem}.fd-avatar-group--group-type.fd-avatar-group--l .fd-avatar-group__item[dir=rtl],[dir=rtl] .fd-avatar-group--group-type.fd-avatar-group--l .fd-avatar-group__item{margin-left:-2rem;margin-right:0}.fd-avatar-group--group-type.fd-avatar-group--xl .fd-avatar-group__item{margin-left:0;margin-right:-2.75rem}.fd-avatar-group--group-type.fd-avatar-group--xl .fd-avatar-group__item[dir=rtl],[dir=rtl] .fd-avatar-group--group-type.fd-avatar-group--xl .fd-avatar-group__item{margin-left:-2.75rem;margin-right:0}.fd-avatar-group .fd-avatar-group__more-button--accent-color-1{background-color:var(--fdAvatar_Accent_Color_1);border:var(--fdAvatar_Accent_Color_1_Border);color:var(--fdAvatar_Accent_Color_1_Text)}.fd-avatar-group .fd-avatar-group__more-button--accent-color-2{background-color:var(--fdAvatar_Accent_Color_2);border:var(--fdAvatar_Accent_Color_2_Border);color:var(--fdAvatar_Accent_Color_2_Text)}.fd-avatar-group .fd-avatar-group__more-button--accent-color-3{background-color:var(--fdAvatar_Accent_Color_3);border:var(--fdAvatar_Accent_Color_3_Border);color:var(--fdAvatar_Accent_Color_3_Text)}.fd-avatar-group .fd-avatar-group__more-button--accent-color-4{background-color:var(--fdAvatar_Accent_Color_4);border:var(--fdAvatar_Accent_Color_4_Border);color:var(--fdAvatar_Accent_Color_4_Text)}.fd-avatar-group .fd-avatar-group__more-button--accent-color-5{background-color:var(--fdAvatar_Accent_Color_5);border:var(--fdAvatar_Accent_Color_5_Border);color:var(--fdAvatar_Accent_Color_5_Text)}.fd-avatar-group .fd-avatar-group__more-button--accent-color-6{background-color:var(--fdAvatar_Accent_Color_6);border:var(--fdAvatar_Accent_Color_6_Border);color:var(--fdAvatar_Accent_Color_6_Text)}.fd-avatar-group .fd-avatar-group__more-button--accent-color-7{background-color:var(--fdAvatar_Accent_Color_7);border:var(--fdAvatar_Accent_Color_7_Border);color:var(--fdAvatar_Accent_Color_7_Text)}.fd-avatar-group .fd-avatar-group__more-button--accent-color-8{background-color:var(--fdAvatar_Accent_Color_8);border:var(--fdAvatar_Accent_Color_8_Border);color:var(--fdAvatar_Accent_Color_8_Text)}.fd-avatar-group .fd-avatar-group__more-button--accent-color-9{background-color:var(--fdAvatar_Accent_Color_9);border:var(--fdAvatar_Accent_Color_9_Border);color:var(--fdAvatar_Accent_Color_9_Text)}.fd-avatar-group .fd-avatar-group__more-button--accent-color-10{background-color:var(--fdAvatar_Accent_Color_10);border:var(--fdAvatar_Accent_Color_10_Border);color:var(--fdAvatar_Accent_Color_10_Text)}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return AvatarGroupComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// import { AvatarGroupFocusableAvatarDirective } from './avatar-group-focusable-avatar.directive';\nlet AvatarGroupOverflowBodyDirective = /*#__PURE__*/(() => {\n  class AvatarGroupOverflowBodyDirective {\n    /** @hidden */\n    constructor(_rtlService) {\n      this._rtlService = _rtlService;\n      /** Remove the padding from the overflow body. */\n      this.noPadding = false;\n      /** Hide horizontal scrollbar from the overflow body. */\n      this.noHorizontalScroll = true;\n      /** Hide vertical scrollbar from the overflow body. */\n      this.noVerticalScroll = true;\n      /** @hidden */\n      this._subscription = new Subscription();\n      /** @hidden handles rtl service */\n      this._dir = 'ltr';\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      this._listenForItemChanges();\n      this._setKeyboardEventsManager();\n      this._subscribeToRtl();\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._subscription.unsubscribe();\n      this._keyboardEventsManager?.destroy();\n    }\n    /** @hidden */\n    keyUpHandler(event) {\n      if (KeyUtil.isKeyCode(event, TAB)) {\n        const index = this.overflowItems.toArray().findIndex(item => item.elementRef().nativeElement === event.target);\n        if (index !== -1) {\n          this._keyboardEventsManager.setActiveItem(index);\n        }\n      }\n      if (KeyUtil.isKeyCode(event, [DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW])) {\n        // passing the event to key manager so we get a change fired\n        this._keyboardEventsManager.onKeydown(event);\n      }\n    }\n    /** @hidden */\n    _setActiveItem(item) {\n      this._keyboardEventsManager.setActiveItem(item);\n    }\n    /** @hidden */\n    _listenForItemChanges() {\n      this.overflowItems.changes.subscribe(() => this._setKeyboardEventsManager());\n    }\n    /** @hidden */\n    _setKeyboardEventsManager() {\n      this._keyboardEventsManager?.destroy();\n      this._keyboardEventsManager = new FocusKeyManager(this.overflowItems).withWrap().withHorizontalOrientation(this._dir);\n      this._keyboardEventsManager.setFirstItemActive();\n    }\n    /** @hidden Rtl change subscription */\n    _subscribeToRtl() {\n      if (!this._rtlService) {\n        return;\n      }\n      const rtlSub = this._rtlService.rtl.subscribe(isRtl => {\n        this._dir = isRtl ? 'rtl' : 'ltr';\n        this._keyboardEventsManager.withHorizontalOrientation(this._dir);\n      });\n      this._subscription.add(rtlSub);\n    }\n  }\n  AvatarGroupOverflowBodyDirective.ɵfac = function AvatarGroupOverflowBodyDirective_Factory(t) {\n    return new (t || AvatarGroupOverflowBodyDirective)(i0.ɵɵdirectiveInject(i2.RtlService, 8));\n  };\n  AvatarGroupOverflowBodyDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: AvatarGroupOverflowBodyDirective,\n    selectors: [[\"\", \"fd-avatar-group-overflow-body\", \"\"]],\n    contentQueries: function AvatarGroupOverflowBodyDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, AVATAR_GROUP_FOCUSABLE_AVATAR_DIRECTIVE, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.overflowItems = _t);\n      }\n    },\n    hostAttrs: [1, \"fd-avatar-group__overflow-body\"],\n    hostVars: 6,\n    hostBindings: function AvatarGroupOverflowBodyDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keyup\", function AvatarGroupOverflowBodyDirective_keyup_HostBindingHandler($event) {\n          return ctx.keyUpHandler($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-avatar-group__overflow-body--no-padding\", ctx.noPadding)(\"fd-avatar-group__overflow-body--no-horizontal-scroll\", ctx.noHorizontalScroll)(\"fd-avatar-group__overflow-body--no-vertical-scroll\", ctx.noVerticalScroll);\n      }\n    },\n    inputs: {\n      noPadding: \"noPadding\",\n      noHorizontalScroll: \"noHorizontalScroll\",\n      noVerticalScroll: \"noVerticalScroll\"\n    }\n  });\n  return AvatarGroupOverflowBodyDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AvatarGroupOverflowItemDirective = /*#__PURE__*/(() => {\n  class AvatarGroupOverflowItemDirective extends AvatarGroupItemDirective {}\n  AvatarGroupOverflowItemDirective.ɵfac = /* @__PURE__ */function () {\n    let ɵAvatarGroupOverflowItemDirective_BaseFactory;\n    return function AvatarGroupOverflowItemDirective_Factory(t) {\n      return (ɵAvatarGroupOverflowItemDirective_BaseFactory || (ɵAvatarGroupOverflowItemDirective_BaseFactory = i0.ɵɵgetInheritedFactory(AvatarGroupOverflowItemDirective)))(t || AvatarGroupOverflowItemDirective);\n    };\n  }();\n  AvatarGroupOverflowItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: AvatarGroupOverflowItemDirective,\n    selectors: [[\"\", \"fd-avatar-group-overflow-item\", \"\"]],\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return AvatarGroupOverflowItemDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AvatarGroupOverflowButtonDirective = /*#__PURE__*/(() => {\n  class AvatarGroupOverflowButtonDirective {\n    /** @hidden */\n    constructor(_elementRef) {\n      this._elementRef = _elementRef;\n      /** The size of the overflow button.\n       * Should be the same as the Avatar Group and Avatar size.\n       * Options include: *xs*, *s*, *m*, *l* and *xl* (default: *s*). */\n      this.size = 's';\n      /** A number from 1 to 10 representing the background color of the Avatar Group's overflow button.\n       * Options include: *neutral*, *random*, *1*, *2*, *3*, *4*, *5*, *6*, *7*, *8*, *9*, *10* (default: *neutral*). */\n      this.color = 'neutral';\n    }\n    /** @hidden */\n    ngOnInit() {\n      this.buildComponentCssClass();\n    }\n    /** @hidden */\n    ngOnChanges() {\n      this.buildComponentCssClass();\n    }\n    /** @hidden */\n    buildComponentCssClass() {\n      return ['fd-button', 'fd-avatar-group__more-button', this.color && this._getMoreButtonColorCssClass() || '', this.size ? `fd-avatar-group__more-button--${this.size}` : '', this.class];\n    }\n    /** @hidden */\n    elementRef() {\n      return this._elementRef;\n    }\n    /** @hidden */\n    _getMoreButtonColorCssClass() {\n      if (this.color === 'random') {\n        return `fd-avatar-group__more-button--accent-color-${getRandomColorAccent()}`;\n      }\n      if (!Number.isNaN(parseInt(this.color, 10))) {\n        return `fd-avatar-group__more-button--accent-color-${this.color}`;\n      }\n      return null;\n    }\n  }\n  AvatarGroupOverflowButtonDirective.ɵfac = function AvatarGroupOverflowButtonDirective_Factory(t) {\n    return new (t || AvatarGroupOverflowButtonDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  AvatarGroupOverflowButtonDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: AvatarGroupOverflowButtonDirective,\n    selectors: [[\"\", \"fd-avatar-group-overflow-button\", \"\"]],\n    inputs: {\n      class: \"class\",\n      size: \"size\",\n      color: \"color\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  __decorate([applyCssClass, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", Array)], AvatarGroupOverflowButtonDirective.prototype, \"buildComponentCssClass\", null);\n  return AvatarGroupOverflowButtonDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AvatarGroupOverflowButtonTextDirective = /*#__PURE__*/(() => {\n  class AvatarGroupOverflowButtonTextDirective {}\n  AvatarGroupOverflowButtonTextDirective.ɵfac = function AvatarGroupOverflowButtonTextDirective_Factory(t) {\n    return new (t || AvatarGroupOverflowButtonTextDirective)();\n  };\n  AvatarGroupOverflowButtonTextDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: AvatarGroupOverflowButtonTextDirective,\n    selectors: [[\"\", \"fd-avatar-group-overflow-button-text\", \"\"]],\n    hostAttrs: [1, \"fd-button__text\", \"fd-avatar-group__button-text\"]\n  });\n  return AvatarGroupOverflowButtonTextDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AvatarGroupFocusableAvatarDirective = /*#__PURE__*/(() => {\n  class AvatarGroupFocusableAvatarDirective {\n    /** @hidden */\n    constructor(_elementRef, _component) {\n      this._elementRef = _elementRef;\n      this._component = _component;\n      /** Tabindex of the Avatar. */\n      this.tabindex = 0;\n    }\n    /** @hidden */\n    elementRef() {\n      return this._elementRef;\n    }\n    /** @hidden */\n    get _element() {\n      return this._elementRef.nativeElement;\n    }\n    /** Handler for mouse events */\n    onClick() {\n      if (this._component) {\n        this._component._setActiveItem(this);\n      }\n    }\n    /** @hidden */\n    focus() {\n      this._element.focus();\n    }\n  }\n  AvatarGroupFocusableAvatarDirective.ɵfac = function AvatarGroupFocusableAvatarDirective_Factory(t) {\n    return new (t || AvatarGroupFocusableAvatarDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(forwardRef(() => AvatarGroupOverflowBodyDirective), 8));\n  };\n  AvatarGroupFocusableAvatarDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: AvatarGroupFocusableAvatarDirective,\n    selectors: [[\"\", \"fd-avatar-group-focusable-avatar\", \"\"]],\n    hostAttrs: [1, \"fd-avatar-group__focusable-avatar\"],\n    hostVars: 1,\n    hostBindings: function AvatarGroupFocusableAvatarDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function AvatarGroupFocusableAvatarDirective_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", ctx.tabindex);\n      }\n    },\n    inputs: {\n      tabindex: \"tabindex\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: AVATAR_GROUP_FOCUSABLE_AVATAR_DIRECTIVE,\n      useExisting: forwardRef(() => AvatarGroupFocusableAvatarDirective)\n    }])]\n  });\n  return AvatarGroupFocusableAvatarDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Needed to bind specific class to group type popover control. */\nlet AvatarGroupPopoverControlDirective = /*#__PURE__*/(() => {\n  class AvatarGroupPopoverControlDirective {\n    constructor() {\n      /** Tabindex of the popover control. */\n      this.tabindex = 0;\n      /** Role of the popover control. */\n      this.role = 'button';\n    }\n  }\n  AvatarGroupPopoverControlDirective.ɵfac = function AvatarGroupPopoverControlDirective_Factory(t) {\n    return new (t || AvatarGroupPopoverControlDirective)();\n  };\n  AvatarGroupPopoverControlDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: AvatarGroupPopoverControlDirective,\n    selectors: [[\"\", \"fd-avatar-group-popover-control\", \"\"]],\n    hostAttrs: [1, \"fd-avatar-group__popover-control\"],\n    hostVars: 2,\n    hostBindings: function AvatarGroupPopoverControlDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", ctx.tabindex)(\"role\", ctx.role);\n      }\n    },\n    inputs: {\n      tabindex: \"tabindex\",\n      role: \"role\"\n    }\n  });\n  return AvatarGroupPopoverControlDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AvatarGroupModule = /*#__PURE__*/(() => {\n  class AvatarGroupModule {}\n  AvatarGroupModule.ɵfac = function AvatarGroupModule_Factory(t) {\n    return new (t || AvatarGroupModule)();\n  };\n  AvatarGroupModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AvatarGroupModule\n  });\n  AvatarGroupModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n  return AvatarGroupModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AvatarGroupComponent, AvatarGroupFocusableAvatarDirective, AvatarGroupItemDirective, AvatarGroupModule, AvatarGroupOverflowBodyDirective, AvatarGroupOverflowButtonDirective, AvatarGroupOverflowButtonTextDirective, AvatarGroupOverflowItemDirective, AvatarGroupPopoverControlDirective };\n//# sourceMappingURL=fundamental-ngx-core-avatar-group.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}