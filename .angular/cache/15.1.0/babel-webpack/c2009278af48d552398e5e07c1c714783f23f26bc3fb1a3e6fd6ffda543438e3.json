{"ast":null,"code":"import _asyncToGenerator from \"/home/webpct/angular-exzrk6/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, HostBinding, ContentChildren, Inject, Optional, ViewChild, HostListener, NgModule, isDevMode, Injector, ElementRef, Attribute, Self, forwardRef, Directive } from '@angular/core';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from '@fundamental-ngx/core/popover';\nimport { PopoverModule } from '@fundamental-ngx/core/popover';\nimport { ButtonModule } from '@fundamental-ngx/core/button';\nimport * as i7 from '@fundamental-ngx/core/icon';\nimport { IconModule } from '@fundamental-ngx/core/icon';\nimport { BusyIndicatorModule } from '@fundamental-ngx/core/busy-indicator';\nimport * as i8 from '@fundamental-ngx/core/list';\nimport { ListTitleDirective, ListModule } from '@fundamental-ngx/core/list';\nimport * as i9 from '@fundamental-ngx/i18n';\nimport { I18nModule } from '@fundamental-ngx/i18n';\nimport * as i4$1 from '@fundamental-ngx/core/content-density';\nimport { contentDensityObserverProviders, DeprecatedCompactDirective, CONTENT_DENSITY_DIRECTIVE, ContentDensityModule } from '@fundamental-ngx/core/content-density';\nimport * as i3$1 from '@angular/forms';\nimport { CdkConnectedOverlay } from '@angular/cdk/overlay';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Subject, Subscription, defer, merge } from 'rxjs';\nimport { takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport * as i1$1 from '@fundamental-ngx/cdk/utils';\nimport { KeyUtil, DynamicComponentService } from '@fundamental-ngx/cdk/utils';\nimport { registerFormItemControl } from '@fundamental-ngx/core/form';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, hasModifierKey, HOME, END, UP_ARROW, DOWN_ARROW, ESCAPE, TAB } from '@angular/cdk/keycodes';\nimport * as i1 from '@fundamental-ngx/core/dialog';\nimport { DialogModule } from '@fundamental-ngx/core/dialog';\nimport { MobileModeBase, MobileModeControl, MOBILE_MODE_CONFIG } from '@fundamental-ngx/core/mobile-mode';\nimport * as i3 from '@fundamental-ngx/core/bar';\nimport * as i4 from '@fundamental-ngx/core/title';\nconst _c0 = [\"fd-option\", \"\"];\nfunction OptionComponent_span_0_1_ng_template_0_Template(rf, ctx) {}\nfunction OptionComponent_span_0_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, OptionComponent_span_0_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction OptionComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵtemplate(1, OptionComponent_span_0_1_Template, 1, 0, null, 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n  }\n}\nfunction OptionComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1);\n  }\n}\nconst _c1 = [[[\"\", \"secondary\", \"\"]], \"*\"];\nconst _c2 = [\"[secondary]\", \"*\"];\nconst _c3 = [\"dialogTemplate\"];\nfunction SelectMobileComponent_ng_template_0_h1_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.mobileConfig.title);\n  }\n}\nfunction SelectMobileComponent_ng_template_0_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function SelectMobileComponent_ng_template_0_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8._cancel());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"mobile\", true);\n  }\n}\nfunction SelectMobileComponent_ng_template_0_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction SelectMobileComponent_ng_template_0_fd_dialog_footer_6_fd_button_bar_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"fd-button-bar\", 10);\n    i0.ɵɵlistener(\"click\", function SelectMobileComponent_ng_template_0_fd_dialog_footer_6_fd_button_bar_1_Template_fd_button_bar_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r12._approve());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"label\", ctx_r10.mobileConfig.approveButtonText);\n  }\n}\nfunction SelectMobileComponent_ng_template_0_fd_dialog_footer_6_fd_button_bar_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"fd-button-bar\", 11);\n    i0.ɵɵlistener(\"click\", function SelectMobileComponent_ng_template_0_fd_dialog_footer_6_fd_button_bar_2_Template_fd_button_bar_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r14._cancel());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"label\", ctx_r11.mobileConfig.cancelButtonText);\n  }\n}\nfunction SelectMobileComponent_ng_template_0_fd_dialog_footer_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"fd-dialog-footer\");\n    i0.ɵɵtemplate(1, SelectMobileComponent_ng_template_0_fd_dialog_footer_6_fd_button_bar_1_Template, 1, 1, \"fd-button-bar\", 8);\n    i0.ɵɵtemplate(2, SelectMobileComponent_ng_template_0_fd_dialog_footer_6_fd_button_bar_2_Template, 1, 1, \"fd-button-bar\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.mobileConfig == null ? null : ctx_r7.mobileConfig.approveButtonText);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.mobileConfig == null ? null : ctx_r7.mobileConfig.cancelButtonText);\n  }\n}\nfunction SelectMobileComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"fd-dialog\", 1)(1, \"fd-dialog-header\");\n    i0.ɵɵtemplate(2, SelectMobileComponent_ng_template_0_h1_2_Template, 2, 1, \"h1\", 2);\n    i0.ɵɵtemplate(3, SelectMobileComponent_ng_template_0_button_3_Template, 1, 1, \"button\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"fd-dialog-body\");\n    i0.ɵɵtemplate(5, SelectMobileComponent_ng_template_0_ng_container_5_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SelectMobileComponent_ng_template_0_fd_dialog_footer_6_Template, 3, 2, \"fd-dialog-footer\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dialog_r2 = ctx.$implicit;\n    const dialogConfig_r3 = ctx.dialogConfig;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"dialogConfig\", dialogConfig_r3)(\"dialogRef\", dialog_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mobileConfig.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mobileConfig.hasCloseButton);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.childContent);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mobileConfig.approveButtonText || ctx_r1.mobileConfig.cancelButtonText);\n  }\n}\nconst _c4 = [\"selectControl\"];\nconst _c5 = [\"selectOptionsListTemplate\"];\nconst _c6 = [\"dialogContainer\"];\nconst _c7 = [\"optionPanel\"];\nfunction SelectComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c8 = function () {\n  return [];\n};\nfunction SelectComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"fd-popover\", 5);\n    i0.ɵɵlistener(\"isOpenChange\", function SelectComponent_ng_template_1_Template_fd_popover_isOpenChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9._popoverOpenChangeHandle($event));\n    });\n    i0.ɵɵelementStart(1, \"fd-popover-control\");\n    i0.ɵɵelementContainer(2, 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"fd-popover-body\", 7);\n    i0.ɵɵelementContainer(4, 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(4);\n    const _r5 = i0.ɵɵreference(6);\n    i0.ɵɵproperty(\"isOpen\", ctx_r2._isOpen)(\"triggers\", i0.ɵɵpureFunction0(11, _c8))(\"focusTrapped\", true)(\"disabled\", ctx_r2.disabled || ctx_r2.readonly)(\"appendTo\", ctx_r2.appendTo)(\"closeOnEscapeKey\", true)(\"fillControlMode\", ctx_r2.fillControlMode)(\"maxWidth\", 600)(\"closeOnOutsideClick\", ctx_r2.closeOnOutsideClick);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r5);\n  }\n}\nfunction SelectComponent_ng_template_3_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r13.triggerValue, \" \");\n  }\n}\nfunction SelectComponent_ng_template_3_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵelement(1, \"fd-icon\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"is-disabled\", ctx_r14.disabled);\n    i0.ɵɵproperty(\"ngClass\", ctx_r14.selectDropdownButtonClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"glyph\", ctx_r14.glyph);\n  }\n}\nconst _c9 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    selected: a1\n  };\n};\nfunction SelectComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8, 9);\n    i0.ɵɵlistener(\"focus\", function SelectComponent_ng_template_3_Template_div_focus_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15._onFocus());\n    })(\"blur\", function SelectComponent_ng_template_3_Template_div_blur_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17._onBlur());\n    });\n    i0.ɵɵpipe(2, \"fdTranslate\");\n    i0.ɵɵelementStart(3, \"div\", 10);\n    i0.ɵɵelementContainer(4, 11);\n    i0.ɵɵtemplate(5, SelectComponent_ng_template_3_ng_template_5_Template, 1, 1, \"ng-template\", null, 12, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, SelectComponent_ng_template_3_span_7_Template, 2, 4, \"span\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r12 = i0.ɵɵreference(6);\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r4._selectControlClass);\n    i0.ɵɵclassProp(\"is-active\", ctx_r4._isOpen)(\"is-expanded\", ctx_r4._isOpen)(\"is-disabled\", ctx_r4.disabled)(\"is-readonly\", ctx_r4.readonly);\n    i0.ɵɵattribute(\"tabindex\", ctx_r4._tabIndex)(\"id\", ctx_r4.controlId)(\"aria-active\", ctx_r4._isOpen)(\"aria-selected\", ctx_r4.selected ? ctx_r4.selected.selected : null)(\"aria-expanded\", ctx_r4._isOpen)(\"aria-disabled\", ctx_r4.disabled)(\"aria-controls\", ctx_r4.controlId + \"-list-box\")(\"aria-haspopup\", !(ctx_r4.readonly || ctx_r4.disabled))(\"aria-required\", ctx_r4.required)(\"title\", ctx_r4.triggerValue)(\"aria-label\", ctx_r4.ariaLabel || i0.ɵɵpipeBind1(2, 27, \"platformSelect.selectOptionLabel\"))(\"aria-labelledby\", ctx_r4.ariaLabelledBy)(\"aria-activedescendant\", ctx_r4._getAriaActiveDescendant());\n    i0.ɵɵadvance(3);\n    i0.ɵɵattribute(\"aria-label\", ctx_r4.triggerValue);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.controlTemplate ? ctx_r4.controlTemplate : _r12)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(29, _c9, ctx_r4.triggerValue, ctx_r4.selected));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.readonly);\n  }\n}\nfunction SelectComponent_ng_template_5_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"li\", 19);\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"type\", ctx_r19.state || \"default\")(\"innerHtml\", ctx_r19.stateMessage, i0.ɵɵsanitizeHtml);\n    i0.ɵɵattribute(\"aria-label\", ctx_r19.stateMessage);\n  }\n}\nfunction SelectComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 16, 17);\n    i0.ɵɵtemplate(2, SelectComponent_ng_template_5_li_2_Template, 1, 3, \"li\", 18);\n    i0.ɵɵprojection(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"max-height\", ctx_r6.maxHeight || ctx_r6.calculatedMaxHeight + \"px\");\n    i0.ɵɵproperty(\"mobileMode\", ctx_r6.mobile)(\"dropdownMode\", true)(\"hasMessage\", !!ctx_r6.stateMessage);\n    i0.ɵɵattribute(\"id\", ctx_r6.controlId + \"-list-box\")(\"tooltip\", ctx_r6.triggerValue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.stateMessage);\n  }\n}\nfunction SelectComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 6);\n    i0.ɵɵelement(1, \"div\", null, 20);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r3);\n  }\n}\nconst _c10 = [\"*\"];\nconst SELECT_COMPONENT = new InjectionToken('SelectInterface');\nlet SelectKeyManagerService = /*#__PURE__*/(() => {\n  class SelectKeyManagerService {\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @hidden\n     */\n    _initKeyManager() {\n      this._keyManager = new ActiveDescendantKeyManager(this._component._options).withTypeAhead(this._component.typeaheadDebounceInterval).withVerticalOrientation().withHorizontalOrientation(this._component._isRtl() ? 'rtl' : 'ltr').withAllowedModifierKeys(['shiftKey']);\n      this._keyManager.tabOut.pipe(takeUntil(this._component._destroy)).subscribe(() => {\n        // tab focus fix for mobile\n        if (!this._component.mobile) {\n          this._component.focus();\n          this._component.close();\n        }\n      });\n      this._keyManager.change.pipe(takeUntil(this._component._destroy)).subscribe(() => {\n        if (this._component._isOpen && this._component._optionPanel) {\n          this._scrollActiveOptionIntoView();\n        } else if (!this._component._isOpen && this._keyManager.activeItem) {\n          this._keyManager.activeItem._selectViaInteraction();\n        }\n      });\n    }\n    /** @hidden */\n    _scrollActiveOptionIntoView() {\n      const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n      this._component._optionPanel.nativeElement.scrollTop = this._component._getOptionScrollPosition(activeOptionIndex, this._component._getItemHeight(), this._component._optionPanel.nativeElement.scrollTop);\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @hidden\n     */\n    _handleClosedKeydown(event) {\n      const isOpenKey = KeyUtil.isKeyCode(event, [ENTER, SPACE]);\n      const manager = this._keyManager;\n      // Open the select on ALT + arrow key to match the native <select>\n      if (!manager.isTyping() && isOpenKey && !hasModifierKey(event)) {\n        // prevents the page from scrolling down when pressing space\n        event.preventDefault();\n        this._component.open();\n      } else {\n        const previouslySelectedOption = this._component.selected;\n        if (KeyUtil.isKeyCode(event, [HOME, END])) {\n          if (KeyUtil.isKeyCode(event, HOME)) {\n            manager.setFirstItemActive();\n          } else {\n            manager.setLastItemActive();\n          }\n          event.preventDefault();\n        }\n        const selectedOption = this._component.selected;\n        // a11y Since the value has changed, we need to announce it.\n        if (selectedOption && previouslySelectedOption !== selectedOption) {\n          this._component._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n        }\n        manager.onKeydown(event);\n      }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     *\n     * @hidden\n     */\n    _handleOpenKeydown(event) {\n      const manager = this._keyManager;\n      const isArrowKey = KeyUtil.isKeyCode(event, [UP_ARROW, DOWN_ARROW]);\n      const isTyping = manager.isTyping();\n      if (KeyUtil.isKeyCode(event, [HOME, END])) {\n        event.preventDefault();\n        if (KeyUtil.isKeyCode(event, HOME)) {\n          manager.setFirstItemActive();\n        } else {\n          manager.setLastItemActive();\n        }\n      } else if (isArrowKey && event.altKey || KeyUtil.isKeyCode(event, [ESCAPE])) {\n        // Close the select on ALT + arrow key to match the native <select>\n        event.preventDefault();\n        this._component.blur();\n        this._component.close();\n        // When user is typing do nothing,\n        // because the typing sequence can include the space key.\n      } else if (!isTyping && KeyUtil.isKeyCode(event, [ENTER, SPACE]) && manager.activeItem && !hasModifierKey(event)) {\n        event.preventDefault();\n        manager.activeItem._selectViaInteraction();\n        this._component.blur();\n      } else if (!isTyping && KeyUtil.isKeyCode(event, [TAB]) && this._component.mobile) {\n        event.preventDefault();\n      } else {\n        manager.onKeydown(event);\n      }\n    }\n  }\n  SelectKeyManagerService.ɵfac = function SelectKeyManagerService_Factory(t) {\n    return new (t || SelectKeyManagerService)();\n  };\n  SelectKeyManagerService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SelectKeyManagerService,\n    factory: SelectKeyManagerService.ɵfac\n  });\n  return SelectKeyManagerService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet optionUniqueId = 0;\n/**\n * Event object emitted by OptionComponent when\n * selected or deselected.\n */\nclass FdOptionSelectionChange {\n  /**\n   * Reference to the OptionComponent that emitted the event.\n   * @param source The option that emitted the event.\n   * @param isUserInput Whether the change in the option's value was a result of a user interaction.\n   */\n  constructor( /** Reference to the option that emitted the event. */\n  source, /** Whether the change in the option's value was a result of a user action. */\n  isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n}\n/**\n * Used to represent an option of the select component.\n */\nlet OptionComponent = /*#__PURE__*/(() => {\n  class OptionComponent {\n    /**\n     * The displayed value of the option. It shows the selected option in the select's trigger.\n     */\n    get viewValue() {\n      return (this._elementRef.nativeElement.textContent || '').trim();\n    }\n    /** used in components like autocomplete where focus must remain on the input.*/\n    get active() {\n      return this._active;\n    }\n    /** @hidden */\n    constructor(_elementRef, _changeDetectorRef) {\n      this._elementRef = _elementRef;\n      this._changeDetectorRef = _changeDetectorRef;\n      /** Option id attribute */\n      this.id = `fd-option-${optionUniqueId++}`;\n      /** Whether to disable this option specifically. */\n      this.disabled = false;\n      /**\n       * Emits event when option is selected or deselected.\n       */\n      this.selectionChange = new EventEmitter();\n      /** @hidden */\n      this.selected = false;\n      /** @hidden */\n      this._renderer = 'title';\n      /** @hidden */\n      this._stateChanges = new Subject();\n      /** @hidden */\n      this._mostRecentViewValue = '';\n      /** @hidden */\n      this._active = false;\n    }\n    /** @Hidden */\n    ngAfterViewInit() {\n      this._listTitleDirectives?.changes.pipe(startWith(null)).subscribe(() => {\n        const directivesLength = this._listTitleDirectives?.length ?? 0;\n        this._renderer = directivesLength > 0 ? 'plain' : 'title';\n        this._changeDetectorRef.detectChanges();\n      });\n    }\n    /**\n     * @hidden\n     * Since select components could be using the option's label to display the selected values\n     * and they don't have a way of knowing if the option's label has changed\n     * we have to check for changes in the DOM ourselves and dispatch an event\n     */\n    ngAfterViewChecked() {\n      if (this.selected) {\n        const viewValue = this.viewValue;\n        if (viewValue !== this._mostRecentViewValue) {\n          this._mostRecentViewValue = viewValue;\n          this._stateChanges.next();\n        }\n      }\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n    /** @hidden\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n      if (!this._active) {\n        this._active = true;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** @hidden\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n      if (this._active) {\n        this._active = false;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** @hidden\n     * Focuses the element. */\n    focus(_origin, options) {\n      const element = this._elementRef.nativeElement;\n      if (typeof element.focus === 'function') {\n        element.focus(options);\n      }\n    }\n    /** @hidden\n     * option value\n     */\n    getLabel() {\n      return this.viewValue;\n    }\n    /** @hidden\n     * Returns HTMLElement representation of the component. */\n    _getHtmlElement() {\n      return this._elementRef.nativeElement;\n    }\n    /** Selects the option.\n     * * @hidden\n     */\n    _select() {\n      if (!this.selected) {\n        this.selected = true;\n        this._changeDetectorRef.markForCheck();\n        this.selectionChange.emit(new FdOptionSelectionChange(this, false));\n      }\n    }\n    /** @hidden\n     * Deselects the option.\n     */\n    _deselect() {\n      if (this.selected) {\n        this.selected = false;\n        this._changeDetectorRef.markForCheck();\n        this.selectionChange.emit(new FdOptionSelectionChange(this, false));\n      }\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     *\n     * @hidden\n     */\n    _handleKeydown(event) {\n      if (KeyUtil.isKeyCode(event, [ENTER, SPACE]) && !hasModifierKey(event)) {\n        this._selectViaInteraction();\n        event.preventDefault();\n      }\n    }\n    /** @hidden */\n    _selectViaInteraction() {\n      if (!this.disabled) {\n        this.selected = true;\n        this._changeDetectorRef.markForCheck();\n        this.selectionChange.emit(new FdOptionSelectionChange(this, true));\n      }\n    }\n  }\n  OptionComponent.ɵfac = function OptionComponent_Factory(t) {\n    return new (t || OptionComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  OptionComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: OptionComponent,\n    selectors: [[\"\", \"fd-option\", \"\"], [\"fd-option\"]],\n    contentQueries: function OptionComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, ListTitleDirective, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._listTitleDirectives = _t);\n      }\n    },\n    hostAttrs: [\"role\", \"option\", 1, \"fd-list__item\"],\n    hostVars: 8,\n    hostBindings: function OptionComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function OptionComponent_click_HostBindingHandler() {\n          return ctx._selectViaInteraction();\n        })(\"keydown\", function OptionComponent_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"tabindex\", -1);\n        i0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-selected\", ctx.selected)(\"id\", ctx.id);\n        i0.ɵɵclassProp(\"is-focus\", ctx.active)(\"is-selected\", ctx.selected);\n      }\n    },\n    inputs: {\n      id: \"id\",\n      value: \"value\",\n      disabled: \"disabled\"\n    },\n    outputs: {\n      selectionChange: \"selectionChange\"\n    },\n    attrs: _c0,\n    ngContentSelectors: _c2,\n    decls: 4,\n    vars: 2,\n    consts: [[\"fd-list-title\", \"\", 4, \"ngIf\", \"ngIfElse\"], [\"plainRenderer\", \"\"], [\"fd-list-title\", \"\"], [4, \"ngTemplateOutlet\"]],\n    template: function OptionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c1);\n        i0.ɵɵtemplate(0, OptionComponent_span_0_Template, 2, 1, \"span\", 0);\n        i0.ɵɵtemplate(1, OptionComponent_ng_template_1_Template, 1, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵprojection(3);\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n        i0.ɵɵproperty(\"ngIf\", ctx._renderer === \"title\")(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [i5.NgIf, i5.NgTemplateOutlet, i8.ListTitleDirective],\n    styles: [\".fd-list__item[aria-disabled=true],.fd-list__item.is-disabled,.fd-list__item:disabled{opacity:.4;cursor:not-allowed}.fd-list__item:disabled:focus{outline:none}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return OptionComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * This component provides extended mobile support for Select component to render list of option since full screen\n * dialog.\n */\nlet SelectMobileComponent = /*#__PURE__*/(() => {\n  class SelectMobileComponent extends MobileModeBase {\n    /** @hidden */\n    onItemKeydown(event) {\n      if (event && KeyUtil.isKeyCode(event, [ESCAPE])) {\n        this._component.close(true);\n      }\n    }\n    /** @hidden */\n    constructor(_elementRef, _dialogService, _selectComponent, mobileModes) {\n      super(_elementRef, _dialogService, _selectComponent, MobileModeControl.SELECT, mobileModes);\n      /** @hidden\n       * from mobile class can not prefix _,\n       * to avoid build issues\n       */\n      this.childContent = null;\n      /** @hidden */\n      this._subscriptions = new Subscription();\n    }\n    /** @hidden */\n    ngOnInit() {\n      this._listenOnSelectOpenChange();\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      this._openDialog();\n      this.dialogRef.hide(true);\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this.dialogRef.close();\n      super.onDestroy();\n      this._subscriptions.unsubscribe();\n    }\n    /**\n     * Only when we have Approve.\n     * @hidden\n     */\n    _cancel() {\n      this._component.close(true);\n    }\n    /** @hidden */\n    _approve() {\n      this._component.close(true);\n    }\n    /** @hidden Hide/Show the Dialog when Select Open/Close*/\n    _listenOnSelectOpenChange() {\n      this._subscriptions.add(this._component.isOpenChange.subscribe(isOpen => {\n        this._elementRef.nativeElement.blur();\n        this.dialogRef.hide(!isOpen);\n      }));\n    }\n    /** @hidden */\n    _openDialog() {\n      this.dialogRef = this._dialogService.open(this._dialogTemplate, {\n        ...this.dialogConfig,\n        mobile: true,\n        disablePaddings: true,\n        backdropClickCloseable: false,\n        container: this._elementRef.nativeElement,\n        ariaLabelledBy: 'fd-dialog-header'\n      });\n    }\n  }\n  SelectMobileComponent.ɵfac = function SelectMobileComponent_Factory(t) {\n    return new (t || SelectMobileComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.DialogService), i0.ɵɵdirectiveInject(SELECT_COMPONENT), i0.ɵɵdirectiveInject(MOBILE_MODE_CONFIG, 8));\n  };\n  SelectMobileComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: SelectMobileComponent,\n    selectors: [[\"fd-select-mobile\"]],\n    viewQuery: function SelectMobileComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c3, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._dialogTemplate = _t.first);\n      }\n    },\n    hostBindings: function SelectMobileComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function SelectMobileComponent_keydown_HostBindingHandler($event) {\n          return ctx.onItemKeydown($event);\n        });\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[\"dialogTemplate\", \"\"], [\"tabindex\", \"-1\", 3, \"dialogConfig\", \"dialogRef\"], [\"id\", \"fd-dialog-header\", \"fd-title\", \"\", 4, \"ngIf\"], [\"role\", \"button\", \"aria-label\", \"close\", \"fd-dialog-close-button\", \"\", 3, \"mobile\", \"click\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\"], [4, \"ngIf\"], [\"id\", \"fd-dialog-header\", \"fd-title\", \"\"], [\"role\", \"button\", \"aria-label\", \"close\", \"fd-dialog-close-button\", \"\", 3, \"mobile\", \"click\"], [\"fdType\", \"emphasized\", 3, \"label\", \"click\", 4, \"ngIf\"], [3, \"label\", \"click\", 4, \"ngIf\"], [\"fdType\", \"emphasized\", 3, \"label\", \"click\"], [3, \"label\", \"click\"]],\n    template: function SelectMobileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SelectMobileComponent_ng_template_0_Template, 7, 6, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    dependencies: [i5.NgIf, i5.NgTemplateOutlet, i1.DialogComponent, i1.DialogBodyComponent, i1.DialogFooterComponent, i1.DialogHeaderComponent, i1.DialogCloseButtonComponent, i3.ButtonBarComponent, i4.TitleComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return SelectMobileComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet SelectMobileModule = /*#__PURE__*/(() => {\n  class SelectMobileModule {}\n  SelectMobileModule.ɵfac = function SelectMobileModule_Factory(t) {\n    return new (t || SelectMobileModule)();\n  };\n  SelectMobileModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: SelectMobileModule\n  });\n  SelectMobileModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DynamicComponentService],\n    imports: [CommonModule, DialogModule, ButtonModule]\n  });\n  return SelectMobileModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet selectUniqueId = 0;\nconst SELECT_HEADER_IDENTIFIER = '.fd-list__group-header';\nconst SELECT_PANEL_MAX_HEIGHT = 250;\n/** The height of the select items in `rem` units. */\nconst SELECT_ITEM_HEIGHT_EM = 4;\n/**\n * Select component intended to mimic\n * the behaviour of the native select element.\n */\nlet SelectComponent = /*#__PURE__*/(() => {\n  class SelectComponent {\n    /** Value of the select control. */\n    set value(newValue) {\n      if (newValue !== this._internalValue) {\n        this.writeValue(newValue);\n        this._internalValue = newValue;\n      }\n    }\n    get value() {\n      return this._internalValue;\n    }\n    /** @hidden */\n    get _selectControlClass() {\n      return [this.state ? `is-${this.state}` : '', this.selectControlClass].filter(className => !!className).join(' ');\n    }\n    /** @hidden */\n    _resizeScrollHandler() {\n      this._updateCalculatedHeight();\n    }\n    /** @hidden */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this._tabIndex = this.disabled ? -1 : 0;\n    }\n    /** Selected option. */\n    get selected() {\n      return this._selectionModel.selected[0];\n    }\n    /** Retrieves selected value if any. */\n    get triggerValue() {\n      const emptyValue = ' ';\n      if (this._selectionModel.isEmpty()) {\n        return this.placeholder || emptyValue;\n      }\n      return this.selected.viewValue || this.placeholder || emptyValue;\n    }\n    /** equal to close\n     * Tells the OptionList if it's closable by simply selecting the item either with CLICK | SPACE | ENTER.\n     * When we are in mobile mode (mobile=true) and have we have enabled confirmation buttons then we\n     * dont close option list. We close only after we hit confirm button.\n     */\n    get canClose() {\n      return !(this.mobile && this.mobileConfig.approveButtonText);\n    }\n    /** Whether control can be interacted with */\n    get isInteractive() {\n      return !(this.readonly || this.disabled);\n    }\n    /**\n     * Check if we can emit a value. They are 3 different paths where we can emit value:\n     *  - We are not in mobile mode [mobile]=false\n     *  - We are in mobile mode [mobile]=true and mobile dialog as just close X button to dismiss it\n     *  - We are in mobile mode [mobile]=true and mobile dialog has ApproveButton available and\n     *  dialog is closed. (meaning we already clicked this button)\n     */\n    get canEmitValueChange() {\n      return !this.mobile || this.mobile &&\n      // Approve + Cancel\n      !!this.mobileConfig.approveButtonText && !this._isOpen ||\n      // CloseButton. Emits when you click on the option item\n      !!this.mobileConfig.hasCloseButton && !!this.mobileConfig.approveButtonText === false;\n    }\n    /** Function to compare the option values with the selected values. */\n    set compareWith(fn) {\n      if (typeof fn !== 'function') {\n        throw Error('compareWith` must be a function.');\n      }\n      this._compareWith = fn;\n      if (this._selectionModel) {\n        // A different comparator means the selection could change.\n        this._initializeSelection();\n      }\n    }\n    get compareWith() {\n      return this._compareWith;\n    }\n    /** @hidden */\n    get focused() {\n      return this._focused || this._isOpen;\n    }\n    /** @hidden */\n    get calculatedMaxHeight() {\n      return this._maxHeight || this._calculatedMaxHeight;\n    }\n    /** @hidden */\n    constructor(_tabIndex, _rtlService, _keyManagerService, _changeDetectorRef, _viewContainerRef, _dynamicComponentService, ngControl, _injector, _contentDensityObserver) {\n      this._rtlService = _rtlService;\n      this._keyManagerService = _keyManagerService;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._viewContainerRef = _viewContainerRef;\n      this._dynamicComponentService = _dynamicComponentService;\n      this.ngControl = ngControl;\n      this._injector = _injector;\n      this._contentDensityObserver = _contentDensityObserver;\n      /** Id of the control. */\n      this.controlId = `fd-select-${selectUniqueId++}`;\n      /** Whether the select component should be displayed in mobile mode. */\n      this.mobile = false;\n      /** Whether the select component is disabled. */\n      this.disabled = false;\n      /** If it is mandatory field */\n      this.required = false;\n      /** Whether the select component is readonly. */\n      this.readonly = false;\n      /** @deprecated\n       * it is handled internally by controlTemplate != null|undefined is\n       * Equal as extendedBodyTemplate as true.\n       * Whether option components contain more than basic text. */\n      this.extendedBodyTemplate = false;\n      /** Glyph to add icon in the select component. */\n      this.glyph = 'slim-arrow-down';\n      /** Whether close the popover on outside click. */\n      this.closeOnOutsideClick = true;\n      /**\n       * Preset options for the Select body width, whatever is chosen, the body has a 600px limit.\n       * * `at-least` will apply a minimum width to the body equivalent to the width of the control. - Default\n       * * `equal` will apply a width to the body equivalent to the width of the control.\n       * * 'fit-content' will apply width needed to properly display items inside, independent of control.\n       */\n      this.fillControlMode = 'at-least';\n      /**\n       * If the option should be unselected and value changed to undefined, when the current value is\n       * not presented in option array. Switching it off can be handy, when there is some delay between providing\n       * possible options and chosen value.\n       */\n      this.unselectMissingOption = true;\n      /** Time to wait in milliseconds after the last keydown before focusing or selecting option based on alphanumeric keys. */\n      this.typeaheadDebounceInterval = 250;\n      /** Select Input Mobile Configuration */\n      this.mobileConfig = {\n        hasCloseButton: true\n      };\n      /** Should select be inlined. */\n      this.inline = true;\n      /** Event emitted when the popover open state changes. */\n      this.isOpenChange = new EventEmitter();\n      /** Event emitted when the selected value of the select changes. */\n      this.valueChange = new EventEmitter();\n      /** Whether popover is opened\n       * @hidden\n       */\n      this._isOpen = false;\n      /** @hidden */\n      this._rtl = false;\n      /**\n       * @hidden\n       * Triggers when component is destroyed\n       */\n      this._destroy = new Subject();\n      /**\n       * @hidden\n       * Combined stream of all of the child options' change events.\n       */\n      this._optionSelectionChanges = defer(() => {\n        const _options = this._options;\n        return _options?.changes.pipe(startWith(_options), switchMap(() => merge(..._options.map(option => option.selectionChange))));\n      });\n      /** @hidden */\n      this._controlElemFontSize = 0;\n      /** @hidden */\n      this._focused = false;\n      /** @hidden */\n      this._subscriptions = new Subscription();\n      /** @hidden */\n      this._compareWith = (o1, o2) => o1 === o2;\n      /** @hidden */\n      this.onChange = () => {};\n      /** @hidden */\n      this.onTouched = () => {};\n      if (this.ngControl) {\n        this.ngControl.valueAccessor = this;\n      }\n      this._tabIndex = parseInt(_tabIndex, 10) || 0;\n    }\n    /** @hidden */\n    ngOnInit() {\n      this._initializeCommonBehavior();\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      this._keyManagerService._initKeyManager();\n      this._setupMobileMode();\n    }\n    /** @hidden */\n    ngAfterContentInit() {\n      this._registerEventsAfterContentInit();\n    }\n    /** @hidden */\n    ngOnChanges(changes) {\n      if (changes['typeaheadDebounceInterval'] && this._keyManagerService._keyManager) {\n        this._keyManagerService._keyManager.withTypeAhead(this.typeaheadDebounceInterval);\n      } else if (changes['disabled']) {\n        this._tabIndex = this.disabled ? -1 : 0;\n      }\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._subscriptions.unsubscribe();\n      this._cleanupCommonBehavior();\n    }\n    /** Toggles the open state of the select. */\n    toggle() {\n      this._isOpen ? this.close() : this.open();\n    }\n    /** Opens the select popover body. */\n    open() {\n      if (this.disabled || this.readonly || !this._options || !this._getItemCount() || this._isOpen) {\n        return;\n      }\n      this._isOpen = true;\n      this._controlElemFontSize = parseInt(getComputedStyle(this._controlElementRef.nativeElement).fontSize || '0', 10);\n      this._keyManagerService._keyManager.withHorizontalOrientation(null);\n      this._highlightCorrectOption();\n      this._changeDetectorRef.markForCheck();\n      this._controlElementRef.nativeElement.focus();\n      this.isOpenChange.emit(true);\n    }\n    /** @hidden */\n    close(forceClose = false) {\n      if (this._isOpen && (forceClose || this.close)) {\n        this._isOpen = false;\n        this._keyManagerService._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n        this._changeDetectorRef.markForCheck();\n        this.onTouched();\n        this.isOpenChange.emit(false);\n      }\n    }\n    /** Focuses select control. */\n    focus() {\n      (this._controlElementRef?.nativeElement).focus();\n    }\n    /** Blurs select control. */\n    blur() {\n      (this._controlElementRef?.nativeElement).blur();\n    }\n    /** @hidden */\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    /** @hidden */\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /** @hidden from ControlValue Accessor */\n    writeValue(value) {\n      if (this._options) {\n        this._setSelectionByValue(value);\n      }\n    }\n    /** @hidden */\n    _setSelectionByValue(value) {\n      this._selectionModel.clear();\n      const correspondingOption = this._selectValue(value);\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what option the user interacted with last.\n      if (correspondingOption) {\n        this._keyManagerService._keyManager.setActiveItem(correspondingOption);\n      } else if (!this._isOpen) {\n        // Otherwise reset the highlighted option. Note that we only want to do this while\n        // closed, because doing it while open can shift the user's focus unnecessarily.\n        this._keyManagerService._keyManager.setActiveItem(-1);\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n    /** @hidden */\n    _selectValue(value) {\n      const correspondingOption = this._options.find(option => {\n        try {\n          // Treat null as a special reset value.\n          return option.value != null && this._compareWith(option.value, value);\n        } catch (error) {\n          if (isDevMode()) {\n            // Notify developers of errors in their comparator.\n            console.warn(error);\n          }\n          return false;\n        }\n      });\n      if (correspondingOption) {\n        this._selectionModel.select(correspondingOption);\n      }\n      return correspondingOption;\n    }\n    /** @hidden */\n    _popoverOpenChangeHandle(isOpen) {\n      isOpen ? this.open() : this.close();\n    }\n    /** @hidden Returns _keyManagerService. */\n    _getKeyService() {\n      return this._keyManagerService;\n    }\n    /** @hidden */\n    _setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this._changeDetectorRef.markForCheck();\n      this._tabIndex = -1;\n    }\n    /** @hidden */\n    _highlightCorrectOption() {\n      if (this._keyManagerService._keyManager && this._selectionModel.isEmpty()) {\n        this._keyManagerService._keyManager.setFirstItemActive();\n      } else if (this._keyManagerService._keyManager && !this._selectionModel.isEmpty()) {\n        this._keyManagerService._keyManager.setActiveItem(this.selected);\n      }\n    }\n    /** @hidden */\n    _cleanupCommonBehavior() {\n      this._destroy.next();\n      this._destroy.complete();\n    }\n    /** @hidden */\n    _initializeSelection() {\n      // Defer setting the value in order to avoid the \"Expression\n      // has changed after it was checked\" errors from Angular.\n      Promise.resolve().then(() => {\n        this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._internalValue);\n      });\n    }\n    /**\n     * Expose outside of this mixin to give component ability\n     * to update caluclatedMaxHeight if needed\n     * @hidden\n     */\n    _updateCalculatedHeight() {\n      this._calculatedMaxHeight = window.innerHeight * 0.45;\n    }\n    /** @hidden */\n    _getOptionScrollPosition(optionIndex, itemHeight, currentScrollPosition) {\n      const optionHeight = this._options.get(optionIndex)?._getHtmlElement().offsetHeight || itemHeight;\n      const optionOffset = optionIndex * optionHeight;\n      if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n      }\n      if (optionOffset + optionHeight > currentScrollPosition + SELECT_PANEL_MAX_HEIGHT) {\n        return Math.max(0, optionOffset - SELECT_PANEL_MAX_HEIGHT + optionHeight);\n      }\n      return currentScrollPosition;\n    }\n    /** @hidden */\n    _getItemHeight() {\n      // also include border with default value 1.\n      return this._controlElemFontSize * SELECT_ITEM_HEIGHT_EM + 1;\n    }\n    /** @hidden */\n    _initializeCommonBehavior() {\n      this._selectionModel = new SelectionModel(false);\n      this._keyManagerService._component = this;\n      this._updateCalculatedHeight();\n    }\n    /** @hidden */\n    _isRtl() {\n      if (this._rtlService) {\n        this._subscriptions.add(this._rtlService.rtl.subscribe(rtl => {\n          this._rtl = rtl;\n        }));\n      }\n      return this._rtl === true ? true : false;\n    }\n    /** @hidden */\n    _registerEventsAfterContentInit() {\n      this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n        event.added.forEach(option => option._select());\n        event.removed.forEach(option => option._deselect());\n      });\n      this._options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n        this._resetOptions();\n        this._initializeSelection();\n      });\n    }\n    /** @hidden */\n    _handleKeydown(event) {\n      if (!this.disabled && !this.readonly) {\n        this._isOpen ? this._keyManagerService._handleOpenKeydown(event) : this._keyManagerService._handleClosedKeydown(event);\n      }\n      if (KeyUtil.isKeyCode(event, ESCAPE)) {\n        this._controlElementRef.nativeElement.focus();\n      }\n    }\n    /** @hidden */\n    _getAriaActiveDescendant() {\n      if (this._isOpen && this._keyManagerService._keyManager && this._keyManagerService._keyManager.activeItem) {\n        return this._keyManagerService._keyManager.activeItem.id;\n      }\n      return null;\n    }\n    /** @hidden */\n    _onFocus() {\n      if (!this.disabled) {\n        this._focused = true;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** @hidden */\n    _onBlur() {\n      this._focused = false;\n      if (!this.disabled && !this._isOpen) {\n        this.onTouched();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** @hidden */\n    _buttonClick() {}\n    /** @hidden */\n    _resetOptions() {\n      const changedOrDestroyed = merge(this._options.changes, this._destroy);\n      this._optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n        this._onSelect(event.source, event.isUserInput);\n        if (event.isUserInput && this._isOpen) {\n          this.close();\n        }\n      });\n      // Listen to changes in the internal state of the _options and react accordingly.\n      // Handles cases like the labels of the selected _options changing.\n      merge(...this._options.map(option => option._stateChanges)).pipe(takeUntil(changedOrDestroyed)).subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n    /**\n     * @hidden\n     * Invoked when an option is clicked.\n     */\n    _onSelect(option, isUserInput) {\n      const wasSelected = this._selectionModel.isSelected(option);\n      if ((option.value === null || option.value === undefined) && this.unselectMissingOption) {\n        option._deselect();\n        this._selectionModel.clear();\n        this._emitSelectChange(option.value);\n      } else {\n        if (wasSelected !== option.selected) {\n          option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);\n        }\n        if (isUserInput) {\n          this._keyManagerService._keyManager.setActiveItem(option);\n        }\n      }\n      if (wasSelected !== this._selectionModel.isSelected(option) || this.mobile) {\n        this._emitSelectChange();\n      }\n    }\n    /** @hidden */\n    _emitSelectChange(defaultVal) {\n      if (this.canEmitValueChange) {\n        this._internalValue = this._selectionModel.selected && this._selectionModel.selected.length !== 0 ? this.selected.value : defaultVal;\n        this.valueChange.emit(this._internalValue);\n        this.onChange(this._internalValue);\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** @hidden */\n    _getItemCount() {\n      if (this._optionPanel && this._headerElements().length > 0) {\n        return this._options.length + this._headerElements().length;\n      }\n      return this._options.length;\n    }\n    /** @hidden */\n    _headerElements() {\n      return this._optionPanel?.nativeElement.querySelectorAll(SELECT_HEADER_IDENTIFIER);\n    }\n    /** @hidden */\n    _setupMobileMode() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        if (!_this.mobile) {\n          return;\n        }\n        const injector = Injector.create({\n          providers: [{\n            provide: SELECT_COMPONENT,\n            useValue: _this\n          }],\n          parent: _this._injector\n        });\n        yield _this._dynamicComponentService.createDynamicModule(_this.selectOptionsListTemplate, SelectMobileModule, SelectMobileComponent, _this._viewContainerRef, injector);\n      })();\n    }\n  }\n  SelectComponent.ɵfac = function SelectComponent_Factory(t) {\n    return new (t || SelectComponent)(i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i1$1.RtlService, 8), i0.ɵɵdirectiveInject(SelectKeyManagerService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i1$1.DynamicComponentService, 8), i0.ɵɵdirectiveInject(i3$1.NgControl, 10), i0.ɵɵdirectiveInject(i0.Injector, 8), i0.ɵɵdirectiveInject(i4$1.ContentDensityObserver));\n  };\n  SelectComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: SelectComponent,\n    selectors: [[\"fd-select\"]],\n    contentQueries: function SelectComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, OptionComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._options = _t);\n      }\n    },\n    viewQuery: function SelectComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n        i0.ɵɵviewQuery(CdkConnectedOverlay, 5);\n        i0.ɵɵviewQuery(_c7, 5, ElementRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._controlElementRef = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selectOptionsListTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._dialogContainerElementRef = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._overlayDir = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._optionPanel = _t.first);\n      }\n    },\n    hostAttrs: [1, \"fd-select\"],\n    hostVars: 6,\n    hostBindings: function SelectComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"resize\", function SelectComponent_resize_HostBindingHandler() {\n          return ctx._resizeScrollHandler();\n        }, false, i0.ɵɵresolveWindow)(\"click\", function SelectComponent_click_HostBindingHandler() {\n          return ctx.toggle();\n        })(\"keydown\", function SelectComponent_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-select--inline\", ctx.inline)(\"fd-select-custom-class\", ctx.inline)(\"fd-select-custom-class--mobile\", ctx.mobile);\n      }\n    },\n    inputs: {\n      controlId: \"controlId\",\n      state: \"state\",\n      mobile: \"mobile\",\n      stateMessage: \"stateMessage\",\n      disabled: \"disabled\",\n      required: \"required\",\n      readonly: \"readonly\",\n      placeholder: \"placeholder\",\n      value: \"value\",\n      extendedBodyTemplate: \"extendedBodyTemplate\",\n      maxHeight: \"maxHeight\",\n      glyph: \"glyph\",\n      closeOnOutsideClick: \"closeOnOutsideClick\",\n      fillControlMode: \"fillControlMode\",\n      controlTemplate: \"controlTemplate\",\n      appendTo: \"appendTo\",\n      unselectMissingOption: \"unselectMissingOption\",\n      typeaheadDebounceInterval: \"typeaheadDebounceInterval\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      ariaLabel: \"ariaLabel\",\n      mobileConfig: \"mobileConfig\",\n      inline: \"inline\",\n      selectControlClass: \"selectControlClass\",\n      selectDropdownButtonClass: \"selectDropdownButtonClass\",\n      compareWith: \"compareWith\"\n    },\n    outputs: {\n      isOpenChange: \"isOpenChange\",\n      valueChange: \"valueChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: SELECT_COMPONENT,\n      useExisting: SelectComponent\n    }, registerFormItemControl(SelectComponent), SelectKeyManagerService, contentDensityObserverProviders()]), i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c10,\n    decls: 9,\n    vars: 1,\n    consts: [[4, \"ngTemplateOutlet\"], [\"desktopTemplate\", \"\"], [\"selectInputControlTemplate\", \"\"], [\"selectOptionsListTemplate\", \"\"], [\"mobileTemplate\", \"\"], [\"additionalBodyClass\", \"fd-select-dropdown fd-popover-custom-list\", 3, \"isOpen\", \"triggers\", \"focusTrapped\", \"disabled\", \"appendTo\", \"closeOnEscapeKey\", \"fillControlMode\", \"maxWidth\", \"closeOnOutsideClick\", \"isOpenChange\"], [3, \"ngTemplateOutlet\"], [1, \"fd-popover-custom-select-body\"], [\"role\", \"list\", \"aria-live\", \"polite\", 1, \"fd-select__control\", 3, \"focus\", \"blur\"], [\"selectControl\", \"\"], [\"role\", \"listitem\", 1, \"fd-select__text-content\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"defaultSelectContent\", \"\"], [\"class\", \"fd-button fd-button--transparent fd-select__button\", 3, \"ngClass\", \"is-disabled\", 4, \"ngIf\"], [1, \"fd-button\", \"fd-button--transparent\", \"fd-select__button\", 3, \"ngClass\"], [3, \"glyph\"], [\"fd-list\", \"\", \"role\", \"listbox\", \"tabindex\", \"-1\", 1, \"fd-select-options\", 3, \"mobileMode\", \"dropdownMode\", \"hasMessage\"], [\"optionPanel\", \"\"], [\"fd-list-message\", \"\", \"tabindex\", \"-1\", \"role\", \"presentation\", 3, \"type\", \"innerHtml\", 4, \"ngIf\"], [\"fd-list-message\", \"\", \"tabindex\", \"-1\", \"role\", \"presentation\", 3, \"type\", \"innerHtml\"], [\"dialogContainer\", \"\"]],\n    template: function SelectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, SelectComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\n        i0.ɵɵtemplate(1, SelectComponent_ng_template_1_Template, 5, 12, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(3, SelectComponent_ng_template_3_Template, 8, 32, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(5, SelectComponent_ng_template_5_Template, 4, 8, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(7, SelectComponent_ng_template_7_Template, 3, 1, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n        const _r7 = i0.ɵɵreference(8);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.mobile ? _r7 : _r1);\n      }\n    },\n    dependencies: [i5.NgClass, i5.NgIf, i5.NgTemplateOutlet, i6.PopoverControlComponent, i6.PopoverBodyComponent, i6.PopoverComponent, i7.IconComponent, i8.ListComponent, i8.ListMessageDirective, i9.FdTranslatePipe],\n    styles: [\"/*!\\n * Fundamental Library Styles v0.28.3\\n * Copyright (c) 2023 SAP SE or an SAP affiliate company.\\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/main/LICENSE)\\n */.fd-select{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:.25rem 0;padding:0;text-shadow:var(--fdSelect_Text_Shadow)}.fd-select:after,.fd-select:before{box-sizing:inherit;font-size:inherit}.fd-select__control{-webkit-box-sizing:border-box;-webkit-box-shadow:none;-moz-appearance:none;-webkit-appearance:none;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-box-align:center;-ms-flex-align:center;-webkit-box-pack:justify;-ms-flex-pack:justify;align-items:center;appearance:none;background:var(--fdSelect_Background, var(--sapField_BackgroundStyle));background-color:var(--fdSelect_Background_Color, var(--sapField_Background));border:0;border:var(--sapField_BorderWidth) var(--sapField_BorderStyle) var(--sapField_BorderColor);border-radius:var(--sapField_BorderCornerRadius);box-shadow:none;box-sizing:border-box;color:var(--sapTextColor);color:var(--sapField_TextColor);cursor:text;cursor:pointer;display:flex;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;height:2.25rem;justify-content:center;justify-content:space-between;line-height:var(--sapContent_LineHeight);margin:0;min-height:2.25rem;min-width:var(--fdSelect_Min_Width, 2.75rem);outline:none;overflow:hidden;padding:0;text-overflow:ellipsis;text-shadow:var(--fdInput_Text_Shadow);white-space:nowrap;width:100%;z-index:1}.fd-select__control:after,.fd-select__control:before{box-sizing:inherit;font-size:inherit}.fd-select__control::placeholder{color:var(--sapField_PlaceholderTextColor);font-style:var(--fdPlaceholder_Font_Style)}.fd-select__control[dir=rtl]::placeholder,[dir=rtl] .fd-select__control::placeholder{text-indent:.125rem}.fd-select__control::selection{background-color:var(--sapSelectedColor);color:var(--sapContent_ContrastTextColor)}.fd-select__control::-ms-clear{display:none}.fd-select__control.is-hover,.fd-select__control:hover{-webkit-box-shadow:var(--fdInput_Box_Shadow_Hover);background:var(--fdSelect_Hover_Background, var(--sapField_Hover_BackgroundStyle));background-color:var(--fdSelect_Hover_Background_Color, var(--sapField_Hover_Background));border-color:var(--sapField_Hover_BorderColor);box-shadow:var(--fdInput_Box_Shadow_Hover)}.fd-select__control.is-focus,.fd-select__control:focus{-webkit-box-shadow:none;background:var(--fdSelect_Focus_Background, var(--sapField_Focus_Background));box-shadow:none;outline-color:var(--fdInput_Outline_Color);outline-offset:var(--fdInput_Outline_Offset);outline-style:var(--sapContent_FocusStyle);outline-width:var(--sapContent_FocusWidth);z-index:5}.fd-select__control.is-success{background:var(--sapField_SuccessBackgroundStyle);background-color:var(--sapField_SuccessBackground);border:var(--sapField_SuccessColor) var(--sapField_SuccessBorderWidth) var(--sapField_SuccessBorderStyle)}.fd-select__control.is-success.is-hover,.fd-select__control.is-success:hover{-webkit-box-shadow:var(--fdInput_Success_Box_Shadow_Hover);background-color:var(--fdInput_Success_Background_Color_Hover);border-color:var(--sapField_SuccessColor);box-shadow:var(--fdInput_Success_Box_Shadow_Hover)}.fd-select__control.is-success.is-focus,.fd-select__control.is-success:focus{background:var(--sapField_Focus_Background);outline-color:var(--fdInput_Success_Outline_Color);z-index:5}.fd-select__control.is-success.is-focus.is-hover,.fd-select__control.is-success.is-focus:hover,.fd-select__control.is-success:focus.is-hover,.fd-select__control.is-success:focus:hover{box-shadow:none}.fd-select__control.is-error{background:var(--sapField_InvalidBackgroundStyle);background-color:var(--sapField_InvalidBackground);border:var(--sapField_InvalidColor) var(--sapField_InvalidBorderWidth) var(--sapField_InvalidBorderStyle)}.fd-select__control.is-error.is-hover,.fd-select__control.is-error:hover{-webkit-box-shadow:var(--fdInput_Error_Box_Shadow_Hover);background-color:var(--fdInput_Error_Background_Color_Hover);border-color:var(--sapField_InvalidColor);box-shadow:var(--fdInput_Error_Box_Shadow_Hover)}.fd-select__control.is-error.is-focus,.fd-select__control.is-error:focus{background:var(--sapField_Focus_Background);outline-color:var(--fdInput_Error_Outline_Color);z-index:5}.fd-select__control.is-error.is-focus.is-hover,.fd-select__control.is-error.is-focus:hover,.fd-select__control.is-error:focus.is-hover,.fd-select__control.is-error:focus:hover{box-shadow:none}.fd-select__control.is-warning{background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapField_WarningBackground);border:var(--sapField_WarningColor) var(--sapField_WarningBorderWidth) var(--sapField_WarningBorderStyle)}.fd-select__control.is-warning.is-hover,.fd-select__control.is-warning:hover{-webkit-box-shadow:var(--fdInput_Warning_Box_Shadow_Hover);background-color:var(--fdInput_Warning_Background_Color_Hover);border-color:var(--sapField_WarningColor);box-shadow:var(--fdInput_Warning_Box_Shadow_Hover)}.fd-select__control.is-warning.is-focus,.fd-select__control.is-warning:focus{background:var(--sapField_Focus_Background);outline-color:var(--fdInput_Warning_Outline_Color);z-index:5}.fd-select__control.is-warning.is-focus.is-hover,.fd-select__control.is-warning.is-focus:hover,.fd-select__control.is-warning:focus.is-hover,.fd-select__control.is-warning:focus:hover{box-shadow:none}.fd-select__control.is-alert{background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapField_WarningBackground);border:var(--sapField_WarningColor) var(--sapField_WarningBorderWidth) var(--sapField_WarningBorderStyle)}.fd-select__control.is-alert.is-hover,.fd-select__control.is-alert:hover{-webkit-box-shadow:var(--fdInput_Warning_Box_Shadow_Hover);background-color:var(--fdInput_Warning_Background_Color_Hover);border-color:var(--sapField_WarningColor);box-shadow:var(--fdInput_Warning_Box_Shadow_Hover)}.fd-select__control.is-alert.is-focus,.fd-select__control.is-alert:focus{background:var(--sapField_Focus_Background);outline-color:var(--fdInput_Warning_Outline_Color);z-index:5}.fd-select__control.is-alert.is-focus.is-hover,.fd-select__control.is-alert.is-focus:hover,.fd-select__control.is-alert:focus.is-hover,.fd-select__control.is-alert:focus:hover{box-shadow:none}.fd-select__control.is-information{background:var(--sapField_InformationBackgroundStyle);background-color:var(--sapField_InformationBackground);border:var(--sapField_InformationColor) var(--sapField_InformationBorderWidth) var(--sapField_InformationBorderStyle)}.fd-select__control.is-information.is-hover,.fd-select__control.is-information:hover{-webkit-box-shadow:var(--fdInput_Information_Box_Shadow_Hover);background-color:var(--fdInput_Information_Background_Color_Hover);border-color:var(--sapField_InformationColor);box-shadow:var(--fdInput_Information_Box_Shadow_Hover)}.fd-select__control.is-information.is-focus,.fd-select__control.is-information:focus{background:var(--sapField_Focus_Background);outline-color:var(--fdInput_Information_Outline_Color);z-index:5}.fd-select__control.is-information.is-focus.is-hover,.fd-select__control.is-information.is-focus:hover,.fd-select__control.is-information:focus.is-hover,.fd-select__control.is-information:focus:hover{box-shadow:none}.fd-select__control.is-alert,.fd-select__control.is-error,.fd-select__control.is-warning{font-style:var(--fdInput_State_Text_Style);font-weight:var(--fdInput_State_Font_Weight)}.fd-select__control.is-alert::placeholder,.fd-select__control.is-error::placeholder,.fd-select__control.is-warning::placeholder{font-weight:var(--fdInput_State_Font_Weight)}.fd-select__control.is-alert.is-focus,.fd-select__control.is-alert:focus,.fd-select__control.is-error.is-focus,.fd-select__control.is-error:focus,.fd-select__control.is-information.is-focus,.fd-select__control.is-information:focus,.fd-select__control.is-warning.is-focus,.fd-select__control.is-warning:focus{outline-offset:var(--fdInput_Outline_Offset_States);z-index:5}.fd-select__control.is-error::placeholder{color:var(--sapField_TextColor)}.fd-select__control.is-disabled,.fd-select__control:disabled,.fd-select__control[aria-disabled=true]{opacity:var(--sapContent_DisabledOpacity)}.fd-select__control.is-disabled::placeholder,.fd-select__control:disabled::placeholder,.fd-select__control[aria-disabled=true]::placeholder{color:var(--fdInput_Non_Interactive_State_Placeholder_Color)}.fd-select__control.is-readonly,.fd-select__control[aria-readonly=true],.fd-select__control[readonly]{background:var(--sapField_ReadOnly_BackgroundStyle);background-color:var(--sapField_ReadOnly_Background);border-color:var(--sapField_ReadOnly_BorderColor);border-radius:var(--fdInput_ReadOnly_Border_Radius)}.fd-select__control.is-readonly::placeholder,.fd-select__control[aria-readonly=true]::placeholder,.fd-select__control[readonly]::placeholder{color:var(--fdInput_Non_Interactive_State_Placeholder_Color)}.fd-select__control.is-readonly.is-hover,.fd-select__control.is-readonly:hover,.fd-select__control[aria-readonly=true].is-hover,.fd-select__control[aria-readonly=true]:hover,.fd-select__control[readonly].is-hover,.fd-select__control[readonly]:hover{-webkit-box-shadow:none;background:var(--sapField_ReadOnly_BackgroundStyle);background-color:var(--sapField_ReadOnly_Background);border-color:var(--sapField_ReadOnly_BorderColor);border-radius:var(--fdInput_ReadOnly_Border_Radius);box-shadow:none}.fd-select__control.is-readonly.is-focus,.fd-select__control.is-readonly:focus,.fd-select__control[aria-readonly=true].is-focus,.fd-select__control[aria-readonly=true]:focus,.fd-select__control[readonly].is-focus,.fd-select__control[readonly]:focus{background:var(--sapField_ReadOnly_BackgroundStyle);background-color:var(--sapField_ReadOnly_Background);border-color:var(--sapField_ReadOnly_BorderColor);border-radius:var(--fdInput_ReadOnly_Border_Radius);z-index:5}.fd-select__control .fd-select__button:first-child{border-right:var(--fdInputGroup_ControlButton_SideBorder)}.fd-select__control .fd-select__button:first-child[dir=rtl],[dir=rtl] .fd-select__control .fd-select__button:first-child{border-left:var(--fdInputGroup_ControlButton_SideBorder);border-right-style:none}.fd-select__control .fd-select__button:first-child.is-hover,.fd-select__control .fd-select__button:first-child:hover{border-right:var(--fdInputGroup_ControlButton_SideBorder_Active)}.fd-select__control .fd-select__button:first-child.is-hover[dir=rtl],.fd-select__control .fd-select__button:first-child:hover[dir=rtl],[dir=rtl] .fd-select__control .fd-select__button:first-child.is-hover,[dir=rtl] .fd-select__control .fd-select__button:first-child:hover{border-left:var(--fdInputGroup_ControlButton_SideBorder_Active);border-right-style:none}.fd-select__control .fd-select__button:first-child.is-active,.fd-select__control .fd-select__button:first-child:active{border-right:var(--fdInputGroup_ControlButton_SideBorder_Active)}.fd-select__control .fd-select__button:first-child.is-active[dir=rtl],.fd-select__control .fd-select__button:first-child:active[dir=rtl],[dir=rtl] .fd-select__control .fd-select__button:first-child.is-active,[dir=rtl] .fd-select__control .fd-select__button:first-child:active{border-left:var(--fdInputGroup_ControlButton_SideBorder_Active);border-right-style:none}.fd-select__control .fd-select__button:not(:first-child){border-left:var(--fdInputGroup_ControlButton_SideBorder)}.fd-select__control .fd-select__button:not(:first-child)[dir=rtl],[dir=rtl] .fd-select__control .fd-select__button:not(:first-child){border-left-style:none;border-right:var(--fdInputGroup_ControlButton_SideBorder)}.fd-select__control .fd-select__button:not(:first-child).is-hover,.fd-select__control .fd-select__button:not(:first-child):hover{border-left:var(--fdInputGroup_ControlButton_SideBorder_Active)}.fd-select__control .fd-select__button:not(:first-child).is-hover[dir=rtl],.fd-select__control .fd-select__button:not(:first-child):hover[dir=rtl],[dir=rtl] .fd-select__control .fd-select__button:not(:first-child).is-hover,[dir=rtl] .fd-select__control .fd-select__button:not(:first-child):hover{border-left-style:none;border-right:var(--fdInputGroup_ControlButton_SideBorder_Active)}.fd-select__control .fd-select__button:not(:first-child).is-active,.fd-select__control .fd-select__button:not(:first-child):active{border-left:var(--fdInputGroup_ControlButton_SideBorder_Active)}.fd-select__control .fd-select__button:not(:first-child).is-active[dir=rtl],.fd-select__control .fd-select__button:not(:first-child):active[dir=rtl],[dir=rtl] .fd-select__control .fd-select__button:not(:first-child).is-active,[dir=rtl] .fd-select__control .fd-select__button:not(:first-child):active{border-left-style:none;border-right:var(--fdInputGroup_ControlButton_SideBorder_Active)}.fd-select__control .fd-select__addon:first-child .fd-select__button{border-right:var(--fdInputGroup_ControlButton_SideBorder)}.fd-select__control .fd-select__addon:first-child .fd-select__button[dir=rtl],[dir=rtl] .fd-select__control .fd-select__addon:first-child .fd-select__button{border-left:var(--fdInputGroup_ControlButton_SideBorder);border-right-style:none}.fd-select__control .fd-select__addon:first-child .fd-select__button.is-hover,.fd-select__control .fd-select__addon:first-child .fd-select__button:hover{border-right:var(--fdInputGroup_ControlButton_SideBorder_Active)}.fd-select__control .fd-select__addon:first-child .fd-select__button.is-hover[dir=rtl],.fd-select__control .fd-select__addon:first-child .fd-select__button:hover[dir=rtl],[dir=rtl] .fd-select__control .fd-select__addon:first-child .fd-select__button.is-hover,[dir=rtl] .fd-select__control .fd-select__addon:first-child .fd-select__button:hover{border-left:var(--fdInputGroup_ControlButton_SideBorder_Active);border-right-style:none}.fd-select__control .fd-select__addon:first-child .fd-select__button.is-active,.fd-select__control .fd-select__addon:first-child .fd-select__button:active{border-right:var(--fdInputGroup_ControlButton_SideBorder_Active)}.fd-select__control .fd-select__addon:first-child .fd-select__button.is-active[dir=rtl],.fd-select__control .fd-select__addon:first-child .fd-select__button:active[dir=rtl],[dir=rtl] .fd-select__control .fd-select__addon:first-child .fd-select__button.is-active,[dir=rtl] .fd-select__control .fd-select__addon:first-child .fd-select__button:active{border-left:var(--fdInputGroup_ControlButton_SideBorder_Active);border-right-style:none}.fd-select__control .fd-select__addon:not(:first-child) .fd-select__button{border-left:var(--fdInputGroup_ControlButton_SideBorder)}.fd-select__control .fd-select__addon:not(:first-child) .fd-select__button[dir=rtl],[dir=rtl] .fd-select__control .fd-select__addon:not(:first-child) .fd-select__button{border-left-style:none;border-right:var(--fdInputGroup_ControlButton_SideBorder)}.fd-select__control .fd-select__addon:not(:first-child) .fd-select__button.is-hover,.fd-select__control .fd-select__addon:not(:first-child) .fd-select__button:hover{border-left:var(--fdInputGroup_ControlButton_SideBorder_Active)}.fd-select__control .fd-select__addon:not(:first-child) .fd-select__button.is-hover[dir=rtl],.fd-select__control .fd-select__addon:not(:first-child) .fd-select__button:hover[dir=rtl],[dir=rtl] .fd-select__control .fd-select__addon:not(:first-child) .fd-select__button.is-hover,[dir=rtl] .fd-select__control .fd-select__addon:not(:first-child) .fd-select__button:hover{border-left-style:none;border-right:var(--fdInputGroup_ControlButton_SideBorder_Active)}.fd-select__control .fd-select__addon:not(:first-child) .fd-select__button.is-active,.fd-select__control .fd-select__addon:not(:first-child) .fd-select__button:active{border-left:var(--fdInputGroup_ControlButton_SideBorder_Active)}.fd-select__control .fd-select__addon:not(:first-child) .fd-select__button.is-active[dir=rtl],.fd-select__control .fd-select__addon:not(:first-child) .fd-select__button:active[dir=rtl],[dir=rtl] .fd-select__control .fd-select__addon:not(:first-child) .fd-select__button.is-active,[dir=rtl] .fd-select__control .fd-select__addon:not(:first-child) .fd-select__button:active{border-left-style:none;border-right:var(--fdInputGroup_ControlButton_SideBorder_Active)}.fd-select__control .fd-select__button{background:var(--fdInput_Group_Button_Background);border:none;border-radius:var(--fdInput_Group_Button_Border_Raduis);color:var(--fdInput_Group_Button_Text_Color);overflow:hidden;position:relative;text-overflow:ellipsis;white-space:nowrap;z-index:auto!important}.fd-select__control .fd-select__button:before{display:none!important}.fd-select__control .fd-select__button.is-hover,.fd-select__control .fd-select__button:hover{--fdInput_Group_Button_Text_Color:var(--fdInput_Group_Button_Hover_Text_Color);-webkit-box-shadow:var(--fdInput_Group_Button_Box_Shadow);background:var(--fdInput_Group_Button_Hover_Background);box-shadow:var(--fdInput_Group_Button_Box_Shadow)}.fd-select__control .fd-select__button.is-active,.fd-select__control .fd-select__button:active{-webkit-box-shadow:var(--fdInput_Group_Button_Box_Shadow);background:var(--fdInput_Group_Button_Active_Background);box-shadow:var(--fdInput_Group_Button_Box_Shadow);color:var(--fdInput_Group_Button_Active_Text_Color)}.fd-select__control.is-success .fd-select__button.is-active,.fd-select__control.is-success .fd-select__button.is-hover,.fd-select__control.is-success .fd-select__button:active,.fd-select__control.is-success .fd-select__button:hover{box-shadow:var(--fdInput_Group_Button_Success_Active_Box_Shadow)}.fd-select__control.is-success .fd-select__button.is-active,.fd-select__control.is-success .fd-select__button:active{color:var(--fdInput_Group_Button_Success_Active_Text_Color)}.fd-select__control.is-error .fd-select__button.is-active,.fd-select__control.is-error .fd-select__button.is-hover,.fd-select__control.is-error .fd-select__button:active,.fd-select__control.is-error .fd-select__button:hover{box-shadow:var(--fdInput_Group_Button_Error_Active_Box_Shadow)}.fd-select__control.is-error .fd-select__button.is-active,.fd-select__control.is-error .fd-select__button:active{color:var(--fdInput_Group_Button_Error_Active_Text_Color)}.fd-select__control.is-warning .fd-select__button.is-active,.fd-select__control.is-warning .fd-select__button.is-hover,.fd-select__control.is-warning .fd-select__button:active,.fd-select__control.is-warning .fd-select__button:hover{box-shadow:var(--fdInput_Group_Button_Warning_Active_Box_Shadow)}.fd-select__control.is-warning .fd-select__button.is-active,.fd-select__control.is-warning .fd-select__button:active{color:var(--fdInput_Group_Button_Warning_Active_Text_Color)}.fd-select__control.is-alert .fd-select__button.is-active,.fd-select__control.is-alert .fd-select__button.is-hover,.fd-select__control.is-alert .fd-select__button:active,.fd-select__control.is-alert .fd-select__button:hover{box-shadow:var(--fdInput_Group_Button_Warning_Active_Box_Shadow)}.fd-select__control.is-alert .fd-select__button.is-active,.fd-select__control.is-alert .fd-select__button:active{color:var(--fdInput_Group_Button_Warning_Active_Text_Color)}.fd-select__control.is-information .fd-select__button.is-active,.fd-select__control.is-information .fd-select__button.is-hover,.fd-select__control.is-information .fd-select__button:active,.fd-select__control.is-information .fd-select__button:hover{box-shadow:var(--fdInput_Group_Button_Information_Active_Box_Shadow)}.fd-select__control.is-information .fd-select__button.is-active,.fd-select__control.is-information .fd-select__button:active{color:var(--fdInput_Group_Button_Information_Active_Text_Color)}.fd-select__control.is-disabled,.fd-select__control:disabled,.fd-select__control[aria-disabled=true]{pointer-events:none}.fd-select__control .fd-select__button{height:100%;margin-left:.25rem}.fd-select__control .fd-select__button[dir=rtl],[dir=rtl] .fd-select__control .fd-select__button{margin-left:0;margin-right:.25rem}.fd-select__control.is-readonly,.fd-select__control[aria-readonly=true],.fd-select__control[readonly]{cursor:text}.fd-select__control.is-readonly .fd-select__text-content,.fd-select__control[aria-readonly=true] .fd-select__text-content,.fd-select__control[readonly] .fd-select__text-content{--fdSelect_Min_Width:5rem;padding-left:.625rem;padding-right:.625rem}.fd-select__control.is-expanded,.fd-select__control[aria-expanded=true]{box-shadow:var(--fdInput_Box_Shadow_Hover)}.fd-select__control.is-expanded .fd-select__button,.fd-select__control[aria-expanded=true] .fd-select__button{--fdInput_Group_Button_Text_Color:var(--sapButton_Active_TextColor);--fdInput_Group_Button_Background:var(--sapField_BackgroundStyle);-webkit-box-shadow:var(--fdInput_Group_Button_Box_Shadow);background-color:var(--sapButton_Selected_Background);border-left-color:var(--fdSelect_Expanded_Button_Border_Left_Color);box-shadow:var(--fdInput_Group_Button_Box_Shadow)}.fd-select__control.is-expanded[dir=rtl] .fd-select__button,.fd-select__control[aria-expanded=true][dir=rtl] .fd-select__button,[dir=rtl] .fd-select__control.is-expanded .fd-select__button,[dir=rtl] .fd-select__control[aria-expanded=true] .fd-select__button{border-left-color:transparent;border-right-color:var(--fdSelect_Expanded_Button_Border_Left_Color)}.fd-select__control.is-expanded.is-focus,.fd-select__control.is-expanded:focus,.fd-select__control[aria-expanded=true].is-focus,.fd-select__control[aria-expanded=true]:focus{box-shadow:none;z-index:5}.fd-select__control.is-expanded.is-hover .fd-select__button,.fd-select__control.is-expanded:hover .fd-select__button,.fd-select__control[aria-expanded=true].is-hover .fd-select__button,.fd-select__control[aria-expanded=true]:hover .fd-select__button{--fdInput_Group_Button_Text_Color:var(--sapButton_Active_TextColor);--fdInput_Group_Button_Background:var(--sapField_BackgroundStyle);-webkit-box-shadow:var(--fdInput_Group_Button_Box_Shadow);background-color:var(--sapButton_Selected_Hover_Background);border-left-color:var(--fdSelect_Expanded_Button_Border_Left_Color_Hover);box-shadow:var(--fdInput_Group_Button_Box_Shadow)}.fd-select__control.is-expanded.is-hover[dir=rtl] .fd-select__button,.fd-select__control.is-expanded:hover[dir=rtl] .fd-select__button,.fd-select__control[aria-expanded=true].is-hover[dir=rtl] .fd-select__button,.fd-select__control[aria-expanded=true]:hover[dir=rtl] .fd-select__button,[dir=rtl] .fd-select__control.is-expanded.is-hover .fd-select__button,[dir=rtl] .fd-select__control.is-expanded:hover .fd-select__button,[dir=rtl] .fd-select__control[aria-expanded=true].is-hover .fd-select__button,[dir=rtl] .fd-select__control[aria-expanded=true]:hover .fd-select__button{border-left-color:transparent;border-right-color:var(--fdSelect_Expanded_Button_Border_Left_Color_Hover)}.fd-select__control.is-success.is-expanded,.fd-select__control.is-success[aria-expanded=true]{box-shadow:var(--fdInput_Success_Box_Shadow_Hover)}.fd-select__control.is-success.is-expanded .fd-select__button,.fd-select__control.is-success[aria-expanded=true] .fd-select__button{-webkit-box-shadow:var(--fdInput_Success_Box_Shadow_Hover);background:var(--sapField_SuccessBackgroundStyle);background-color:var(--sapButton_Selected_Background);border-left-color:var(--fdSelect_Expanded_Button_Border_Left_Color);box-shadow:var(--fdInput_Success_Box_Shadow_Hover);color:var(--fdInput_Group_Button_Success_Active_Text_Color)}.fd-select__control.is-success.is-expanded .fd-select__button.is-hover,.fd-select__control.is-success.is-expanded .fd-select__button:hover,.fd-select__control.is-success[aria-expanded=true] .fd-select__button.is-hover,.fd-select__control.is-success[aria-expanded=true] .fd-select__button:hover{color:var(--fdInput_Group_Button_Text_Color)}.fd-select__control.is-success.is-expanded[dir=rtl] .fd-select__button,.fd-select__control.is-success[aria-expanded=true][dir=rtl] .fd-select__button,[dir=rtl] .fd-select__control.is-success.is-expanded .fd-select__button,[dir=rtl] .fd-select__control.is-success[aria-expanded=true] .fd-select__button{border-left-color:transparent;border-right-color:var(--fdSelect_Expanded_Button_Border_Left_Color)}.fd-select__control.is-success.is-expanded.is-focus,.fd-select__control.is-success.is-expanded:focus,.fd-select__control.is-success[aria-expanded=true].is-focus,.fd-select__control.is-success[aria-expanded=true]:focus{box-shadow:none;z-index:5}.fd-select__control.is-error.is-expanded,.fd-select__control.is-error[aria-expanded=true]{box-shadow:var(--fdInput_Error_Box_Shadow_Hover)}.fd-select__control.is-error.is-expanded .fd-select__button,.fd-select__control.is-error[aria-expanded=true] .fd-select__button{-webkit-box-shadow:var(--fdInput_Error_Box_Shadow_Hover);background:var(--sapField_InvalidBackgroundStyle);background-color:var(--sapButton_Selected_Background);border-left-color:var(--fdSelect_Expanded_Button_Border_Left_Color);box-shadow:var(--fdInput_Error_Box_Shadow_Hover);color:var(--fdInput_Group_Button_Error_Active_Text_Color)}.fd-select__control.is-error.is-expanded .fd-select__button.is-hover,.fd-select__control.is-error.is-expanded .fd-select__button:hover,.fd-select__control.is-error[aria-expanded=true] .fd-select__button.is-hover,.fd-select__control.is-error[aria-expanded=true] .fd-select__button:hover{color:var(--fdInput_Group_Button_Text_Color)}.fd-select__control.is-error.is-expanded[dir=rtl] .fd-select__button,.fd-select__control.is-error[aria-expanded=true][dir=rtl] .fd-select__button,[dir=rtl] .fd-select__control.is-error.is-expanded .fd-select__button,[dir=rtl] .fd-select__control.is-error[aria-expanded=true] .fd-select__button{border-left-color:transparent;border-right-color:var(--fdSelect_Expanded_Button_Border_Left_Color)}.fd-select__control.is-error.is-expanded.is-focus,.fd-select__control.is-error.is-expanded:focus,.fd-select__control.is-error[aria-expanded=true].is-focus,.fd-select__control.is-error[aria-expanded=true]:focus{box-shadow:none;z-index:5}.fd-select__control.is-warning.is-expanded,.fd-select__control.is-warning[aria-expanded=true]{box-shadow:var(--fdInput_Warning_Box_Shadow_Hover)}.fd-select__control.is-warning.is-expanded .fd-select__button,.fd-select__control.is-warning[aria-expanded=true] .fd-select__button{-webkit-box-shadow:var(--fdInput_Warning_Box_Shadow_Hover);background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapButton_Selected_Background);border-left-color:var(--fdSelect_Expanded_Button_Border_Left_Color);box-shadow:var(--fdInput_Warning_Box_Shadow_Hover);color:var(--fdInput_Group_Button_Warning_Active_Text_Color)}.fd-select__control.is-warning.is-expanded .fd-select__button.is-hover,.fd-select__control.is-warning.is-expanded .fd-select__button:hover,.fd-select__control.is-warning[aria-expanded=true] .fd-select__button.is-hover,.fd-select__control.is-warning[aria-expanded=true] .fd-select__button:hover{color:var(--fdInput_Group_Button_Text_Color)}.fd-select__control.is-warning.is-expanded[dir=rtl] .fd-select__button,.fd-select__control.is-warning[aria-expanded=true][dir=rtl] .fd-select__button,[dir=rtl] .fd-select__control.is-warning.is-expanded .fd-select__button,[dir=rtl] .fd-select__control.is-warning[aria-expanded=true] .fd-select__button{border-left-color:transparent;border-right-color:var(--fdSelect_Expanded_Button_Border_Left_Color)}.fd-select__control.is-warning.is-expanded.is-focus,.fd-select__control.is-warning.is-expanded:focus,.fd-select__control.is-warning[aria-expanded=true].is-focus,.fd-select__control.is-warning[aria-expanded=true]:focus{box-shadow:none;z-index:5}.fd-select__control.is-alert.is-expanded,.fd-select__control.is-alert[aria-expanded=true]{box-shadow:var(--fdInput_Warning_Box_Shadow_Hover)}.fd-select__control.is-alert.is-expanded .fd-select__button,.fd-select__control.is-alert[aria-expanded=true] .fd-select__button{-webkit-box-shadow:var(--fdInput_Warning_Box_Shadow_Hover);background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapButton_Selected_Background);border-left-color:var(--fdSelect_Expanded_Button_Border_Left_Color);box-shadow:var(--fdInput_Warning_Box_Shadow_Hover);color:var(--fdInput_Group_Button_Warning_Active_Text_Color)}.fd-select__control.is-alert.is-expanded .fd-select__button.is-hover,.fd-select__control.is-alert.is-expanded .fd-select__button:hover,.fd-select__control.is-alert[aria-expanded=true] .fd-select__button.is-hover,.fd-select__control.is-alert[aria-expanded=true] .fd-select__button:hover{color:var(--fdInput_Group_Button_Text_Color)}.fd-select__control.is-alert.is-expanded[dir=rtl] .fd-select__button,.fd-select__control.is-alert[aria-expanded=true][dir=rtl] .fd-select__button,[dir=rtl] .fd-select__control.is-alert.is-expanded .fd-select__button,[dir=rtl] .fd-select__control.is-alert[aria-expanded=true] .fd-select__button{border-left-color:transparent;border-right-color:var(--fdSelect_Expanded_Button_Border_Left_Color)}.fd-select__control.is-alert.is-expanded.is-focus,.fd-select__control.is-alert.is-expanded:focus,.fd-select__control.is-alert[aria-expanded=true].is-focus,.fd-select__control.is-alert[aria-expanded=true]:focus{box-shadow:none;z-index:5}.fd-select__control.is-information.is-expanded,.fd-select__control.is-information[aria-expanded=true]{box-shadow:var(--fdInput_Information_Box_Shadow_Hover)}.fd-select__control.is-information.is-expanded .fd-select__button,.fd-select__control.is-information[aria-expanded=true] .fd-select__button{-webkit-box-shadow:var(--fdInput_Information_Box_Shadow_Hover);background:var(--sapField_InformationBackgroundStyle);background-color:var(--sapButton_Selected_Background);border-left-color:var(--fdSelect_Expanded_Button_Border_Left_Color);box-shadow:var(--fdInput_Information_Box_Shadow_Hover);color:var(--fdInput_Group_Button_Information_Active_Text_Color)}.fd-select__control.is-information.is-expanded .fd-select__button.is-hover,.fd-select__control.is-information.is-expanded .fd-select__button:hover,.fd-select__control.is-information[aria-expanded=true] .fd-select__button.is-hover,.fd-select__control.is-information[aria-expanded=true] .fd-select__button:hover{color:var(--fdInput_Group_Button_Text_Color)}.fd-select__control.is-information.is-expanded[dir=rtl] .fd-select__button,.fd-select__control.is-information[aria-expanded=true][dir=rtl] .fd-select__button,[dir=rtl] .fd-select__control.is-information.is-expanded .fd-select__button,[dir=rtl] .fd-select__control.is-information[aria-expanded=true] .fd-select__button{border-left-color:transparent;border-right-color:var(--fdSelect_Expanded_Button_Border_Left_Color)}.fd-select__control.is-information.is-expanded.is-focus,.fd-select__control.is-information.is-expanded:focus,.fd-select__control.is-information[aria-expanded=true].is-focus,.fd-select__control.is-information[aria-expanded=true]:focus{box-shadow:none;z-index:5}.fd-select__text-content{-webkit-box-sizing:border-box;--fdSelect_Min_Width:2.5rem;border:0;box-sizing:border-box;color:var(--sapTextColor);color:var(--fdSelect_Text_Content_Color, var(--sapTextColor));cursor:pointer;display:var(--fdSelect_Text_Content_Display, inline-block);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;min-width:calc(var(--fdSelect_Min_Width) - var(--sapField_BorderWidth) * 2);overflow:hidden;padding:0 0 0 .625rem;text-overflow:ellipsis;white-space:nowrap}.fd-select__text-content:after,.fd-select__text-content:before{box-sizing:inherit;font-size:inherit}.fd-select__text-content[dir=rtl],[dir=rtl] .fd-select__text-content{padding-left:0;padding-right:.625rem}.fd-select[class*=-compact],.fd-select[class*=-condensed],[class*=-compact] .fd-select:not([class*=-cozy]),[class*=-condensed] .fd-select:not([class*=-cozy]){margin:.1875rem 0}.fd-select[class*=-compact] .fd-select__control,.fd-select[class*=-condensed] .fd-select__control,[class*=-compact] .fd-select:not([class*=-cozy]) .fd-select__control,[class*=-condensed] .fd-select:not([class*=-cozy]) .fd-select__control{height:1.625rem;min-height:1.625rem}.fd-select[class*=-compact] .fd-select__control .fd-select__text-content,.fd-select[class*=-condensed] .fd-select__control .fd-select__text-content,[class*=-compact] .fd-select:not([class*=-cozy]) .fd-select__control .fd-select__text-content,[class*=-condensed] .fd-select:not([class*=-cozy]) .fd-select__control .fd-select__text-content{--fdSelect_Min_Width:2.75rem;padding-left:.5rem}.fd-select[class*=-compact] .fd-select__control .fd-select__text-content[dir=rtl],.fd-select[class*=-condensed] .fd-select__control .fd-select__text-content[dir=rtl],[class*=-compact] .fd-select:not([class*=-cozy]) .fd-select__control .fd-select__text-content[dir=rtl],[class*=-condensed] .fd-select:not([class*=-cozy]) .fd-select__control .fd-select__text-content[dir=rtl],[dir=rtl] .fd-select[class*=-compact] .fd-select__control .fd-select__text-content,[dir=rtl] .fd-select[class*=-condensed] .fd-select__control .fd-select__text-content,[dir=rtl] [class*=-compact] .fd-select:not([class*=-cozy]) .fd-select__control .fd-select__text-content,[dir=rtl] [class*=-condensed] .fd-select:not([class*=-cozy]) .fd-select__control .fd-select__text-content{padding-left:0;padding-right:.5rem}.fd-select[class*=-compact] .fd-select__control.is-readonly .fd-select__text-content,.fd-select[class*=-compact] .fd-select__control[aria-readonly=true] .fd-select__text-content,.fd-select[class*=-compact] .fd-select__control[readonly] .fd-select__text-content,.fd-select[class*=-condensed] .fd-select__control.is-readonly .fd-select__text-content,.fd-select[class*=-condensed] .fd-select__control[aria-readonly=true] .fd-select__text-content,.fd-select[class*=-condensed] .fd-select__control[readonly] .fd-select__text-content,[class*=-compact] .fd-select:not([class*=-cozy]) .fd-select__control.is-readonly .fd-select__text-content,[class*=-compact] .fd-select:not([class*=-cozy]) .fd-select__control[aria-readonly=true] .fd-select__text-content,[class*=-compact] .fd-select:not([class*=-cozy]) .fd-select__control[readonly] .fd-select__text-content,[class*=-condensed] .fd-select:not([class*=-cozy]) .fd-select__control.is-readonly .fd-select__text-content,[class*=-condensed] .fd-select:not([class*=-cozy]) .fd-select__control[aria-readonly=true] .fd-select__text-content,[class*=-condensed] .fd-select:not([class*=-cozy]) .fd-select__control[readonly] .fd-select__text-content{padding-left:.5rem;padding-right:.5rem}.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap;outline:0;-webkit-appearance:none;-moz-appearance:none;left:0}[dir=rtl] .cdk-visually-hidden{left:auto;right:0}.fd-select{display:block;max-width:100%}.fd-select .fd-popover-custom{min-width:100%}.fd-select--inline{display:inline-block}.fd-select .fd-select__control .fd-select__button{position:static}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return SelectComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass DeprecatedSelectCSSClasses {\n  constructor() {\n    /** @hidden */\n    this.message = `Select CSS classes fd-select--compact, fd-select--compact--mobile, fd-popover-custom-select-body, fd-popover-custom-list are deprecated`;\n    /** @hidden */\n    this.alternative = {\n      name: 'Inspect the elements of the Select component to see the new classes',\n      link: ['/core', 'select']\n    };\n  }\n}\nlet DeprecatedSelectCompactDirective = /*#__PURE__*/(() => {\n  class DeprecatedSelectCompactDirective extends DeprecatedCompactDirective {\n    /** @hidden */\n    constructor() {\n      super('fd-select');\n    }\n  }\n  DeprecatedSelectCompactDirective.ɵfac = function DeprecatedSelectCompactDirective_Factory(t) {\n    return new (t || DeprecatedSelectCompactDirective)();\n  };\n  DeprecatedSelectCompactDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DeprecatedSelectCompactDirective,\n    selectors: [[\"fd-select\", \"compact\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CONTENT_DENSITY_DIRECTIVE,\n      useExisting: forwardRef(() => DeprecatedSelectCompactDirective)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return DeprecatedSelectCompactDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet SelectModule = /*#__PURE__*/(() => {\n  class SelectModule {}\n  SelectModule.ɵfac = function SelectModule_Factory(t) {\n    return new (t || SelectModule)();\n  };\n  SelectModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: SelectModule\n  });\n  SelectModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [BusyIndicatorModule, CommonModule, PopoverModule, ButtonModule, IconModule, ListModule, ContentDensityModule, I18nModule, ContentDensityModule]\n  });\n  return SelectModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DeprecatedSelectCSSClasses, DeprecatedSelectCompactDirective, FdOptionSelectionChange, OptionComponent, SELECT_COMPONENT, SELECT_ITEM_HEIGHT_EM, SELECT_PANEL_MAX_HEIGHT, SelectComponent, SelectKeyManagerService, SelectMobileComponent, SelectMobileModule, SelectModule };\n//# sourceMappingURL=fundamental-ngx-core-select.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}