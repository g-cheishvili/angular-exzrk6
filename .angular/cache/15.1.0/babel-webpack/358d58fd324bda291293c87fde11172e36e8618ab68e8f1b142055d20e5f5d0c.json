{"ast":null,"code":"import _asyncToGenerator from \"/home/webpct/angular-exzrk6/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, HostListener, Directive, HostBinding, EventEmitter, Input, Output, Injectable, Optional, InjectionToken, Inject, NgModule, Injector, TemplateRef, ViewContainerRef, ContentChild } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { ESCAPE, SPACE, ENTER, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport * as i3 from '@angular/cdk/a11y';\nimport { CdkTrapFocus, A11yModule } from '@angular/cdk/a11y';\nimport { Subject, merge, Subscription } from 'rxjs';\nimport * as i2$1 from '@fundamental-ngx/cdk/utils';\nimport { KeyUtil, resizeObservable, isOdd, DynamicComponentService } from '@fundamental-ngx/cdk/utils';\nimport * as i1 from '@fundamental-ngx/core/content-density';\nimport { contentDensityObserverProviders } from '@fundamental-ngx/core/content-density';\nimport * as i4 from '@fundamental-ngx/core/scrollbar';\nimport { ScrollbarModule } from '@fundamental-ngx/core/scrollbar';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, CdkOverlayOrigin, OverlayModule } from '@angular/cdk/overlay';\nimport equal from 'fast-deep-equal';\nimport { TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport { takeUntil, startWith, filter, distinctUntilChanged } from 'rxjs/operators';\nimport { GetDefaultPosition, PopoverPosition } from '@fundamental-ngx/core/shared';\nimport { MobileModeBase, MobileModeControl, MOBILE_MODE_CONFIG } from '@fundamental-ngx/core/mobile-mode';\nimport * as i1$2 from '@fundamental-ngx/core/dialog';\nimport { DialogModule } from '@fundamental-ngx/core/dialog';\nimport * as i3$1 from '@fundamental-ngx/core/title';\nimport { ButtonModule } from '@fundamental-ngx/core/button';\n\n/**\n * A component used to enforce a certain layout for the popover.\n * ```html\n * <fd-popover>\n *     <fd-popover-control>Control Element</fd-popover-control>\n *     <fd-popover-body>Popover Body</fd-popover-body>\n * </fd-popover>\n * ```\n */\nconst _c0 = [\"*\"];\nfunction PopoverBodyComponent_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction PopoverBodyComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, PopoverBodyComponent_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(3);\n    i0.ɵɵproperty(\"overrideTabindex\", ctx_r0._tabbableScrollbar);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n  }\n}\nfunction PopoverBodyComponent_ng_template_2_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction PopoverBodyComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵprojection(2, 2);\n    i0.ɵɵtext(3);\n    i0.ɵɵtemplate(4, PopoverBodyComponent_ng_template_2_ng_container_4_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵprojection(5, 3);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.text, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2._templateToDisplay);\n  }\n}\nconst _c1 = [[[\"\", \"fd-popover-body-header\", \"\"]], [[\"\", \"fd-popover-body-subheader\", \"\"]], \"*\", [[\"\", \"fd-popover-body-footer\", \"\"]]];\nconst _c2 = [\"[fd-popover-body-header]\", \"[fd-popover-body-subheader]\", \"*\", \"[fd-popover-body-footer]\"];\nconst _c3 = [\"dialogTemplate\"];\nfunction PopoverMobileComponent_ng_template_0_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function PopoverMobileComponent_ng_template_0_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.close());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PopoverMobileComponent_ng_template_0_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction PopoverMobileComponent_ng_template_0_fd_dialog_footer_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction PopoverMobileComponent_ng_template_0_fd_dialog_footer_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"fd-dialog-footer\");\n    i0.ɵɵtemplate(1, PopoverMobileComponent_ng_template_0_fd_dialog_footer_7_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.viewFooter);\n  }\n}\nfunction PopoverMobileComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"fd-dialog\", 1)(1, \"fd-dialog-header\")(2, \"h1\", 2);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, PopoverMobileComponent_ng_template_0_button_4_Template, 1, 0, \"button\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"fd-dialog-body\");\n    i0.ɵɵtemplate(6, PopoverMobileComponent_ng_template_0_ng_container_6_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, PopoverMobileComponent_ng_template_0_fd_dialog_footer_7_Template, 2, 1, \"fd-dialog-footer\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dialog_r2 = ctx.$implicit;\n    const dialogConfig_r3 = ctx.dialogConfig;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"dialogConfig\", dialogConfig_r3)(\"dialogRef\", dialog_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", ctx_r1.titleId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mobileConfig.hasCloseButton);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.viewBody);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.viewFooter);\n  }\n}\nconst _c4 = [\"popoverBodyContent\"];\nconst _c5 = [\"popoverFooterContent\"];\nconst _c6 = [\"templateRef\"];\nconst _c7 = [\"container\"];\nfunction PopoverComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"keydown\", function PopoverComponent_div_0_Template_div_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.triggerKeyDownHandler($event));\n    });\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.additionalTriggerClass);\n  }\n}\nfunction PopoverComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1);\n    i0.ɵɵprojection(1, 2);\n  }\n}\nconst _c8 = [[[\"fd-popover-control\"]], [[\"fd-popover-body\"]], \"*\"];\nconst _c9 = [\"fd-popover-control\", \"fd-popover-body\", \"*\"];\nlet PopoverControlComponent = /*#__PURE__*/(() => {\n  class PopoverControlComponent {\n    /** @hidden */\n    constructor(elRef) {\n      this.elRef = elRef;\n      /** @hidden */\n      this._tabbable = false;\n    }\n    /** @hidden */\n    ngAfterContentChecked() {\n      if (this._tabbable) {\n        this.makeTabbable();\n      }\n    }\n    /** @hidden */\n    makeTabbable() {\n      const elemChild = this.elRef.nativeElement.children[0];\n      if (elemChild && elemChild.getAttribute('tabindex') !== '-1') {\n        elemChild.tabIndex = '0';\n      }\n    }\n  }\n  PopoverControlComponent.ɵfac = function PopoverControlComponent_Factory(t) {\n    return new (t || PopoverControlComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  PopoverControlComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: PopoverControlComponent,\n    selectors: [[\"fd-popover-control\"]],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function PopoverControlComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return PopoverControlComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A component used to enforce a certain layout for the popover.\n * ```html\n * <fd-popover>\n *     <fd-popover-control>Control Element</fd-popover-control>\n *     <fd-popover-body>Popover Body</fd-popover-body>\n * </fd-popover>\n * ```\n */\nlet PopoverBodyComponent = /*#__PURE__*/(() => {\n  class PopoverBodyComponent {\n    /** Handler escape keydown */\n    bodyKeyupHandler(event) {\n      if (KeyUtil.isKeyCode(event, ESCAPE) && this._closeOnEscapeKey) {\n        // In case if popover belongs to the element inside dialog\n        event.stopPropagation();\n        this.onClose.next();\n      }\n    }\n    /** @hidden */\n    constructor(_elementRef, _changeDetectorRef, _contentDensityObserver) {\n      this._elementRef = _elementRef;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._contentDensityObserver = _contentDensityObserver;\n      /** Whether to wrap content with fd-scrollbar directive. */\n      this._disableScrollbar = false;\n      /** Should fd-scrollbar have tabindex*/\n      this._tabbableScrollbar = true;\n      /** Whether the popover should have an arrow. */\n      this._noArrow = true;\n      /** Whether the popover should be focusTrapped. */\n      this._focusTrapped = false;\n      /**\n       * Whether the popover should automatically move focus into the trapped region upon\n       * initialization and return focus to the previous activeElement upon destruction.\n       */\n      this._focusAutoCapture = false;\n      /** @hidden Property bind to popover's body */\n      this._closeOnEscapeKey = false;\n      /** Classes added to arrow element */\n      this._arrowClasses = '';\n      /** Additional style to put margin into body component, to give a place for arrow */\n      this._marginStyle = null;\n      /** @hidden text rendered inside popover's body */\n      this.text = null;\n      /** Close event from popover body */\n      this.onClose = new Subject();\n    }\n    /** @hidden */\n    _setArrowStyles(position, rtl) {\n      if (this._noArrow) {\n        this._arrowClasses = '';\n        return;\n      }\n      if (position.overlayY !== position.originY && position.originY !== 'center' && position.overlayY !== 'center' && position.overlayX === position.originX) {\n        this._arrowClasses = `fd-popover__body--${position.overlayY === 'top' ? 'below' : 'above'}` + ` fd-popover__body--arrow-${position.overlayY}` + ` fd-popover__body--arrow-x-${position.originX} `;\n      } else if (position.overlayX !== position.originX && position.overlayX !== 'center' && position.originX !== 'center' && position.originY === position.overlayY) {\n        let overlayX = position.overlayX;\n        if (rtl === 'rtl') {\n          overlayX = position.overlayX === 'end' ? 'start' : 'end';\n        }\n        this._arrowClasses = `fd-popover__body--${overlayX === 'start' ? 'after' : 'before'}` + ` fd-popover__body--arrow-${overlayX === 'start' ? 'left' : 'right'}` + ` fd-popover__body--arrow-y-${position.originY} `;\n      } else {\n        this._arrowClasses = 'fd-popover__body--no-arrow';\n      }\n      this.detectChanges();\n    }\n    /** @hidden */\n    detectChanges() {\n      if (!this._changeDetectorRef['destroyed']) {\n        this._changeDetectorRef.detectChanges();\n      }\n    }\n    /** @hidden */\n    _focusFirstTabbableElement() {\n      if (this._focusAutoCapture) {\n        this._cdkTrapFocus.focusTrap.focusFirstTabbableElement();\n      }\n    }\n  }\n  PopoverBodyComponent.ɵfac = function PopoverBodyComponent_Factory(t) {\n    return new (t || PopoverBodyComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ContentDensityObserver));\n  };\n  PopoverBodyComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: PopoverBodyComponent,\n    selectors: [[\"fd-popover-body\"]],\n    viewQuery: function PopoverBodyComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(CdkTrapFocus, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._cdkTrapFocus = _t.first);\n      }\n    },\n    hostBindings: function PopoverBodyComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keyup\", function PopoverBodyComponent_keyup_HostBindingHandler($event) {\n          return ctx.bodyKeyupHandler($event);\n        });\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([contentDensityObserverProviders({\n      alwaysAddModifiers: true\n    })])],\n    ngContentSelectors: _c2,\n    decls: 4,\n    vars: 15,\n    consts: [[1, \"fd-popover__body\", \"fd-popover__body--static\", 3, \"cdkTrapFocus\"], [\"fd-scrollbar\", \"\", \"class\", \"fd-popover__wrapper\", 3, \"overrideTabindex\", 4, \"ngIf\", \"ngIfElse\"], [\"renderer\", \"\"], [\"fd-scrollbar\", \"\", 1, \"fd-popover__wrapper\", 3, \"overrideTabindex\"], [4, \"ngTemplateOutlet\"]],\n    template: function PopoverBodyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c1);\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, PopoverBodyComponent_div_1_Template, 2, 2, \"div\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, PopoverBodyComponent_ng_template_2_Template, 6, 2, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(3);\n        i0.ɵɵstyleMap(ctx._marginStyle);\n        i0.ɵɵclassMap(ctx._arrowClasses + (ctx._additionalBodyClass || \"\"));\n        i0.ɵɵstyleProp(\"max-width\", ctx._maxWidth, \"px\")(\"min-width\", ctx._popoverBodyMinWidth, \"px\")(\"width\", ctx._popoverBodyWidth, \"px\");\n        i0.ɵɵclassProp(\"fd-popover__body--no-arrow\", ctx._noArrow);\n        i0.ɵɵproperty(\"cdkTrapFocus\", ctx._focusTrapped);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx._disableScrollbar)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [i2.NgIf, i2.NgTemplateOutlet, i3.CdkTrapFocus, i4.ScrollbarDirective],\n    styles: [\"/*!\\n * Fundamental Library Styles v0.28.3\\n * Copyright (c) 2023 SAP SE or an SAP affiliate company.\\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/main/LICENSE)\\n */.fd-popover{-webkit-box-sizing:border-box;--fdPopover_Offset:100%;--fdPopover_Center_Offset:50%;border:0;box-sizing:border-box;color:var(--sapTextColor);display:inline-block;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;max-width:100%;padding:0;position:relative}.fd-popover:after,.fd-popover:before{box-sizing:inherit;font-size:inherit}.fd-popover__control{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);cursor:pointer;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:0;position:relative}.fd-popover__control:after,.fd-popover__control:before{box-sizing:inherit;font-size:inherit}.fd-popover__control:focus-visible{outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor)}.fd-popover__control.is-expanded>*,.fd-popover__control[aria-expanded=true]>*{margin-bottom:0}.fd-popover__control.is-expanded+.fd-popover__body--input-message-group,.fd-popover__control[aria-expanded=true]+.fd-popover__body--input-message-group{margin-top:0}.fd-popover__control.is-disabled,.fd-popover__control:disabled,.fd-popover__control[aria-disabled=true]{pointer-events:none}.fd-popover__wrapper{border-radius:var(--fdPopover_Border_Radius);overflow:auto;scrollbar-color:var(--fdScrollbar_Thumb_Color) var(--fdScrollbar_Track_Color)}.fd-popover__wrapper.is-focus,.fd-popover__wrapper:focus{outline:none;z-index:5}.fd-popover__wrapper::-webkit-scrollbar{height:var(--fdScrollbar_Dimension);width:var(--fdScrollbar_Dimension)}.fd-popover__wrapper::-webkit-scrollbar-corner,.fd-popover__wrapper::-webkit-scrollbar-track{background-color:var(--fdScrollbar_Track_Color)}.fd-popover__wrapper::-webkit-scrollbar-thumb{-webkit-box-shadow:inset 0 0 0 var(--fdScrollbar_Dimension) var(--fdScrollbar_Thumb_Color);background-color:transparent;border:var(--fdScrollbar_Thumb_Offset) solid transparent;border-radius:calc(var(--fdScrollbar_Thumb_Border_Radius) - var(--fdScrollbar_Thumb_Offset));box-shadow:inset 0 0 0 var(--fdScrollbar_Dimension) var(--fdScrollbar_Thumb_Color)}.fd-popover__wrapper::-webkit-scrollbar-thumb:active,.fd-popover__wrapper::-webkit-scrollbar-thumb:hover{box-shadow:inset 0 0 0 var(--fdScrollbar_Dimension) var(--fdScrollbar_Thumb_Hover_Color)}.fd-popover__wrapper::-webkit-scrollbar-corner,.fd-popover__wrapper::-webkit-scrollbar-track{border-radius:0 var(--fdScrollbar_Border_Radius) var(--fdScrollbar_Border_Radius) 0}.fd-popover__wrapper[dir=rtl]::-webkit-scrollbar-corner,.fd-popover__wrapper[dir=rtl]::-webkit-scrollbar-track,[dir=rtl] .fd-popover__wrapper::-webkit-scrollbar-corner,[dir=rtl] .fd-popover__wrapper::-webkit-scrollbar-track{border-radius:var(--fdScrollbar_Border_Radius) 0 0 var(--fdScrollbar_Border_Radius)}.fd-popover__wrapper--visible{overflow:visible!important}.fd-popover__body{--fdIcon_Button_Height:2.25rem;--fdIcon_Button_Width:2.25rem;-webkit-box-sizing:border-box;-webkit-box-shadow:var(--sapContent_Shadow2);-webkit-transition:all .125s;background:var(--sapGroup_ContentBackground);border:0;border-radius:var(--fdPopover_Border_Radius);box-shadow:var(--sapContent_Shadow2);box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;opacity:1;padding:0;position:absolute;top:calc(var(--fdPopover_Offset) + .5rem);transition:all .125s;visibility:visible;white-space:nowrap;z-index:1000}.fd-popover__body:after,.fd-popover__body:before{box-sizing:inherit;content:\\\"\\\";font-size:inherit;position:absolute}.fd-popover__body:before{border-bottom:calc(.5rem - var(--fdPopover_Border_Width)) solid var(--sapGroup_ContentBackground);border-left:calc(.5rem - var(--fdPopover_Border_Width)) solid transparent;border-right:calc(.5rem - var(--fdPopover_Border_Width)) solid transparent;top:calc(-.5rem + var(--fdPopover_Border_Width));z-index:1002}.fd-popover__body:after,.fd-popover__body:before{border-top:none;display:inline-block;height:0;width:0}.fd-popover__body:after{border-bottom:.5rem solid var(--fdPopover_Border_Color);border-left:.5rem solid transparent;border-right:.5rem solid transparent;top:-.5rem;z-index:1001}.fd-popover__body>:not(.fd-popover__wrapper){overflow:hidden}.fd-popover__body ol:first-child li:first-child a:before,.fd-popover__body ol:first-child li:first-child:before,.fd-popover__body ul:first-child li:first-child a:before,.fd-popover__body ul:first-child li:first-child:before,.fd-popover__body-header>:first-child,.fd-popover__body>:first-child{border-top-left-radius:var(--fdPopover_Border_Radius);border-top-right-radius:var(--fdPopover_Border_Radius)}.fd-popover__body ol:last-child li:last-child a:before,.fd-popover__body ol:last-child li:last-child:before,.fd-popover__body ul:last-child li:last-child a:before,.fd-popover__body ul:last-child li:last-child:before,.fd-popover__body-footer>:last-child,.fd-popover__body>:last-child{border-bottom-left-radius:var(--fdPopover_Border_Radius);border-bottom-right-radius:var(--fdPopover_Border_Radius)}.fd-popover__body[class*=-compact],.fd-popover__body[class*=-condensed],[class*=-compact] .fd-popover__body:not([class*=-cozy]),[class*=-condensed] .fd-popover__body:not([class*=-cozy]){--fdIcon_Button_Height:1.625rem;--fdIcon_Button_Width:2rem}.fd-popover__body--no-arrow{box-shadow:var(--sapContent_Shadow1);top:var(--fdPopover_Offset)}.fd-popover__body--no-arrow:after,.fd-popover__body--no-arrow:before{display:none}.fd-popover__body,.fd-popover__body--left{left:0}.fd-popover__body--left[dir=rtl],.fd-popover__body[dir=rtl],[dir=rtl] .fd-popover__body,[dir=rtl] .fd-popover__body--left{left:auto;right:0}.fd-popover__body--left:before,.fd-popover__body:before{left:calc(var(--fdIcon_Button_Width) * .5 - .5rem - var(--fdPopover_Border_Width) + var(--fdPopover_Border_Width))}.fd-popover__body--left:after,.fd-popover__body:after{left:calc(var(--fdIcon_Button_Width) * .5 - .5rem - var(--fdPopover_Border_Width))}.fd-popover__body--left[dir=rtl]:before,.fd-popover__body[dir=rtl]:before,[dir=rtl] .fd-popover__body--left:before,[dir=rtl] .fd-popover__body:before{left:auto;right:calc(var(--fdIcon_Button_Width) * .5 - .5rem - var(--fdPopover_Border_Width) + var(--fdPopover_Border_Width))}.fd-popover__body--left[dir=rtl]:after,.fd-popover__body[dir=rtl]:after,[dir=rtl] .fd-popover__body--left:after,[dir=rtl] .fd-popover__body:after{left:auto;right:calc(var(--fdIcon_Button_Width) * .5 - .5rem - var(--fdPopover_Border_Width))}.fd-popover__body--center{-webkit-transform:translateX(calc(var(--fdPopover_Center_Offset) * -1));left:var(--fdPopover_Center_Offset);transform:translate(calc(var(--fdPopover_Center_Offset) * -1))}.fd-popover__body--center[dir=rtl],[dir=rtl] .fd-popover__body--center{-webkit-transform:translateX(var(--fdPopover_Center_Offset));left:auto;right:var(--fdPopover_Center_Offset);transform:translate(var(--fdPopover_Center_Offset))}.fd-popover__body--right{left:auto;right:0}.fd-popover__body--right[dir=rtl],[dir=rtl] .fd-popover__body--right{left:0;right:auto}.fd-popover__body--right:before{left:auto;right:calc(var(--fdIcon_Button_Width) * .5 - .5rem - var(--fdPopover_Border_Width) + var(--fdPopover_Border_Width))}.fd-popover__body--right:after{left:auto;right:calc(var(--fdIcon_Button_Width) * .5 - .5rem - var(--fdPopover_Border_Width))}.fd-popover__body--right[dir=rtl]:before,[dir=rtl] .fd-popover__body--right:before{left:calc(var(--fdIcon_Button_Width) * .5 - .5rem - var(--fdPopover_Border_Width) + var(--fdPopover_Border_Width));right:auto}.fd-popover__body--right[dir=rtl]:after,[dir=rtl] .fd-popover__body--right:after{left:calc(var(--fdIcon_Button_Width) * .5 - .5rem - var(--fdPopover_Border_Width));right:auto}.fd-popover__body--before{left:auto!important;right:var(--fdPopover_Offset)!important;top:0}.fd-popover__body--after{left:var(--fdPopover_Offset)!important;right:auto!important;top:0}.fd-popover__body--middle{-webkit-transform:translateY(calc(var(--fdPopover_Center_Offset) * -1));top:var(--fdPopover_Center_Offset);transform:translateY(calc(var(--fdPopover_Center_Offset) * -1))}.fd-popover__body--bottom{bottom:0;top:auto}.fd-popover__body--above{bottom:var(--fdPopover_Offset);top:auto}.fd-popover__body--arrow-bottom{bottom:calc(var(--fdPopover_Offset) + .5rem)!important}.fd-popover__body--arrow-bottom:before{border-bottom:none;border-left:calc(.5rem - var(--fdPopover_Border_Width)) solid transparent;border-right:calc(.5rem - var(--fdPopover_Border_Width)) solid transparent;border-top:calc(.5rem - var(--fdPopover_Border_Width)) solid var(--sapGroup_ContentBackground);display:inline-block;height:0;top:100%;width:0}.fd-popover__body--arrow-bottom:after{border-bottom:none;border-left:.5rem solid transparent;border-right:.5rem solid transparent;border-top:.5rem solid var(--fdPopover_Border_Color);display:inline-block;height:0;top:100%;width:0}.fd-popover__body--arrow-left{left:calc(var(--fdPopover_Offset) + .5rem)!important}.fd-popover__body--arrow-left:before{border-bottom:calc(.5rem - var(--fdPopover_Border_Width)) solid transparent;border-right:calc(.5rem - var(--fdPopover_Border_Width)) solid var(--sapGroup_ContentBackground);border-top:calc(.5rem - var(--fdPopover_Border_Width)) solid transparent;top:calc(var(--fdIcon_Button_Height) * .5 - .5rem - var(--fdPopover_Border_Width) + var(--fdPopover_Border_Width))}.fd-popover__body--arrow-left:after,.fd-popover__body--arrow-left:before{border-left:none;display:inline-block;height:0;left:auto!important;right:100%!important;width:0}.fd-popover__body--arrow-left:after{border-bottom:.5rem solid transparent;border-right:.5rem solid var(--fdPopover_Border_Color);border-top:.5rem solid transparent;top:calc(var(--fdIcon_Button_Height) * .5 - .5rem - var(--fdPopover_Border_Width))}.fd-popover__body--arrow-right{right:calc(var(--fdPopover_Offset) + .5rem)!important}.fd-popover__body--arrow-right:before{border-bottom:calc(.5rem - var(--fdPopover_Border_Width)) solid transparent;border-left:calc(.5rem - var(--fdPopover_Border_Width)) solid var(--sapGroup_ContentBackground);border-top:calc(.5rem - var(--fdPopover_Border_Width)) solid transparent;top:calc(var(--fdIcon_Button_Height) * .5 - .5rem - var(--fdPopover_Border_Width) + var(--fdPopover_Border_Width))}.fd-popover__body--arrow-right:after,.fd-popover__body--arrow-right:before{border-right:none;display:inline-block;height:0;left:100%!important;right:auto!important;width:0}.fd-popover__body--arrow-right:after{border-bottom:.5rem solid transparent;border-left:.5rem solid var(--fdPopover_Border_Color);border-top:.5rem solid transparent;top:calc(var(--fdIcon_Button_Height) * .5 - .5rem - var(--fdPopover_Border_Width))}.fd-popover__body--arrow-x-center:after,.fd-popover__body--arrow-x-center:before{-webkit-transform:translateX(-50%);left:50%;transform:translate(-50%)}.fd-popover__body--arrow-x-center[dir=rtl]:after,.fd-popover__body--arrow-x-center[dir=rtl]:before,[dir=rtl] .fd-popover__body--arrow-x-center:after,[dir=rtl] .fd-popover__body--arrow-x-center:before{-webkit-transform:translateX(50%);left:auto;right:50%;transform:translate(50%)}.fd-popover__body--arrow-x-end:before{left:auto;right:calc(var(--fdIcon_Button_Width) * .5 - .5rem - var(--fdPopover_Border_Width) + var(--fdPopover_Border_Width))}.fd-popover__body--arrow-x-end:after{left:auto;right:calc(var(--fdIcon_Button_Width) * .5 - .5rem - var(--fdPopover_Border_Width))}.fd-popover__body--arrow-x-end[dir=rtl]:before,[dir=rtl] .fd-popover__body--arrow-x-end:before{left:calc(var(--fdIcon_Button_Width) * .5 - .5rem - var(--fdPopover_Border_Width) + var(--fdPopover_Border_Width));right:auto}.fd-popover__body--arrow-x-end[dir=rtl]:after,[dir=rtl] .fd-popover__body--arrow-x-end:after{left:calc(var(--fdIcon_Button_Width) * .5 - .5rem - var(--fdPopover_Border_Width));right:auto}.fd-popover__body--arrow-y-center:after,.fd-popover__body--arrow-y-center:before{-webkit-transform:translateY(-50%);top:50%;transform:translateY(-50%)}.fd-popover__body--arrow-y-end:before{bottom:calc(var(--fdIcon_Button_Height) * .5 - .5rem - var(--fdPopover_Border_Width) + var(--fdPopover_Border_Width));top:auto}.fd-popover__body--arrow-y-end:after{bottom:calc(var(--fdIcon_Button_Height) * .5 - .5rem - var(--fdPopover_Border_Width));top:auto}.fd-popover__body--dropdown{width:max-content}.fd-popover__body--dropdown-fill{display:block;max-width:40rem;width:calc(100% - var(--sapGroup_BorderWidth) * 2)}.fd-popover__body--static{--fdPopover_Offset:0%;--fdPopover_Center_Offset:0%;position:relative}.fd-popover__body.is-hidden,.fd-popover__body[aria-hidden=true]{opacity:0;visibility:hidden;z-index:-1}.fd-popover__body .fd-popover__body--hidden{display:none}.fd-popover__body--input-message-group{-webkit-box-shadow:none;border:none;box-shadow:none}.fd-popover__body--inline-help{font-size:var(--sapFontSmallSize);padding:.75rem}.fd-popover__body--inline-help-icon{--fdIcon_Button_Height:1.375rem;--fdIcon_Button_Width:1.375rem}.fd-popover--input-message-group .fd-popover__body,.fd-popover--input-message-group .fd-popover__body--no-arrow{-webkit-box-shadow:none;border:none;box-shadow:none}.fd-popover--full-width{width:100%}.cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;inset:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:rgba(0,0,0,0);transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacity:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-animation{transition:none}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}fd-popover-body{max-width:100%;max-height:100%}.fd-popover-custom{display:inline-block;max-width:100%}.fd-popover-custom--disabled .fd-popover__control{cursor:auto}.fd-popover__body{max-height:100%;max-width:100%;display:flex}.fd-popover__body--hidden{display:none!important}.fd-popover__body.fd-form-message:before{width:auto;height:auto;position:relative;inset:0;border:none}.fd-popover__body>.fd-scrollbar{max-height:100%;max-width:100%;width:100%;border-radius:inherit}.fd-popover__body .fd-list{border-radius:var(--fdPopover_Border_Radius)}.fd-popover__body .fd-list__item:first-child{border-top-right-radius:var(--fdPopover_Border_Radius);border-top-left-radius:var(--fdPopover_Border_Radius)}.fd-popover__body .fd-list__item:last-child{border-bottom-right-radius:var(--fdPopover_Border_Radius);border-bottom-left-radius:var(--fdPopover_Border_Radius)}.fd-popover__body .fd-nested-list{border-bottom:none}.fd-popover__body .fd-nested-list__item:first-child .fd-nested-list__content{border-top-right-radius:var(--fdPopover_Border_Radius);border-top-left-radius:var(--fdPopover_Border_Radius)}.fd-popover__body .fd-nested-list__item:last-child .fd-nested-list__item:last-child .fd-nested-list__link{border-bottom-right-radius:var(--fdPopover_Border_Radius);border-bottom-left-radius:var(--fdPopover_Border_Radius)}.fd-popover__body .fd-nested-list__item:last-child .fd-nested-list__content{border-bottom-right-radius:var(--fdPopover_Border_Radius);border-bottom-left-radius:var(--fdPopover_Border_Radius)}.fd-popover__body .fd-nested-list__item:last-child .fd-nested-list__content.is-selected{border-bottom-right-radius:0;border-bottom-left-radius:0}.fd-popover__body .fd-side-nav,.fd-popover__body .fd-nested-list__item{border-right:none}.fd-popover__body .fd-side-nav:first-child,.fd-popover__body .fd-nested-list__item:first-child{border-top-right-radius:var(--fdPopover_Border_Radius);border-top-left-radius:var(--fdPopover_Border_Radius)}.fd-popover__body .fd-side-nav:last-child,.fd-popover__body .fd-nested-list__item:last-child{border-bottom-right-radius:var(--fdPopover_Border_Radius);border-bottom-left-radius:var(--fdPopover_Border_Radius)}.cdk-overlay-container{z-index:1002}.cdk-overlay-pane{max-width:100%;max-height:100%}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return PopoverBodyComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PopoverBodyHeaderDirective = /*#__PURE__*/(() => {\n  class PopoverBodyHeaderDirective {\n    constructor() {\n      /** @hidden */\n      this.fdPopoverBodyHeaderClass = true;\n    }\n  }\n  PopoverBodyHeaderDirective.ɵfac = function PopoverBodyHeaderDirective_Factory(t) {\n    return new (t || PopoverBodyHeaderDirective)();\n  };\n  PopoverBodyHeaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: PopoverBodyHeaderDirective,\n    selectors: [[\"\", \"fdPopoverBodyHeader\", \"\"], [\"\", \"fd-popover-body-header\", \"\"]],\n    hostVars: 2,\n    hostBindings: function PopoverBodyHeaderDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-popover__body-header\", ctx.fdPopoverBodyHeaderClass);\n      }\n    }\n  });\n  return PopoverBodyHeaderDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PopoverBodyFooterDirective = /*#__PURE__*/(() => {\n  class PopoverBodyFooterDirective {\n    constructor() {\n      /** @hidden */\n      this.fdPopoverBodyFooterClass = true;\n    }\n  }\n  PopoverBodyFooterDirective.ɵfac = function PopoverBodyFooterDirective_Factory(t) {\n    return new (t || PopoverBodyFooterDirective)();\n  };\n  PopoverBodyFooterDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: PopoverBodyFooterDirective,\n    selectors: [[\"\", \"fdPopoverBodyFooter\", \"\"], [\"\", \"fd-popover-body-footer\", \"\"]],\n    hostVars: 2,\n    hostBindings: function PopoverBodyFooterDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-popover__body-footer\", ctx.fdPopoverBodyFooterClass);\n      }\n    }\n  });\n  return PopoverBodyFooterDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BasePopoverClass = /*#__PURE__*/(() => {\n  class BasePopoverClass {\n    constructor() {\n      /** Whether to close the popover on router navigation start. */\n      this.closeOnNavigation = true;\n      /** Whether the popover is disabled. */\n      this.disabled = false;\n      /** Maximum width of popover body in px, prevents from overextending body by `fillControlMode`  */\n      this.maxWidth = null;\n      /** Whether the popover should have an arrow. */\n      this.noArrow = true;\n      /** Whether the popover container needs an extra class for styling. */\n      this.additionalBodyClass = null;\n      /** Whether the popover container needs an extra class for styling. */\n      this.additionalTriggerClass = null;\n      /** Whether the popover should close when the escape key is pressed. */\n      this.closeOnEscapeKey = true;\n      /** Whether to wrap content with fd-scrollbar directive. */\n      this.disableScrollbar = false;\n      /** Should fd-scrollbar have tabindex*/\n      this.tabbableScrollbar = true;\n      /**\n       * The placement of the popover.\n       * It can be one of:\n       * top, top-start, top-end, bottom, bottom-start, bottom-end,\n       * right, right-start, right-end, left, left-start, left-end.\n       */\n      this.placement = null;\n      /**\n       * The trigger events that will open/close the popover.\n       * Accepts any [HTML DOM Events](https://www.w3schools.com/jsref/dom_obj_event.asp) or a config object for the corresponding event.\n       * Using the config object allows to specify whether an event should apply both for open and close actions or only some of them.\n       *\n       * If array of triggers consists only of one event, it will be treated at a toggle event (open and close)\n       * If array of trigger consists of more than one event, each odd event will be treated as an open event for the popover,\n       * and each even event will be treated as closing event for the popover.\n       *\n       * Consider the following value for `triggers`:\n       * ```\n       * [\n       *  'click' // basically it's an alias for \"{ trigger: 'click', openAction: true, closeAction: true }\"\n       * ]\n       * ```\n       * ```\n       * [\n       *  'mouseenter' // Shortcut for \"{ trigger: 'mouseenter', openAction: true, closeAction: false }\", and will only open the popover.\n       *  'mouseleave' // Shortcut for \"{ trigger: 'mouseleave', openAction: false, closeAction: true }\" and will only close the popover.\n       * ]\n       * ```\n       * ```\n       * [\n       *  { trigger: 'mouseenter', openAction: true, closeAction: true }, // \"mouseenter\" will toggle the popover.\n       *  { trigger: 'mouseleave', openAction: true, closeAction: true } // \"mouseleave\" will toggle the popover.\n       * ]\n       * ```\n       *\n       * @default ['click']\n       */\n      this.triggers = ['click'];\n      /** Whether the popover is open. Can be used through two-way binding. */\n      this.isOpen = false;\n      /** Whether the popover should close when a click is made outside its boundaries. */\n      this.closeOnOutsideClick = true;\n      /** Whether the popover should be focusTrapped. */\n      this.focusTrapped = false;\n      /**\n       * Whether the popover should automatically move focus into the trapped region upon\n       * initialization and return focus to the previous activeElement upon destruction.\n       */\n      this.focusAutoCapture = false;\n      /**\n       * Scroll strategy, there are 4 accepted\n       * - CloseScrollStrategy\n       * - NoopScrollStrategy\n       * - BlockScrollStrategy\n       * - RepositionScrollStrategy ( default )\n       */\n      this.scrollStrategy = null;\n      /**\n       * List of positions options for overlay defined by angular CDK.\n       * Positions will be taken in order, same like on array. If first position provided doesn't fit to window,\n       * another will be used\n       * More information can be found in https://material.angular.io/cdk/overlay/api\n       */\n      this.cdkPositions = null;\n      /**\n       * Preset options for the popover body width.\n       * * `at-least` will apply a minimum width to the body equivalent to the width of the control.\n       * * `equal` will apply a width to the body equivalent to the width of the control.\n       * * Leave blank for no effect.\n       */\n      this.fillControlMode = null;\n      /** The element to which  the overlay is attached. By default it is body */\n      this.appendTo = null;\n      /** Whether position shouldn't change, when popover approach the corner of page */\n      this.fixedPosition = false;\n      /** Event emitted when the state of the isOpen property changes. */\n      this.isOpenChange = new EventEmitter();\n    }\n  }\n  BasePopoverClass.ɵfac = function BasePopoverClass_Factory(t) {\n    return new (t || BasePopoverClass)();\n  };\n  BasePopoverClass.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BasePopoverClass,\n    hostVars: 2,\n    hostBindings: function BasePopoverClass_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-popover-custom--disabled\", ctx.disabled);\n      }\n    },\n    inputs: {\n      closeOnNavigation: \"closeOnNavigation\",\n      disabled: \"disabled\",\n      maxWidth: \"maxWidth\",\n      noArrow: \"noArrow\",\n      additionalBodyClass: \"additionalBodyClass\",\n      additionalTriggerClass: \"additionalTriggerClass\",\n      closeOnEscapeKey: \"closeOnEscapeKey\",\n      disableScrollbar: \"disableScrollbar\",\n      tabbableScrollbar: \"tabbableScrollbar\",\n      placement: \"placement\",\n      triggers: \"triggers\",\n      isOpen: \"isOpen\",\n      closeOnOutsideClick: \"closeOnOutsideClick\",\n      focusTrapped: \"focusTrapped\",\n      focusAutoCapture: \"focusAutoCapture\",\n      scrollStrategy: \"scrollStrategy\",\n      cdkPositions: \"cdkPositions\",\n      fillControlMode: \"fillControlMode\",\n      appendTo: \"appendTo\",\n      fixedPosition: \"fixedPosition\",\n      options: \"options\",\n      addContainerClass: \"addContainerClass\",\n      additionalClasses: \"additionalClasses\"\n    },\n    outputs: {\n      isOpenChange: \"isOpenChange\"\n    }\n  });\n  return BasePopoverClass;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PopoverContainerDirective = /*#__PURE__*/(() => {\n  class PopoverContainerDirective {\n    /** @hidden */\n    constructor(_elmRef) {\n      this._elmRef = _elmRef;\n      /** Subject which emits when popover position refresh is required. */\n      this.refreshPosition$ = new Subject();\n      /** @hidden */\n      this._destroy$ = new Subject();\n    }\n    /** @hidden */\n    ngOnInit() {\n      resizeObservable(this._elmRef.nativeElement).pipe(takeUntil(this._destroy$)).subscribe(() => {\n        this.refreshPosition$.next();\n      });\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._destroy$.next();\n      this._destroy$.complete();\n    }\n  }\n  PopoverContainerDirective.ɵfac = function PopoverContainerDirective_Factory(t) {\n    return new (t || PopoverContainerDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  PopoverContainerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: PopoverContainerDirective,\n    selectors: [[\"\", \"fdPopoverContainer\", \"\"]]\n  });\n  return PopoverContainerDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst MAX_BODY_SIZE = 99999999;\nlet PopoverService = /*#__PURE__*/(() => {\n  class PopoverService extends BasePopoverClass {\n    /** @hidden */\n    constructor(_overlay, _renderer, _viewportRuler, _injector, _rtlService, _popoverContainer) {\n      super();\n      this._overlay = _overlay;\n      this._renderer = _renderer;\n      this._viewportRuler = _viewportRuler;\n      this._injector = _injector;\n      this._rtlService = _rtlService;\n      this._popoverContainer = _popoverContainer;\n      /** @hidden */\n      this._onLoad = new Subject();\n      /** @hidden */\n      this._eventRef = [];\n      /** @hidden */\n      this._placementRefresh$ = new Subject();\n      /** An RxJS Subject that will kill the data stream upon component’s destruction (for unsubscribing)  */\n      this._onDestroy$ = new Subject();\n      /** Merge observables - close or destroy */\n      this._refresh$ = merge(this.isOpenChange, this._onDestroy$);\n    }\n    /**\n     * Method initialising the popover service - should be called, after view is initialised, params:\n     * - triggerElement - element, which is equivalent for cdkOverlayOrigin, or fd-popover-control,\n     *   by default to this element the popover body will lbe appended and events on this element will trigger\n     *   popover's  toggle\n     * - config - configuration object - in this case the intention is to use inheritance of BasePopoverClass in component\n     * - templateData - in case of having already PopoverBodyComponent, there is way to pass container, template containing\n     *   PopoverComponent and PopoverComponent instance\n     */\n    initialise(triggerElement, config, templateData) {\n      this._templateData = templateData;\n      this._triggerElement = triggerElement;\n      if (config) {\n        this.refreshConfiguration(config);\n      }\n      this._refreshTriggerListeners();\n      if (this.isOpen) {\n        this.open();\n      }\n      // If wrapper container height changes outside, refresh popover position.\n      this._popoverContainer?.refreshPosition$.pipe(takeUntil(this._refresh$)).subscribe(() => {\n        this.refreshPosition();\n      });\n    }\n    /** Closes the popover. */\n    close(focusActiveElement = true) {\n      if (this._overlayRef) {\n        this._overlayRef.dispose();\n        const prevState = this.isOpen;\n        this.isOpen = false;\n        if (prevState !== this.isOpen) {\n          this.isOpenChange.emit(this.isOpen);\n        }\n        this._focusLastActiveElementBeforeOpen(focusActiveElement);\n      }\n    }\n    /** Opens the popover. */\n    open() {\n      if ((!this._overlayRef || !this._overlayRef.hasAttached()) && !this.disabled && this._triggerElement) {\n        const position = this._getPositionStrategy();\n        this._overlayRef = this._overlay.create(this._getOverlayConfig(position));\n        if (this._templateData) {\n          this._attachTemplate();\n        } else {\n          this._attachBodyComponent();\n        }\n        this._listenForPositionChange(position.positionChanges);\n        if (this.fillControlMode) {\n          this._listenOnResize();\n        }\n        const prevState = this.isOpen;\n        this.isOpen = true;\n        if (prevState !== this.isOpen) {\n          this.isOpenChange.emit(this.isOpen);\n        }\n        this._detectChanges();\n        this._listenOnClose();\n        this._listenOnOutClicks();\n        this._focusFirstTabbableElement();\n        this._onLoad.next(this._getPopoverBody()._elementRef);\n        this._overlayRef.updatePosition();\n      }\n    }\n    /** method updating template or text inside rendered PopoverBody */\n    updateContent(stringContent, templateContent) {\n      this.stringContent = stringContent;\n      this.templateContent = templateContent;\n      if (this._getPopoverBody()) {\n        this._passVariablesToBody();\n      }\n    }\n    /** Toggles the popover open state */\n    toggle(openAction = true, closeAction = true) {\n      if (this.isOpen) {\n        closeAction && this.close();\n      } else {\n        openAction && this.open();\n      }\n    }\n    /**\n     * Method called to change position of popover,\n     * recommended to be used only when popover is opened, otherwise change position or cdkPlacement\n     */\n    applyNewPosition(positions) {\n      const refPosition = this._getPositionStrategy(positions);\n      this._listenForPositionChange(refPosition.positionChanges);\n      this._overlayRef.updatePositionStrategy(refPosition);\n    }\n    /** Method called to refresh position of opened popover */\n    refreshPosition() {\n      if (this._overlayRef) {\n        this._overlayRef.updatePosition();\n      }\n    }\n    /** Equivalent for ngOnDestroy method, whether component is destroyed, this method should be called */\n    onDestroy() {\n      this._onDestroy$.next();\n      this._onDestroy$.complete();\n      this._removeTriggerListeners();\n      if (this._overlayRef) {\n        this._overlayRef.detach();\n      }\n    }\n    /**\n     * Method that sets configuration/options, it detects if there is something changed and overwrites them\n     */\n    refreshConfiguration(config) {\n      const onlyChanged = Object.keys(new BasePopoverClass()).filter(key => this[key] !== config[key]);\n      if (onlyChanged.includes('isOpen')) {\n        if (config.isOpen) {\n          this.open();\n        } else {\n          this.close();\n        }\n      }\n      /** TODO\n       * This overriding is dangerous thing and leads to unexpected behavior\n       * We have to avoid this.\n       */\n      onlyChanged.forEach(key => this[key] = config[key]);\n      if (onlyChanged.includes('triggers')) {\n        this._refreshTriggerListeners();\n      }\n    }\n    /**\n     * This method is intended to be called in order\n     * to postpone the main functionality but be able\n     * to enable it back in the future by initialise()\n     */\n    deactivate() {\n      this._removeTriggerListeners();\n    }\n    /** Refresh listeners on trigger element events */\n    _refreshTriggerListeners() {\n      if (!this._triggerElement) {\n        return;\n      }\n      this._removeTriggerListeners();\n      if (this.triggers?.length) {\n        this._normalizeTriggers().forEach(trigger => {\n          this._eventRef.push(this._renderer.listen(this._triggerElement.nativeElement, trigger.trigger, event => {\n            const closeAction = !!trigger.closeAction;\n            const openAction = !!trigger.openAction;\n            this.toggle(openAction, closeAction);\n            if (trigger.stopPropagation) {\n              event.stopImmediatePropagation();\n            }\n          }));\n        });\n      }\n    }\n    /**\n     * Updates trigger element and refreshes the listeners.\n     * @param trigger Trigger element ref.\n     */\n    updateTriggerElement(trigger) {\n      this._triggerElement = trigger;\n      this._refreshTriggerListeners();\n    }\n    /** @hidden */\n    _normalizeTriggers() {\n      return this.triggers.map((trigger, index) => {\n        if (typeof trigger === 'object' && trigger.trigger) {\n          return trigger;\n        }\n        const oddNumber = isOdd(index + 1);\n        return {\n          trigger,\n          openAction: this.triggers.length === 1 || oddNumber,\n          closeAction: this.triggers.length === 1 || !oddNumber,\n          stopPropagation: false\n        };\n      });\n    }\n    /** @hidden */\n    _getOverlayConfig(position) {\n      const direction = this._getDirection();\n      return new OverlayConfig({\n        direction,\n        disposeOnNavigation: this.closeOnNavigation,\n        positionStrategy: position,\n        scrollStrategy: this.scrollStrategy || this._overlay.scrollStrategies.reposition()\n      });\n    }\n    /** @hidden */\n    _listenOnResize() {\n      this._viewportRuler.change(15).pipe(takeUntil(this._refresh$), startWith(1)).subscribe(() => this._applyWidthOverlay());\n    }\n    /** @hidden */\n    _getDirection() {\n      if (!this._rtlService) {\n        return 'ltr';\n      }\n      return this._rtlService.rtl.getValue() ? 'rtl' : 'ltr';\n    }\n    /** @hidden */\n    _getPositionStrategy(forcedPositions) {\n      let resultPosition = forcedPositions ? forcedPositions : this._getPositions();\n      if (!this.fixedPosition) {\n        resultPosition = resultPosition.concat(GetDefaultPosition(resultPosition));\n      }\n      return this._overlay.position().flexibleConnectedTo(this.appendTo || this._triggerElement).withPositions(resultPosition).withPush(false);\n    }\n    /** remove listeners from trigger element events */\n    _removeTriggerListeners() {\n      this._eventRef.forEach(event => event());\n      this._eventRef = [];\n    }\n    /** Attach template containing popover body to overlay */\n    _attachTemplate() {\n      this._passVariablesToBody();\n      if (this._templateData) {\n        this._overlayRef.attach(new TemplatePortal(this._templateData.template, this._templateData.container));\n      }\n    }\n    /** Create PopoverBodyComponent and attach it into overlay */\n    _attachBodyComponent() {\n      const overlay = this._overlayRef.attach(new ComponentPortal(PopoverBodyComponent, null, this._injector));\n      this._popoverBody = overlay.instance;\n      this._passVariablesToBody();\n    }\n    /** @hidden */\n    _listenForPositionChange(positionChange) {\n      this._placementRefresh$.next();\n      positionChange.pipe(takeUntil(this._placementRefresh$), takeUntil(this._onDestroy$), filter(() => !this.noArrow && !!this._getPopoverBody()), distinctUntilChanged((previous, current) => previous.connectionPair === current.connectionPair)).subscribe(event => this._getPopoverBody()._setArrowStyles(event.connectionPair, this._getDirection()));\n    }\n    /** Subscribe to close events from CDK Overlay, to throw proper events, change values */\n    _listenOnClose() {\n      const closeEvents$ = merge(this._overlayRef.detachments(), this._getPopoverBody().onClose);\n      closeEvents$.pipe(takeUntil(this._refresh$)).subscribe(() => this.close());\n    }\n    /** Listener for click events */\n    _listenOnOutClicks() {\n      const closeEvents$ = merge(this._overlayRef.backdropClick(), this._overlayRef._outsidePointerEvents);\n      closeEvents$.pipe(filter(event => this._shouldClose(event)), takeUntil(this._refresh$)).subscribe(() => this.close());\n    }\n    /** @hidden */\n    _shouldClose(event) {\n      return this.isOpen && this.closeOnOutsideClick && !this._triggerContainsTarget(event);\n    }\n    /** @hidden */\n    _getEventTarget(event) {\n      return event.composedPath ? event.composedPath()[0] : event.target;\n    }\n    /** @hidden */\n    _triggerContainsTarget(event) {\n      const triggerElement = this._triggerElement.nativeElement;\n      return triggerElement.contains(this._getEventTarget(event));\n    }\n    /** @hidden */\n    _getPositions() {\n      if (this.cdkPositions) {\n        return this.cdkPositions;\n      }\n      if (this.placement) {\n        return [PopoverPosition.getCdkPlacement(this.placement, this._getDirection())];\n      }\n      return [];\n    }\n    /** @hidden */\n    _applyWidthOverlay() {\n      const maxWidthLimit = this.maxWidth ? this.maxWidth : MAX_BODY_SIZE;\n      const width = Math.min(this._getTriggerWidth(), maxWidthLimit);\n      if (this.fillControlMode === 'at-least') {\n        this._getPopoverBody()._popoverBodyMinWidth = width;\n      } else if (this.fillControlMode === 'equal') {\n        this._getPopoverBody()._popoverBodyWidth = width;\n      }\n      this._detectChanges();\n    }\n    /** @hidden */\n    _passVariablesToBody() {\n      const body = this._getPopoverBody();\n      body.text = this.stringContent;\n      body._additionalBodyClass = this.additionalBodyClass;\n      body._focusTrapped = this.focusTrapped;\n      body._maxWidth = this.maxWidth;\n      body._noArrow = this.noArrow;\n      body._focusAutoCapture = this.focusAutoCapture;\n      body._disableScrollbar = this.disableScrollbar;\n      body._tabbableScrollbar = this.tabbableScrollbar;\n      body._templateToDisplay = this.templateContent;\n      body._closeOnEscapeKey = this.closeOnEscapeKey;\n      this._detectChanges();\n    }\n    /** @hidden */\n    _getTriggerWidth() {\n      return this._triggerElement.nativeElement.offsetWidth;\n    }\n    /** @hidden */\n    _getPopoverBody() {\n      return this._templateData?.popoverBody || this._popoverBody;\n    }\n    /** @hidden */\n    _detectChanges() {\n      if (this._getPopoverBody()) {\n        this._getPopoverBody().detectChanges();\n      }\n    }\n    /** @hidden */\n    _focusFirstTabbableElement(focusLastElement = true) {\n      if (focusLastElement && this.focusAutoCapture) {\n        this._lastActiveElement = document.activeElement;\n        this._getPopoverBody()?._focusFirstTabbableElement();\n      }\n    }\n    /** @hidden */\n    _focusLastActiveElementBeforeOpen(focusLastElement = true) {\n      if (focusLastElement && this.focusAutoCapture && this._lastActiveElement) {\n        this._lastActiveElement.focus();\n      }\n    }\n  }\n  PopoverService.ɵfac = function PopoverService_Factory(t) {\n    return new (t || PopoverService)(i0.ɵɵinject(i1$1.Overlay), i0.ɵɵinject(i0.Renderer2), i0.ɵɵinject(i1$1.ViewportRuler), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i2$1.RtlService, 8), i0.ɵɵinject(PopoverContainerDirective, 8));\n  };\n  PopoverService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: PopoverService,\n    factory: PopoverService.ɵfac\n  });\n  return PopoverService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst POPOVER_COMPONENT = new InjectionToken('PopoverInterface');\nlet mobilePopoverUniqueId = 0;\nlet PopoverMobileComponent = /*#__PURE__*/(() => {\n  class PopoverMobileComponent extends MobileModeBase {\n    /** @hidden */\n    get titleId() {\n      return this.id + '-title';\n    }\n    /** @hidden */\n    constructor(elementRef, dialogService, _changeDetectorref, _popoverComponent, mobileModes) {\n      super(elementRef, dialogService, _popoverComponent, MobileModeControl.POPOVER, mobileModes);\n      this._changeDetectorref = _changeDetectorref;\n      /** @hidden\n       * from mobile class can not prefix _,\n       * to avoid build issues\n       */\n      this.childContent = undefined;\n      /** @hidden */\n      this.id = 'fd-popover-mobile-' + mobilePopoverUniqueId++;\n      /** @hidden */\n      this._subscriptions = new Subscription();\n    }\n    /** @hidden */\n    ngOnInit() {\n      this._listenOnPopoverOpenChange();\n      this.title = this.mobileConfig.title || '';\n      this.viewBody = this.childContent?.popoverBodyContentTemplate ?? null;\n      this.viewFooter = this.childContent?.popoverFooterContentTemplate ?? null;\n      this._changeDetectorref.markForCheck();\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this.dialogRef?.close();\n      super.onDestroy();\n      this._subscriptions.unsubscribe();\n    }\n    /** Closes the Dialog and Popover component */\n    close() {\n      this.dialogRef.close();\n      this._component.close();\n    }\n    /** @hidden Opens/closes the Dialog based on Popover isOpenChange events */\n    _listenOnPopoverOpenChange() {\n      this._subscriptions.add(this._component.isOpenChange.pipe(takeUntil(this._onDestroy$)).subscribe(isOpen => {\n        if (isOpen) {\n          this._openDialog();\n        } else {\n          this.dialogRef.hide(true);\n        }\n      }));\n    }\n    /** @hidden Opens the Dialog */\n    _openDialog() {\n      this.dialogRef = this._dialogService.open(this._dialogTemplate, {\n        verticalPadding: true,\n        horizontalPadding: true,\n        ...this.dialogConfig,\n        mobile: true,\n        focusTrapped: true,\n        escKeyCloseable: false,\n        backdropClickCloseable: false,\n        container: this._elementRef.nativeElement,\n        responsivePadding: true,\n        ariaLabelledBy: this.titleId\n      });\n    }\n  }\n  PopoverMobileComponent.ɵfac = function PopoverMobileComponent_Factory(t) {\n    return new (t || PopoverMobileComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1$2.DialogService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(POPOVER_COMPONENT), i0.ɵɵdirectiveInject(MOBILE_MODE_CONFIG, 8));\n  };\n  PopoverMobileComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: PopoverMobileComponent,\n    selectors: [[\"fd-popover-mobile\"]],\n    viewQuery: function PopoverMobileComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c3, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._dialogTemplate = _t.first);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[\"dialogTemplate\", \"\"], [3, \"dialogConfig\", \"dialogRef\"], [\"fd-title\", \"\", 3, \"id\"], [\"fd-dialog-close-button\", \"\", 3, \"click\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\"], [4, \"ngIf\"], [\"fd-dialog-close-button\", \"\", 3, \"click\"]],\n    template: function PopoverMobileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, PopoverMobileComponent_ng_template_0_Template, 8, 7, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    dependencies: [i2.NgIf, i2.NgTemplateOutlet, i1$2.DialogComponent, i1$2.DialogBodyComponent, i1$2.DialogFooterComponent, i1$2.DialogHeaderComponent, i1$2.DialogCloseButtonComponent, i3$1.TitleComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return PopoverMobileComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PopoverMobileModule = /*#__PURE__*/(() => {\n  class PopoverMobileModule {}\n  PopoverMobileModule.ɵfac = function PopoverMobileModule_Factory(t) {\n    return new (t || PopoverMobileModule)();\n  };\n  PopoverMobileModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: PopoverMobileModule\n  });\n  PopoverMobileModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DynamicComponentService],\n    imports: [CommonModule, DialogModule, ButtonModule]\n  });\n  return PopoverMobileModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst FD_POPOVER_COMPONENT = new InjectionToken('FdPopoverComponent');\nconst SELECT_CLASS_NAMES = {\n  selectControl: 'fd-select__control'\n};\nlet cdkPopoverUniqueId = 0;\n/**\n * The popover is a wrapping component that accepts a *control* as well as a *body*.\n * The control is what will trigger the opening of the actual popover, which is called the body.\n * By default, popovers are triggered by click. This can be customized through the *triggers* input.\n */\nlet PopoverComponent = /*#__PURE__*/(() => {\n  class PopoverComponent extends BasePopoverClass {\n    /** Reference to popover trigger element */\n    set trigger(trigger) {\n      if (equal(trigger, this._trigger)) {\n        return;\n      }\n      this._trigger = trigger;\n      this._popoverService.updateTriggerElement(this._trigger);\n    }\n    get trigger() {\n      return this._trigger;\n    }\n    /** @hidden */\n    constructor(_popoverService, _cdr, _rendered, _viewContainerRef, _injector, _dynamicComponentService) {\n      super();\n      this._popoverService = _popoverService;\n      this._cdr = _cdr;\n      this._rendered = _rendered;\n      this._viewContainerRef = _viewContainerRef;\n      this._injector = _injector;\n      this._dynamicComponentService = _dynamicComponentService;\n      /** Whether position shouldn't change, when popover approach the corner of page */\n      this.fixedPosition = false;\n      /** Id of the popover. If none is provided, one will be generated. */\n      this.id = 'fd-popover-' + cdkPopoverUniqueId++;\n      /** Whether the popover component should be displayed in mobile mode. */\n      this.mobile = false;\n      /** Config for the popover in mobile mode */\n      this.mobileConfig = {\n        hasCloseButton: true\n      };\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      if (!this.mobile) {\n        if (!this.popoverBody) {\n          this._popoverService.templateContent = this.templateRef;\n        }\n        this._popoverService.initialise(this.trigger || this.triggerOrigin.elementRef, this, this.popoverBody ? {\n          template: this.templateRef,\n          container: this.container,\n          popoverBody: this.popoverBody\n        } : null);\n      }\n      this._setupView();\n    }\n    /** @hidden */\n    ngAfterContentInit() {\n      if (this.popoverControl && this.triggers.includes('click')) {\n        this.popoverControl._tabbable = true;\n      }\n    }\n    /** @hidden */\n    ngOnChanges() {\n      this._popoverService.refreshConfiguration(this);\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._destroyMobileComponent();\n      this._destroyEventListeners();\n      this._popoverService.onDestroy();\n    }\n    /** @hidden */\n    onKeyDown(event) {\n      const activeElement = document.activeElement;\n      if (\n      // popoverControl will be undefined when popover is used from \"fdPopoverTrigger\"\n      this.popoverControl?.elRef.nativeElement.children[0] === activeElement && activeElement?.tagName !== 'INPUT' && activeElement?.tagName !== 'TEXTAREA' && !activeElement?.classList.contains(SELECT_CLASS_NAMES.selectControl)) {\n        if (KeyUtil.isKeyCode(event, [SPACE, ENTER])) {\n          // prevent page scrolling on Space keydown\n          event.preventDefault();\n          this._popoverService.toggle();\n        }\n      }\n    }\n    /** Toggles menu open/close state */\n    toggle() {\n      if (this.isOpen) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n    /** Opens the popover. */\n    open() {\n      this.isOpen = true;\n      this._popoverService.open();\n      this.isOpenChange.emit(this.isOpen);\n      this._cdr.markForCheck();\n    }\n    /** Closes the popover. */\n    close(focusActiveElement = true) {\n      this.isOpen = false;\n      this._popoverService.close(focusActiveElement);\n      this.isOpenChange.emit(this.isOpen);\n      this._cdr.markForCheck();\n    }\n    /**\n     * Method called to change position of popover,\n     * recommended to be used only when popover is opened, otherwise change position or cdkPlacement\n     */\n    applyNewPosition(positions) {\n      this._popoverService.applyNewPosition(positions);\n    }\n    /** @deprecated\n     * Left for backward compatibility\n     */\n    updatePopover() {\n      this.refreshPosition();\n    }\n    /** Method called to refresh position of opened popover */\n    refreshPosition() {\n      this._popoverService.refreshPosition();\n    }\n    /** Handler for alt + arrow down keydown */\n    triggerKeyDownHandler(event) {\n      if (KeyUtil.isKeyCode(event, DOWN_ARROW) && event.altKey && !this.disabled) {\n        this.open();\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n    /** @hidden Select and instantiate popover view mode */\n    _setupView() {\n      if (this.mobile) {\n        this._setupMobileMode();\n      }\n      this._cdr.detectChanges();\n    }\n    /** @hidden Open Popover in mobile mode */\n    _setupMobileMode() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const injector = Injector.create({\n          providers: [{\n            provide: POPOVER_COMPONENT,\n            useValue: _this\n          }],\n          parent: _this._injector\n        });\n        _this._mobileModeComponentRef = yield _this._dynamicComponentService.createDynamicModule({\n          popoverBodyContentTemplate: _this.popoverBodyContentTemplate,\n          popoverFooterContentTemplate: _this.popoverFooterContentTemplate\n        }, PopoverMobileModule, PopoverMobileComponent, _this._viewContainerRef, injector);\n        _this._listenOnTriggerRefClicks();\n      })();\n    }\n    /** @hidden - Listen on popover trigger ref clicks */\n    _listenOnTriggerRefClicks() {\n      this._destroyEventListeners();\n      if (this.trigger && this.mobile) {\n        this._clickEventListener = this._rendered.listen(this.trigger.nativeElement, 'click', () => this.toggle());\n      }\n    }\n    /**\n     * @hidden\n     * This is going to be removed in feature, on dialog and dynamic service component refactor\n     */\n    _destroyEventListeners() {\n      if (this._clickEventListener) {\n        this._clickEventListener();\n        this._clickEventListener = null;\n      }\n    }\n    /** @hidden */\n    _destroyMobileComponent() {\n      if (this._mobileModeComponentRef) {\n        this._mobileModeComponentRef.destroy();\n      }\n    }\n  }\n  PopoverComponent.ɵfac = function PopoverComponent_Factory(t) {\n    return new (t || PopoverComponent)(i0.ɵɵdirectiveInject(PopoverService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i2$1.DynamicComponentService, 8));\n  };\n  PopoverComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: PopoverComponent,\n    selectors: [[\"fd-popover\"]],\n    contentQueries: function PopoverComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, PopoverBodyComponent, 5);\n        i0.ɵɵcontentQuery(dirIndex, PopoverControlComponent, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c4, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c5, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popoverBody = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popoverControl = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popoverBodyContentTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popoverFooterContentTemplate = _t.first);\n      }\n    },\n    viewQuery: function PopoverComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c6, 5, TemplateRef);\n        i0.ɵɵviewQuery(_c7, 5, ViewContainerRef);\n        i0.ɵɵviewQuery(CdkOverlayOrigin, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.triggerOrigin = _t.first);\n      }\n    },\n    hostAttrs: [1, \"fd-popover-custom\"],\n    hostVars: 3,\n    hostBindings: function PopoverComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function PopoverComponent_keydown_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.id);\n        i0.ɵɵclassProp(\"fd-popover-custom--mobile\", ctx.mobile);\n      }\n    },\n    inputs: {\n      title: \"title\",\n      trigger: \"trigger\",\n      fixedPosition: \"fixedPosition\",\n      id: \"id\",\n      mobile: \"mobile\",\n      mobileConfig: \"mobileConfig\"\n    },\n    features: [i0.ɵɵProvidersFeature([PopoverService, {\n      provide: FD_POPOVER_COMPONENT,\n      useExisting: PopoverComponent\n    }, contentDensityObserverProviders()]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c9,\n    decls: 5,\n    vars: 1,\n    consts: [[\"cdkOverlayOrigin\", \"\", \"class\", \"fd-popover__control\", 3, \"class\", \"keydown\", 4, \"ngIf\"], [\"templateRef\", \"\"], [\"container\", \"\"], [\"cdkOverlayOrigin\", \"\", 1, \"fd-popover__control\", 3, \"keydown\"]],\n    template: function PopoverComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c8);\n        i0.ɵɵtemplate(0, PopoverComponent_div_0_Template, 2, 2, \"div\", 0);\n        i0.ɵɵtemplate(1, PopoverComponent_ng_template_1_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementContainer(3, null, 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.trigger);\n      }\n    },\n    dependencies: [i2.NgIf, i1$1.CdkOverlayOrigin],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return PopoverComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PopoverTriggerDirective = /*#__PURE__*/(() => {\n  class PopoverTriggerDirective {\n    /** Set reference to Popover Component */\n    set popover(popover) {\n      if (popover) {\n        popover.trigger = this._elementRef;\n        this._listenOnExpanded(popover);\n      }\n      this._setAriaAttributes(popover);\n    }\n    /** @hidden */\n    constructor(_elementRef) {\n      this._elementRef = _elementRef;\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._unsubscribeExpandedListener();\n    }\n    /** @hidden */\n    _listenOnExpanded(popover) {\n      this._unsubscribeExpandedListener();\n      if (popover) {\n        this._isExpandedSubscription = popover.isOpenChange.pipe(startWith(popover.isOpen)).subscribe(isOpen => this.ariaExpanded = isOpen);\n      }\n    }\n    /** @hidden */\n    _setAriaAttributes(popover) {\n      this.ariaHasPopup = !!popover;\n      this.ariaControls = popover ? popover.id : null;\n    }\n    /** @hidden */\n    _unsubscribeExpandedListener() {\n      if (this._isExpandedSubscription) {\n        this._isExpandedSubscription.unsubscribe();\n      }\n    }\n  }\n  PopoverTriggerDirective.ɵfac = function PopoverTriggerDirective_Factory(t) {\n    return new (t || PopoverTriggerDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  PopoverTriggerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: PopoverTriggerDirective,\n    selectors: [[\"\", \"fdPopoverTrigger\", \"\"], [\"\", \"fd-popover-trigger\", \"\"]],\n    hostVars: 3,\n    hostBindings: function PopoverTriggerDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-haspopup\", ctx.ariaHasPopup)(\"aria-controls\", ctx.ariaControls)(\"aria-expanded\", ctx.ariaExpanded);\n      }\n    },\n    inputs: {\n      popover: [\"fdPopoverTrigger\", \"popover\"]\n    }\n  });\n  return PopoverTriggerDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PopoverModule = /*#__PURE__*/(() => {\n  class PopoverModule {}\n  PopoverModule.ɵfac = function PopoverModule_Factory(t) {\n    return new (t || PopoverModule)();\n  };\n  PopoverModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: PopoverModule\n  });\n  PopoverModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, OverlayModule, A11yModule, ScrollbarModule]\n  });\n  return PopoverModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePopoverClass, FD_POPOVER_COMPONENT, POPOVER_COMPONENT, PopoverBodyComponent, PopoverBodyFooterDirective, PopoverBodyHeaderDirective, PopoverComponent, PopoverContainerDirective, PopoverControlComponent, PopoverMobileComponent, PopoverMobileModule, PopoverModule, PopoverService, PopoverTriggerDirective, SELECT_CLASS_NAMES };\n//# sourceMappingURL=fundamental-ngx-core-popover.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}