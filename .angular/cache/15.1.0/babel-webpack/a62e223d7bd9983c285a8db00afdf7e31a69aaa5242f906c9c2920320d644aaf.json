{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Inject, HostListener, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ContentChild, ContentChildren, ViewChild, forwardRef, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { LEFT_ARROW, RIGHT_ARROW, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport * as i1$1 from '@fundamental-ngx/cdk/utils';\nimport { KeyUtil } from '@fundamental-ngx/cdk/utils';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime, startWith } from 'rxjs/operators';\nimport * as i2 from '@fundamental-ngx/core/content-density';\nimport { contentDensityObserverProviders, DeprecatedCompactDirective, CONTENT_DENSITY_DIRECTIVE, ContentDensityModule } from '@fundamental-ngx/core/content-density';\nimport * as i1$2 from '@fundamental-ngx/core/icon';\nimport { IconModule } from '@fundamental-ngx/core/icon';\nfunction MicroProcessFlowItemComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"fd-micro-process-flow__connector--intermediate\", ctx_r0.intermediate);\n  }\n}\nconst _c0 = [\"*\", [[\"\", \"fd-micro-process-flow-intermediary-item\", \"\"]]];\nconst _c1 = [\"*\", \"[fd-micro-process-flow-intermediary-item]\"];\nconst _c2 = [\"wrapperContainer\"];\nconst _c3 = [\"container\"];\nconst _c4 = [\"goNextButton\"];\nfunction MicroProcessFlowComponent_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 6);\n    i0.ɵɵlistener(\"click\", function MicroProcessFlowComponent_a_0_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.goBack());\n    })(\"keypress\", function MicroProcessFlowComponent_a_0_Template_a_keypress_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onKeypressHandler(-1, $event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.previousItemsCount, \"\\n\");\n  }\n}\nfunction MicroProcessFlowComponent_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 7, 8);\n    i0.ɵɵlistener(\"click\", function MicroProcessFlowComponent_a_6_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.goNext());\n    })(\"keypress\", function MicroProcessFlowComponent_a_6_Template_a_keypress_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onKeypressHandler(1, $event));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.nextItemsCount, \"\\n\");\n  }\n}\nconst _c5 = [[[\"fd-micro-process-flow-item\"]]];\nconst _c6 = [\"fd-micro-process-flow-item\"];\nconst MICRO_PROCESS_FLOW = new InjectionToken('Micro process flow component dependency');\nlet MicroProcessFlowFocusableItemDirective = /*#__PURE__*/(() => {\n  class MicroProcessFlowFocusableItemDirective {\n    /** @hidden */\n    constructor(elRef, _microProcessFlow) {\n      this.elRef = elRef;\n      this._microProcessFlow = _microProcessFlow;\n    }\n    /** @hidden */\n    ngOnInit() {\n      this.setFocusable();\n    }\n    /** Sets ability to focus on the element or not. */\n    setFocusable(focusable = false) {\n      this.elRef.nativeElement.setAttribute('tabindex', focusable ? '0' : '-1');\n    }\n    /** Focuses on the element without scrolling it to the viewport */\n    focus(options) {\n      this.elRef.nativeElement.focus(options);\n    }\n    /**\n     * @hidden\n     * Handler for focus events\n     */\n    onFocus() {\n      this._microProcessFlow?.setFocusedElementIndex(this.elRef.nativeElement);\n      this._microProcessFlow?.canItemsReceiveFocus.next(false);\n    }\n    /** @hidden */\n    onBlur() {\n      this._microProcessFlow?.canItemsReceiveFocus.next(true);\n    }\n  }\n  MicroProcessFlowFocusableItemDirective.ɵfac = function MicroProcessFlowFocusableItemDirective_Factory(t) {\n    return new (t || MicroProcessFlowFocusableItemDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MICRO_PROCESS_FLOW, 8));\n  };\n  MicroProcessFlowFocusableItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MicroProcessFlowFocusableItemDirective,\n    selectors: [[\"\", \"fdMicroProcessFlowFocusableItem\", \"\"], [\"\", \"fd-micro-process-flow-focusable-item\", \"\"]],\n    hostAttrs: [1, \"fd-micro-process-flow__focusable-item\"],\n    hostBindings: function MicroProcessFlowFocusableItemDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MicroProcessFlowFocusableItemDirective_focus_HostBindingHandler() {\n          return ctx.onFocus();\n        })(\"blur\", function MicroProcessFlowFocusableItemDirective_blur_HostBindingHandler() {\n          return ctx.onBlur();\n        });\n      }\n    }\n  });\n  return MicroProcessFlowFocusableItemDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MicroProcessFlowItemComponent = /*#__PURE__*/(() => {\n  class MicroProcessFlowItemComponent {\n    /** @hidden */\n    constructor(_cd, elRef) {\n      this._cd = _cd;\n      this.elRef = elRef;\n      /** Item state */\n      this.state = 'none';\n      /** Whether or not display connector line */\n      this.intermediate = false;\n      /** @hidden */\n      this._lastItem = false;\n    }\n    /**\n     * @param value Is current item the last one\n     */\n    setLastItem(value) {\n      if (value !== this._lastItem) {\n        this._lastItem = value;\n        this._cd.detectChanges();\n      }\n    }\n  }\n  MicroProcessFlowItemComponent.ɵfac = function MicroProcessFlowItemComponent_Factory(t) {\n    return new (t || MicroProcessFlowItemComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  MicroProcessFlowItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MicroProcessFlowItemComponent,\n    selectors: [[\"fd-micro-process-flow-item\"]],\n    contentQueries: function MicroProcessFlowItemComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MicroProcessFlowFocusableItemDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.focusableElement = _t.first);\n      }\n    },\n    hostAttrs: [1, \"fd-micro-process-flow__item\"],\n    hostVars: 8,\n    hostBindings: function MicroProcessFlowItemComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-micro-process-flow__item--positive\", ctx.state === \"positive\")(\"fd-micro-process-flow__item--critical\", ctx.state === \"critical\")(\"fd-micro-process-flow__item--negative\", ctx.state === \"negative\")(\"fd-micro-process-flow__item--information\", ctx.state === \"information\");\n      }\n    },\n    inputs: {\n      state: \"state\",\n      intermediate: \"intermediate\"\n    },\n    ngContentSelectors: _c1,\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"fd-micro-process-flow__content\"], [1, \"fd-micro-process-flow__content-wrapper\"], [\"class\", \"fd-micro-process-flow__connector\", 3, \"fd-micro-process-flow__connector--intermediate\", 4, \"ngIf\"], [1, \"fd-micro-process-flow__connector\"]],\n    template: function MicroProcessFlowItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, MicroProcessFlowItemComponent_div_3_Template, 2, 2, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx._lastItem);\n      }\n    },\n    dependencies: [i1.NgIf],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MicroProcessFlowItemComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MicroProcessFlowComponent = /*#__PURE__*/(() => {\n  class MicroProcessFlowComponent {\n    /** Should show next button. */\n    get showNextButton() {\n      return this.nextItemsCount > 0;\n    }\n    /** Should show previous button. */\n    get showPreviousButton() {\n      return this.previousItemsCount > 0;\n    }\n    /** @hidden */\n    get _paginationDirection() {\n      return this._isRtl ? 1 : -1;\n    }\n    /** @hidden */\n    constructor(_cd, _rtl, _contentDensityObserver) {\n      this._cd = _cd;\n      this._rtl = _rtl;\n      this._contentDensityObserver = _contentDensityObserver;\n      /** Should connector between items be hidden. */\n      this.independentSteps = false;\n      /** Pagination transition speed in milliseconds */\n      this.transitionSpeed = 300;\n      /** Pagination transition effect */\n      this.transitionTimingFunction = 'ease';\n      /**\n       * Previous items outside the viewport.\n       */\n      this.previousItemsCount = 0;\n      /**\n       * Next items outside the viewport.\n       */\n      this.nextItemsCount = 0;\n      /** Indicating whether or not any element is focused */\n      this.canItemsReceiveFocus = new Subject();\n      /** @hidden */\n      this._isRtl = false;\n      /** @hidden */\n      this._subscriptions = new Subscription();\n      /** @hidden */\n      this._navigationKeys = [LEFT_ARROW, RIGHT_ARROW];\n      /** @hidden */\n      this._actionKeys = [SPACE, ENTER];\n      /** @hidden */\n      this._focusedElementIndex = -1;\n      _contentDensityObserver.subscribe();\n    }\n    /** @hidden */\n    ngOnInit() {\n      // If any element is currently focused, disable ability to navigate bentween items with tab.\n      this._subscriptions.add(this.canItemsReceiveFocus.pipe(debounceTime(10)).subscribe(value => {\n        if (value) {\n          this._setFocusableVisibleItems();\n        } else {\n          this._disableFocusableItems();\n        }\n      }));\n      if (this._rtl) {\n        this._subscriptions.add(this._rtl.rtl.subscribe(value => {\n          this._isRtl = value;\n          if (this.showPreviousButton) {\n            this._paginate(0);\n          }\n        }));\n      }\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      this.listenOnItemsChange();\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._subscriptions.unsubscribe();\n    }\n    /** @hidden */\n    handleKeyboardEvent(event) {\n      if (KeyUtil.isKeyCode(event, this._navigationKeys)) {\n        const isRightKey = KeyUtil.isKeyCode(event, RIGHT_ARROW);\n        const direction = isRightKey ? 1 : -1;\n        event.stopImmediatePropagation();\n        const elementIndexToScroll = this._getPreviousItemsCount() + direction;\n        const elementExists = this.items.get(elementIndexToScroll);\n        if (!elementExists) {\n          return;\n        }\n        this.previousItemsCount = 0;\n        this._paginate(elementIndexToScroll);\n        // Force browset not to scroll to the element since it's done with pagination function.\n        this.items.get(this._getPreviousItemsCount())?.focusableElement?.focus({\n          preventScroll: true\n        });\n      }\n    }\n    /** Listens on items change and checks if navigation buttons should be visible. */\n    listenOnItemsChange() {\n      this._subscriptions.add(this.items.changes.pipe(startWith(0)).subscribe(() => {\n        this.items.forEach(item => {\n          item.setLastItem(false);\n        });\n        this.items.last?.setLastItem(true);\n        this._setNavigationButtons();\n        this._paginate(0);\n      }));\n    }\n    /** Scrolls to the next item. */\n    goNext() {\n      this._paginate();\n    }\n    /** Scrolls to the previous item. */\n    goBack() {\n      this._paginate(-1);\n    }\n    /**\n     * Checks if navigation buttons should be visible depending on the amount of items\n     * and current pagination offset.\n     */\n    _setNavigationButtons() {\n      if (this._container === undefined) {\n        return;\n      }\n      const containerWidth = this._container.nativeElement.offsetWidth;\n      const itemsWidth = this._wrapperContainer.nativeElement.offsetWidth;\n      const nextButtonWidth = this._goNextButton?.nativeElement.offsetWidth || 0;\n      if (itemsWidth < containerWidth) {\n        return;\n      }\n      // Skip previously shown items out of the calculation.\n      const itemsToDisplay = this.items.toArray().slice(this.previousItemsCount).map(i => i.elRef);\n      // Check if all items can be fitted inside the container if we remove 'next' button.\n      if (this.previousItemsCount > 0) {\n        const remainingWidth = itemsToDisplay.reduce((width, elm) => elm.nativeElement.offsetWidth + width, 0);\n        if (remainingWidth <= nextButtonWidth + containerWidth) {\n          this.nextItemsCount = 0;\n          this._cd.detectChanges();\n          return;\n        }\n      }\n      this._setNextItemsCount(itemsToDisplay, containerWidth);\n      this._cd.detectChanges();\n    }\n    /**\n     * Sets last focused element index.\n     * @param elm Focused HTML element.\n     */\n    setFocusedElementIndex(elm) {\n      this._focusedElementIndex = this.focusableItems.toArray().findIndex(item => item.elRef.nativeElement === elm);\n    }\n    /**\n     * Navigates to a specific page when the user presses 'Space' or 'Enter' key.\n     * @param offset How much items needs to be scrolled relatively to the hidden previous items.\n     * @param event The keyboard event.\n     */\n    onKeypressHandler(offset, event) {\n      if (KeyUtil.isKeyCode(event, this._actionKeys)) {\n        event.preventDefault();\n        this._paginate(offset);\n      }\n    }\n    /**\n     * Calculate how many items are out of the viewport.\n     * @param itemsToDisplay Array of html elements that needs to be shown.\n     * @param containerWidth Width of the parent container to calculate amount of items possible to fit.\n     */\n    _setNextItemsCount(itemsToDisplay, containerWidth) {\n      let visibleItemsWidth = 0;\n      let newVisibleItemsWidth = 0;\n      for (const [index, item] of itemsToDisplay.entries()) {\n        newVisibleItemsWidth = visibleItemsWidth + item.nativeElement.offsetWidth;\n        if (newVisibleItemsWidth <= containerWidth) {\n          visibleItemsWidth = newVisibleItemsWidth;\n        } else {\n          this.nextItemsCount = itemsToDisplay.length - index;\n          break;\n        }\n      }\n    }\n    /**\n     * @hidden\n     * Performs scrolling to the defined element based on the offset argument.\n     * @param offset How much items needs to be scrolled relatively to the hidden previous items.\n     */\n    _paginate(offset = 1) {\n      if (this.items === undefined || this.items.length === 0) {\n        return;\n      }\n      this.previousItemsCount = this._focusedElementIndex = this.previousItemsCount + offset;\n      // We need to set prev button first.\n      this._setNavigationButtons();\n      this._setFocusableVisibleItems();\n      const currentItem = this.items.get(this.previousItemsCount);\n      const containerWidth = this._container.nativeElement.offsetWidth;\n      const wrapperContainerWidth = this._wrapperContainer.nativeElement.offsetWidth;\n      if (!currentItem || containerWidth >= wrapperContainerWidth) {\n        // Cancel pagination and revert previous items count back.\n        this.previousItemsCount = this.previousItemsCount - offset;\n      }\n      const elmOffset = this._getPreviousItemsWidth();\n      this._wrapperContainer.nativeElement.style.transform = `translateX(${elmOffset * this._paginationDirection}px)`;\n      this._setNavigationButtons();\n      this._setFocusableVisibleItems();\n    }\n    /**\n     * @hidden\n     * Calculates total width of previously shown items.\n     * @returns {Number} total width of previously shown items.\n     */\n    _getPreviousItemsWidth() {\n      return this.items.toArray().slice(0, this.previousItemsCount).reduce((width, item) => item.elRef.nativeElement.offsetWidth + width, 0);\n    }\n    /** @hidden */\n    _disableFocusableItems() {\n      this.items.forEach(item => item.focusableElement?.setFocusable(false));\n    }\n    /** @hidden */\n    _setFocusableVisibleItems() {\n      this._disableFocusableItems();\n      const containerWidth = this._container.nativeElement.offsetWidth;\n      const itemsToDisplay = this.items.toArray().slice(this.previousItemsCount);\n      let visibleItemsWidth = 0;\n      let newVisibleItemsWidth = 0;\n      for (const item of itemsToDisplay) {\n        newVisibleItemsWidth = visibleItemsWidth + item.elRef.nativeElement.offsetWidth;\n        if (newVisibleItemsWidth <= containerWidth) {\n          visibleItemsWidth = newVisibleItemsWidth;\n          item.focusableElement?.setFocusable(true);\n        } else {\n          break;\n        }\n      }\n    }\n    /** @hidden */\n    _getPreviousItemsCount() {\n      return this._focusedElementIndex === -1 ? this.previousItemsCount : this._focusedElementIndex;\n    }\n  }\n  MicroProcessFlowComponent.ɵfac = function MicroProcessFlowComponent_Factory(t) {\n    return new (t || MicroProcessFlowComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.RtlService, 8), i0.ɵɵdirectiveInject(i2.ContentDensityObserver));\n  };\n  MicroProcessFlowComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MicroProcessFlowComponent,\n    selectors: [[\"fd-micro-process-flow\"]],\n    contentQueries: function MicroProcessFlowComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MicroProcessFlowItemComponent, 4);\n        i0.ɵɵcontentQuery(dirIndex, MicroProcessFlowFocusableItemDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.focusableItems = _t);\n      }\n    },\n    viewQuery: function MicroProcessFlowComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._wrapperContainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._container = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._goNextButton = _t.first);\n      }\n    },\n    hostAttrs: [1, \"fd-micro-process-flow\"],\n    hostVars: 2,\n    hostBindings: function MicroProcessFlowComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MicroProcessFlowComponent_keydown_HostBindingHandler($event) {\n          return ctx.handleKeyboardEvent($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fd-micro-process-flow--independent-steps\", ctx.independentSteps);\n      }\n    },\n    inputs: {\n      independentSteps: \"independentSteps\",\n      transitionSpeed: \"transitionSpeed\",\n      transitionTimingFunction: \"transitionTimingFunction\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MICRO_PROCESS_FLOW,\n      useExisting: MicroProcessFlowComponent\n    }, contentDensityObserverProviders()])],\n    ngContentSelectors: _c6,\n    decls: 7,\n    vars: 6,\n    consts: [[\"tabindex\", \"0\", \"class\", \"fd-micro-process-flow__link-previous\", \"role\", \"button\", \"type\", \"button\", 3, \"click\", \"keypress\", 4, \"ngIf\"], [1, \"fd-micro-process-flow__overflow-container\"], [\"container\", \"\"], [1, \"fd-micro-process-flow__wrapper\"], [\"wrapperContainer\", \"\"], [\"tabindex\", \"0\", \"class\", \"fd-micro-process-flow__link-next\", \"role\", \"button\", \"type\", \"button\", 3, \"click\", \"keypress\", 4, \"ngIf\"], [\"tabindex\", \"0\", \"role\", \"button\", \"type\", \"button\", 1, \"fd-micro-process-flow__link-previous\", 3, \"click\", \"keypress\"], [\"tabindex\", \"0\", \"role\", \"button\", \"type\", \"button\", 1, \"fd-micro-process-flow__link-next\", 3, \"click\", \"keypress\"], [\"goNextButton\", \"\"]],\n    template: function MicroProcessFlowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c5);\n        i0.ɵɵtemplate(0, MicroProcessFlowComponent_a_0_Template, 2, 1, \"a\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1, 2)(3, \"div\", 3, 4);\n        i0.ɵɵprojection(5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(6, MicroProcessFlowComponent_a_6_Template, 3, 1, \"a\", 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showPreviousButton);\n        i0.ɵɵadvance(3);\n        i0.ɵɵstyleProp(\"transition-duration\", ctx.transitionSpeed + \"ms\")(\"transition-timing-function\", ctx.transitionTimingFunction);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.showNextButton);\n      }\n    },\n    dependencies: [i1.NgIf],\n    styles: [\"/*!\\n * Fundamental Library Styles v0.28.3\\n * Copyright (c) 2023 SAP SE or an SAP affiliate company.\\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/main/LICENSE)\\n */:root{--fdMicro_Process_Flow_Item_Background:var(--sapNeutralBackground);--fdMicro_Process_Flow_Item_Border_Color:var(--sapNeutralBorderColor);--fdMicro_Process_Flow_Item_Hover_Background:var(--fdMicro_Process_Flow_Item_Background);--fdMicro_Process_Flow_Item_Hover_Border_Color:var(--fdMicro_Process_Flow_Item_Border_Color);--fdMicro_Process_Flow_Item_Active_Background:var(--sapHighlightColor);--fdMicro_Process_Flow_Item_Active_Border_Color:var(--sapHighlightColor);--fdMicro_Process_Flow_Item_Width:2.75rem;--fdMicro_Process_Flow_Item_Min_Width:1.875rem;--fdMicro_Process_Flow_Compact_Item_Width:2rem;--fdMicro_Process_Flow_Compact_Item_Min_Width:1.375rem;--fdMicro_Process_Flow_Connector_Width:1.125rem;--fdMicro_Process_Flow_Compact_Connector_Width:.625rem;--fdMicro_Process_Flow_Icon_Font_Size:var(--sapFontLargeSize);--fdMicro_Process_Flow_Visible_items:8;--fdMicro_Process_Flow_Max_Container_Width:calc(var(--fdMicro_Process_Flow_Item_Width)*(var(--fdMicro_Process_Flow_Visible_items) + 1) + .0625rem);--fdMicro_Process_Flow_Compact_Max_Container_Width:calc(var(--fdMicro_Process_Flow_Compact_Item_Width)*(var(--fdMicro_Process_Flow_Visible_items) + 1) + .0625rem)}.fd-micro-process-flow{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);display:flex;flex-direction:row;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;max-width:var(--fdMicro_Process_Flow_Max_Container_Width);padding:0}.fd-micro-process-flow:after,.fd-micro-process-flow:before{box-sizing:inherit;font-size:inherit}.fd-micro-process-flow--independent-steps .fd-micro-process-flow__connector:before{border-color:transparent}.fd-micro-process-flow__wrapper{-webkit-box-sizing:border-box;-webkit-transition-property:-webkit-transform;border:0;box-sizing:border-box;color:var(--sapTextColor);display:flex;flex-direction:row;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:0;transition-property:transform}.fd-micro-process-flow__wrapper:after,.fd-micro-process-flow__wrapper:before{box-sizing:inherit;font-size:inherit}.fd-micro-process-flow__overflow-container{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);display:flex;flex-direction:row;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;overflow:hidden;padding:0;width:100%}.fd-micro-process-flow__overflow-container:after,.fd-micro-process-flow__overflow-container:before{box-sizing:inherit;font-size:inherit}.fd-micro-process-flow__link-next,.fd-micro-process-flow__link-previous{-webkit-box-sizing:border-box;-webkit-box-pack:start;-ms-flex-pack:start;align-items:center;border:0;box-sizing:border-box;color:var(--sapTextColor);color:var(--sapGroup_TitleTextColor);cursor:pointer;display:flex;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;justify-content:flex-start;line-height:var(--sapContent_LineHeight);margin:0;padding:0 .313rem;text-shadow:var(--sapContent_TextShadow)}.fd-micro-process-flow__link-next:after,.fd-micro-process-flow__link-next:before,.fd-micro-process-flow__link-previous:after,.fd-micro-process-flow__link-previous:before{box-sizing:inherit;font-size:inherit}.fd-micro-process-flow__link-next.is-focus,.fd-micro-process-flow__link-next:focus,.fd-micro-process-flow__link-previous.is-focus,.fd-micro-process-flow__link-previous:focus{outline-color:var(--sapContent_FocusColor);outline-offset:-.1875rem;outline-style:var(--sapContent_FocusStyle);outline-width:var(--sapContent_FocusWidth)}.fd-micro-process-flow__link-next:after,.fd-micro-process-flow__link-next:before,.fd-micro-process-flow__link-previous:after,.fd-micro-process-flow__link-previous:before{-webkit-box-pack:center;-ms-flex-pack:center;align-items:center;color:var(--sapButton_TextColor);display:flex;font-family:SAP-icons;justify-content:center;text-align:center;text-decoration:inherit;text-rendering:optimizeLegibility;text-transform:none}.fd-micro-process-flow__link-next.is-hover:after,.fd-micro-process-flow__link-next.is-hover:before,.fd-micro-process-flow__link-next:hover:after,.fd-micro-process-flow__link-next:hover:before,.fd-micro-process-flow__link-previous.is-hover:after,.fd-micro-process-flow__link-previous.is-hover:before,.fd-micro-process-flow__link-previous:hover:after,.fd-micro-process-flow__link-previous:hover:before{color:var(--sapButton_Hover_TextColor)}.fd-micro-process-flow__link-previous:before{content:\\\"\\\\e067\\\";padding-right:.313rem}.fd-micro-process-flow__link-previous[dir=rtl]:before,[dir=rtl] .fd-micro-process-flow__link-previous:before{content:\\\"\\\\e066\\\";padding-left:.313rem;padding-right:0}.fd-micro-process-flow__link-next{justify-content:flex-end}.fd-micro-process-flow__link-next:after{content:\\\"\\\\e066\\\";padding-left:.313rem}.fd-micro-process-flow__link-next[dir=rtl]:after,[dir=rtl] .fd-micro-process-flow__link-next:after{content:\\\"\\\\e067\\\";padding-left:0;padding-right:.313rem}.fd-micro-process-flow .fd-micro-process-flow__item{-webkit-box-sizing:border-box;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-box-align:stretch;-ms-flex-align:stretch;-webkit-box-pack:start;-ms-flex-pack:start;align-items:stretch;border:0;box-sizing:border-box;color:var(--sapTextColor);display:flex;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;justify-content:center;justify-content:flex-start;line-height:var(--sapContent_LineHeight);margin:0;margin:calc(var(--sapContent_FocusWidth) + var(--sapContent_FocusWidth)) 0;padding:0 0 0 .1875rem;position:relative}.fd-micro-process-flow .fd-micro-process-flow__item:after,.fd-micro-process-flow .fd-micro-process-flow__item:before{box-sizing:inherit;font-size:inherit}.fd-micro-process-flow .fd-micro-process-flow__item--positive{--fdMicro_Process_Flow_Item_Background:var(--sapPositiveElementColor);--fdMicro_Process_Flow_Item_Border_Color:var(--sapPositiveElementColor);--fdMicro_Process_Flow_Item_Hover_Background:var(--sapButton_Success_Hover_Background);--fdMicro_Process_Flow_Item_Hover_Border_Color:var(--sapButton_Success_Hover_Background);--fdMicro_Process_Flow_Item_Active_Background:var(--sapHighlightColor);--fdMicro_Process_Flow_Item_Active_Border_Color:var(--sapHighlightColor);--fdMicro_Process_Flow_Icon_Color:var(--fdMicro_Process_Flow_Active_Icon_Color)}.fd-micro-process-flow .fd-micro-process-flow__item--information{--fdMicro_Process_Flow_Item_Background:var(--sapInformativeElementColor);--fdMicro_Process_Flow_Item_Border_Color:var(--sapInformativeElementColor);--fdMicro_Process_Flow_Item_Hover_Background:var(--sapButton_Information_Hover_Background);--fdMicro_Process_Flow_Item_Hover_Border_Color:var(--sapButton_Information_Hover_Background);--fdMicro_Process_Flow_Item_Active_Background:var(--sapHighlightColor);--fdMicro_Process_Flow_Item_Active_Border_Color:var(--sapHighlightColor);--fdMicro_Process_Flow_Icon_Color:var(--fdMicro_Process_Flow_Active_Icon_Color)}.fd-micro-process-flow .fd-micro-process-flow__item--negative{--fdMicro_Process_Flow_Item_Background:var(--sapNegativeElementColor);--fdMicro_Process_Flow_Item_Border_Color:var(--sapNegativeElementColor);--fdMicro_Process_Flow_Item_Hover_Background:var(--sapButton_Negative_Hover_Background);--fdMicro_Process_Flow_Item_Hover_Border_Color:var(--sapButton_Negative_Hover_Background);--fdMicro_Process_Flow_Item_Active_Background:var(--sapHighlightColor);--fdMicro_Process_Flow_Item_Active_Border_Color:var(--sapHighlightColor);--fdMicro_Process_Flow_Icon_Color:var(--fdMicro_Process_Flow_Active_Icon_Color)}.fd-micro-process-flow .fd-micro-process-flow__item--critical{--fdMicro_Process_Flow_Item_Background:var(--sapCriticalElementColor);--fdMicro_Process_Flow_Item_Border_Color:var(--sapCriticalElementColor);--fdMicro_Process_Flow_Item_Hover_Background:var(--sapButton_Critical_Hover_Background);--fdMicro_Process_Flow_Item_Hover_Border_Color:var(--sapButton_Critical_Hover_Background);--fdMicro_Process_Flow_Item_Active_Background:var(--sapHighlightColor);--fdMicro_Process_Flow_Item_Active_Border_Color:var(--sapHighlightColor);--fdMicro_Process_Flow_Icon_Color:var(--fdMicro_Process_Flow_Active_Icon_Color)}.fd-micro-process-flow .fd-micro-process-flow__item[dir=rtl],[dir=rtl] .fd-micro-process-flow .fd-micro-process-flow__item{padding-left:0;padding-right:.1875rem}.fd-micro-process-flow .fd-micro-process-flow__item .fd-status-indicator .fdstatus-indicator__svg{width:auto}.fd-micro-process-flow__focusable-item.is-focus,.fd-micro-process-flow__focusable-item:focus{outline-color:var(--sapContent_FocusColor);outline-offset:.0625rem;outline-style:var(--sapContent_FocusStyle);outline-width:var(--sapContent_FocusWidth)}.fd-micro-process-flow .fd-micro-process-flow__icon-container{-webkit-box-sizing:border-box;-webkit-box-pack:center;-ms-flex-pack:center;align-items:center;background-color:var(--fdMicro_Process_Flow_Item_Background);border:0;border:.0625rem solid var(--fdMicro_Process_Flow_Item_Border_Color);border-radius:50%;box-sizing:border-box;color:var(--sapTextColor);display:flex;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;justify-content:center;line-height:var(--sapContent_LineHeight);margin:0;min-height:var(--fdMicro_Process_Flow_Item_Min_Width);min-width:var(--fdMicro_Process_Flow_Item_Min_Width);padding:0}.fd-micro-process-flow .fd-micro-process-flow__icon-container:after,.fd-micro-process-flow .fd-micro-process-flow__icon-container:before{box-sizing:inherit;font-size:inherit}.fd-micro-process-flow .fd-micro-process-flow__icon-container .fd-micro-process-flow__icon{color:var(--fdMicro_Process_Flow_Icon_Color);font-size:var(--fdMicro_Process_Flow_Icon_Font_Size)}.fd-micro-process-flow .fd-micro-process-flow__icon-container.is-hover,.fd-micro-process-flow .fd-micro-process-flow__icon-container:hover{--fdMicro_Process_Flow_Item_Background:var(--fdMicro_Process_Flow_Item_Hover_Background);--fdMicro_Process_Flow_Item_Border_Color:var(--fdMicro_Process_Flow_Item_Hover_Border_Color)}.fd-micro-process-flow .fd-micro-process-flow__icon-container.is-active,.fd-micro-process-flow .fd-micro-process-flow__icon-container:active{--fdMicro_Process_Flow_Item_Background:var(--fdMicro_Process_Flow_Item_Active_Background);--fdMicro_Process_Flow_Item_Border_Color:var(--fdMicro_Process_Flow_Item_Active_Border_Color);--fdMicro_Process_Flow_Icon_Color:var(--fdMicro_Process_Flow_Active_Icon_Color)}.fd-micro-process-flow__content{-webkit-box-sizing:border-box;-webkit-box-pack:start;-ms-flex-pack:start;align-items:center;border:0;box-sizing:border-box;color:var(--sapTextColor);display:flex;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;justify-content:flex-start;line-height:var(--sapContent_LineHeight);margin:0;min-height:var(--fdMicro_Process_Flow_Item_Min_Width);min-width:var(--fdMicro_Process_Flow_Item_Min_Width);padding:0;width:100%}.fd-micro-process-flow__content:after,.fd-micro-process-flow__content:before{box-sizing:inherit;font-size:inherit}.fd-micro-process-flow__connector{-webkit-box-sizing:border-box;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-box-align:center;-ms-flex-align:center;-webkit-box-flex:1;-ms-flex-positive:1;align-items:center;border:0;box-sizing:border-box;color:var(--sapTextColor);display:flex;flex-grow:1;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;height:100%;justify-content:center;line-height:var(--sapContent_LineHeight);margin:0 0 0 .1875rem;min-width:var(--fdMicro_Process_Flow_Connector_Width);padding:0;position:relative}.fd-micro-process-flow__connector:after,.fd-micro-process-flow__connector:before{box-sizing:inherit;font-size:inherit}.fd-micro-process-flow__connector[dir=rtl],[dir=rtl] .fd-micro-process-flow__connector{margin-left:0;margin-right:.1875rem}.fd-micro-process-flow__connector:before{border-bottom:.0625rem solid var(--sapContent_ForegroundBorderColor);content:\\\"\\\";display:block;position:absolute;width:100%;z-index:1}.fd-micro-process-flow__connector--intermediate:after{background:var(--sapNegativeElementColor);bottom:0;content:\\\"\\\";display:block;left:50%;margin-left:-.125rem;position:absolute;top:0;width:.25rem;z-index:2}.fd-micro-process-flow__connector .fd-micro-process-flow__intermediary-item{line-height:1;position:relative;z-index:3}.fd-micro-process-flow[class*=-compact],.fd-micro-process-flow[class*=-condensed],[class*=-compact] .fd-micro-process-flow:not([class*=-cozy]),[class*=-condensed] .fd-micro-process-flow:not([class*=-cozy]){--fdMicro_Process_Flow_Item_Min_Width:var(--fdMicro_Process_Flow_Compact_Item_Min_Width);--fdMicro_Process_Flow_Connector_Width:var(--fdMicro_Process_Flow_Compact_Connector_Width);--fdMicro_Process_Flow_Icon_Font_Size:var(--sapFontSmallSize);--fdMicro_Process_Flow_Item_Width:var(--fdMicro_Process_Flow_Compact_Item_Width);--fdMicro_Process_Flow_Max_Container_Width:var(--fdMicro_Process_Flow_Compact_Max_Container_Width)}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MicroProcessFlowComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MicroProcessFlowIconComponent = /*#__PURE__*/(() => {\n  class MicroProcessFlowIconComponent {\n    constructor() {\n      /**\n       * The icon font\n       * Options include: 'SAP-icons', 'BusinessSuiteInAppSymbols' and 'SAP-icons-TNT'\n       */\n      this.font = 'SAP-icons';\n    }\n  }\n  MicroProcessFlowIconComponent.ɵfac = function MicroProcessFlowIconComponent_Factory(t) {\n    return new (t || MicroProcessFlowIconComponent)();\n  };\n  MicroProcessFlowIconComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MicroProcessFlowIconComponent,\n    selectors: [[\"fd-micro-process-flow-icon\"]],\n    hostAttrs: [1, \"fd-micro-process-flow__icon-container\"],\n    inputs: {\n      glyph: \"glyph\",\n      font: \"font\",\n      class: \"class\",\n      ariaLabel: \"ariaLabel\"\n    },\n    decls: 1,\n    vars: 5,\n    consts: [[1, \"fd-micro-process-flow__icon\", 3, \"ariaLabel\", \"glyph\", \"font\"]],\n    template: function MicroProcessFlowIconComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"fd-icon\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.class);\n        i0.ɵɵproperty(\"ariaLabel\", ctx.ariaLabel)(\"glyph\", ctx.glyph)(\"font\", ctx.font);\n      }\n    },\n    dependencies: [i1$2.IconComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MicroProcessFlowIconComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MicroProcessFlowIntermediaryItemDirective = /*#__PURE__*/(() => {\n  class MicroProcessFlowIntermediaryItemDirective {}\n  MicroProcessFlowIntermediaryItemDirective.ɵfac = function MicroProcessFlowIntermediaryItemDirective_Factory(t) {\n    return new (t || MicroProcessFlowIntermediaryItemDirective)();\n  };\n  MicroProcessFlowIntermediaryItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MicroProcessFlowIntermediaryItemDirective,\n    selectors: [[\"\", \"fdMicroProcessFlowIntermediaryItem\", \"\"], [\"\", \"fd-micro-process-flow-intermediary-item\", \"\"]],\n    hostAttrs: [1, \"fd-micro-process-flow__intermediary-item\"]\n  });\n  return MicroProcessFlowIntermediaryItemDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DeprecatedMicroProcessFlowContentDensityDirective = /*#__PURE__*/(() => {\n  class DeprecatedMicroProcessFlowContentDensityDirective extends DeprecatedCompactDirective {\n    /** @hidden */\n    constructor() {\n      super('fd-micro-process-flow');\n    }\n  }\n  DeprecatedMicroProcessFlowContentDensityDirective.ɵfac = function DeprecatedMicroProcessFlowContentDensityDirective_Factory(t) {\n    return new (t || DeprecatedMicroProcessFlowContentDensityDirective)();\n  };\n  DeprecatedMicroProcessFlowContentDensityDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DeprecatedMicroProcessFlowContentDensityDirective,\n    selectors: [[\"fd-micro-process-flow\", \"compact\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CONTENT_DENSITY_DIRECTIVE,\n      useExisting: forwardRef(() => DeprecatedMicroProcessFlowContentDensityDirective)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return DeprecatedMicroProcessFlowContentDensityDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MicroProcessFlowModule = /*#__PURE__*/(() => {\n  class MicroProcessFlowModule {}\n  MicroProcessFlowModule.ɵfac = function MicroProcessFlowModule_Factory(t) {\n    return new (t || MicroProcessFlowModule)();\n  };\n  MicroProcessFlowModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MicroProcessFlowModule\n  });\n  MicroProcessFlowModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, IconModule, ContentDensityModule, ContentDensityModule]\n  });\n  return MicroProcessFlowModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DeprecatedMicroProcessFlowContentDensityDirective, MICRO_PROCESS_FLOW, MicroProcessFlowComponent, MicroProcessFlowFocusableItemDirective, MicroProcessFlowIconComponent, MicroProcessFlowIntermediaryItemDirective, MicroProcessFlowItemComponent, MicroProcessFlowModule };\n//# sourceMappingURL=fundamental-ngx-core-micro-process-flow.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}