{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, EventEmitter, TemplateRef, ElementRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ContentChild, ViewChild, forwardRef, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Subscription, tap, takeUntil } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport * as i5 from '@fundamental-ngx/core/menu';\nimport { MenuComponent, MenuModule } from '@fundamental-ngx/core/menu';\nimport * as i2 from '@fundamental-ngx/core/content-density';\nimport { contentDensityObserverProviders, DeprecatedCompactDirective, CONTENT_DENSITY_DIRECTIVE, ContentDensityModule } from '@fundamental-ngx/core/content-density';\nimport * as i1 from '@fundamental-ngx/cdk/utils';\nimport * as i4 from '@fundamental-ngx/core/button';\nimport { ButtonModule } from '@fundamental-ngx/core/button';\nimport * as i6 from '@fundamental-ngx/i18n';\nimport { I18nModule } from '@fundamental-ngx/i18n';\n\n/**\n * Directive used to identify the template which will populate the main action button.\n * Used to achieve complex buttons that require more than a string.\n *```html\n *    <fd-button-split>\n *        <ng-template fd-button-split-action-title>\n *            <p>Paragraph 1</p>\n *            <p>Paragraph 2</p>\n *        </ng-template>\n *        <fd-menu>\n *             <li fd-menu-item>\n *               <a fd-menu-interactive [routerLink]=\"'/'\">\n *                   <span fd-menu-title>option2</span>\n *               </a>\n *            </li>\n *            <li fd-menu-item>\n *               <a fd-menu-interactive [routerLink]=\"'/'\">\n *                   <span fd-menu-title>option2</span>\n *               </a>\n *            </li>\n *        </fd-menu>\n *    </fd-button-split>\n *</fd-button-split>\n *```\n */\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nconst _c0 = [\"mainActionButton\"];\nconst _c1 = [\"menuActionButton\"];\nfunction SplitButtonComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c2 = [[[\"fd-menu\"]]];\nconst _c3 = [\"fd-menu\"];\nlet SplitButtonActionTitle = /*#__PURE__*/(() => {\n  class SplitButtonActionTitle {}\n  SplitButtonActionTitle.ɵfac = function SplitButtonActionTitle_Factory(t) {\n    return new (t || SplitButtonActionTitle)();\n  };\n  SplitButtonActionTitle.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: SplitButtonActionTitle,\n    selectors: [[\"\", \"fd-split-button-action-title\", \"\"]]\n  });\n  return SplitButtonActionTitle;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst splitButtonTextClass = 'fd-button-split__text';\nconst splitButtonTextClasses = [splitButtonTextClass];\n/**\n * Split Button component, used to enhance standard HTML button and add possibility to put some dropdown with\n * additional options.\n *\n * ```html\n * <fd-split-button>\n *   <fd-menu>\n *       <li fd-menu-item>\n *           <div fd-menu-interactive>\n *               <span fd-menu-title>Option 1</span>\n *           </div>\n *       </li>\n *       <li fd-menu-item>\n *           <div fd-menu-interactive>\n *               <span fd-menu-title>Option 2</span>\n *           </div>\n *       </li>\n *    </fd-menu>\n *</fd-split-button>\n * ```\n */\nlet SplitButtonComponent = /*#__PURE__*/(() => {\n  class SplitButtonComponent {\n    /** @hidden */\n    get typeClass() {\n      return this.fdType ? `fd-button-split--${this.fdType}` : '';\n    }\n    /** @hidden */\n    constructor(_cdRef, _destroy$, _contentDensityObserver, _renderer) {\n      this._cdRef = _cdRef;\n      this._destroy$ = _destroy$;\n      this._contentDensityObserver = _contentDensityObserver;\n      this._renderer = _renderer;\n      /** The icon to include in the button. See the icon page for the list of icons. */\n      this.glyph = 'slim-arrow-down';\n      /** Whether or not the element should keep a fixed width. The width could change if the text changes length. */\n      this.fixedWidth = true;\n      /** Event sent when primary button is clicked */\n      this.primaryButtonClicked = new EventEmitter();\n      /** @hidden */\n      this._menuItemSubscriptions = new Subscription();\n      /** @hidden */\n      this._menuSubscription = new Subscription();\n      /** @hidden */\n      this._contentDensitySubscription = new Subscription();\n      /** @hidden */\n      this._menuActivePathSubscription = new Subscription();\n      /** @hidden */\n      this._addButtonTextClass = compact => {\n        const textSpanElement = this.mainActionBtn?.nativeElement.querySelector('.fd-button__text');\n        if (!textSpanElement) {\n          return;\n        }\n        splitButtonTextClasses.forEach(_class => this._renderer.removeClass(textSpanElement, _class));\n        this._renderer.addClass(textSpanElement, splitButtonTextClass);\n      };\n    }\n    /** @hidden Emits event when main button is clicked */\n    onMainButtonClick(event) {\n      this.primaryButtonClicked.emit(event);\n      if (this.selected) {\n        this.selected.elementRef.nativeElement.click();\n      } else if (this.mainAction && this.mainAction.callback) {\n        this.mainAction.callback();\n      }\n      event.stopPropagation();\n    }\n    /** @hidden */\n    ngAfterContentInit() {\n      this.menu._menuItems.forEach(item => {\n        item.menuInteractive._fromSplitButton = true;\n      });\n      this._setupMenuSubscription();\n      this._setupMenuItemSubscriptions();\n      this._handleMainActionObject();\n      if (!this.mainActionTitle && !this.titleTemplate && !this.selected) {\n        this.selectMenuItem(this.menu._menuItems.first);\n      } else if (!this.mainActionTitle && this.selected) {\n        this.selectMenuItem(this.selected);\n      }\n      this._menuActivePathSubscription.add(this.menu.activePath.subscribe(items => {\n        const lastItem = items[items.length - 1];\n        if (lastItem && !lastItem.submenu) {\n          this.menu.close();\n          this._focusTriggerElement();\n        }\n      }));\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      this._contentDensityObserver.isCompact$.pipe(tap(this._addButtonTextClass), takeUntil(this._destroy$)).subscribe();\n    }\n    /** @hidden */\n    ngOnChanges(changes) {\n      if ('selected' in changes) {\n        this.selectMenuItem(this.selected);\n      }\n      if ('mainAction' in changes) {\n        this._handleMainActionObject();\n      }\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._menuItemSubscriptions.unsubscribe();\n      this._menuSubscription.unsubscribe();\n      this._contentDensitySubscription.unsubscribe();\n      this._menuActivePathSubscription.unsubscribe();\n    }\n    /** Function called to select a menu item for the split button. */\n    selectMenuItem(menuItem) {\n      if (menuItem && (!this.mainAction || !this.mainAction.keepMainAction)) {\n        menuItem.setSelected(true);\n      }\n    }\n    /**\n     * Wrapper gets focused programmatically by menu\n     * when the \"escape\" button is pressed.\n     * In this case we need to transit focus to the \"more actions\" button\n     */\n    _onGroupFocused() {\n      this._focusTriggerElement();\n    }\n    /** @hidden */\n    _getMainButtonWidth() {\n      if (this.mainActionBtn && this.mainActionBtn.nativeElement) {\n        this.mainButtonWidth = this.mainActionBtn.nativeElement.getBoundingClientRect().width + 'px';\n      }\n    }\n    /** @hidden */\n    _setupMenuItemSubscriptions() {\n      this.menu._menuItems.forEach(menuItem => {\n        menuItem.onSelect.pipe(first()).subscribe(() => {\n          if (this.fixedWidth) {\n            this._getMainButtonWidth();\n          }\n        });\n        this._menuItemSubscriptions.add(menuItem.onSelect.subscribe(() => {\n          this._handleMenuItemSelection(menuItem);\n        }));\n      });\n    }\n    /** @hidden */\n    _handleMenuItemSelection(menuItem) {\n      if (!this.mainAction || !this.mainAction.keepMainAction) {\n        this.selected = menuItem;\n        this.menu._menuItems.forEach(item => {\n          item.setSelected(false, true);\n        });\n        menuItem.setSelected(true, true);\n        this.titleTemplate = null;\n        this.mainActionTitle = menuItem.menuItemTitle.title;\n        this._cdRef.detectChanges();\n      }\n    }\n    /** @hidden */\n    _setupMenuSubscription() {\n      this._menuSubscription = this.menu._menuItems.changes.subscribe(() => {\n        this._menuItemSubscriptions.unsubscribe();\n        this._menuItemSubscriptions.closed = false;\n        this._setupMenuItemSubscriptions();\n      });\n      // call markForCheck once menu open state gets changed\n      this._menuSubscription.add(this.menu.isOpenChange.subscribe(() => this._cdRef.markForCheck()));\n    }\n    /** @hidden */\n    _handleMainActionObject() {\n      if (this.mainAction && typeof this.mainAction.mainActionTitle === 'string') {\n        this.mainActionTitle = this.mainAction.mainActionTitle;\n      } else if (this.mainAction && this.mainAction.mainActionTitle instanceof TemplateRef) {\n        this.titleTemplate = this.mainAction.mainActionTitle;\n      }\n    }\n    /** @hidden */\n    _focusTriggerElement() {\n      this.menuActionBtn?.nativeElement.focus();\n    }\n  }\n  SplitButtonComponent.ɵfac = function SplitButtonComponent_Factory(t) {\n    return new (t || SplitButtonComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.DestroyedService), i0.ɵɵdirectiveInject(i2.ContentDensityObserver), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  SplitButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: SplitButtonComponent,\n    selectors: [[\"fd-split-button\"]],\n    contentQueries: function SplitButtonComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, SplitButtonActionTitle, 5, TemplateRef);\n        i0.ɵɵcontentQuery(dirIndex, MenuComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.titleTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menu = _t.first);\n      }\n    },\n    viewQuery: function SplitButtonComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5, ElementRef);\n        i0.ɵɵviewQuery(_c1, 5, ElementRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mainActionBtn = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menuActionBtn = _t.first);\n      }\n    },\n    inputs: {\n      glyph: \"glyph\",\n      disabled: \"disabled\",\n      mainActionTitle: \"mainActionTitle\",\n      fdType: \"fdType\",\n      expandButtonAriaLabel: \"expandButtonAriaLabel\",\n      expandButtonTitle: \"expandButtonTitle\",\n      selected: \"selected\",\n      fixedWidth: \"fixedWidth\",\n      mainAction: \"mainAction\",\n      arialLabel: \"arialLabel\"\n    },\n    outputs: {\n      primaryButtonClicked: \"primaryButtonClicked\"\n    },\n    features: [i0.ɵɵProvidersFeature([contentDensityObserverProviders()]), i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c3,\n    decls: 10,\n    vars: 22,\n    consts: [[\"role\", \"group\", \"tabindex\", \"-1\", 1, \"fd-button-split\", \"fd-has-margin-right-small\", 3, \"ngClass\", \"fdMenuTrigger\", \"focus\"], [\"fd-button\", \"\", 3, \"label\", \"fdType\", \"disabled\", \"click\"], [\"mainActionButton\", \"\"], [4, \"ngTemplateOutlet\"], [\"fd-button\", \"\", 3, \"glyph\", \"fdType\", \"disabled\", \"ariaLabel\"], [\"menuActionButton\", \"\"]],\n    template: function SplitButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c2);\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"focus\", function SplitButtonComponent_Template_div_focus_0_listener() {\n          return ctx._onGroupFocused();\n        });\n        i0.ɵɵpipe(1, \"fdTranslate\");\n        i0.ɵɵelementStart(2, \"button\", 1, 2);\n        i0.ɵɵlistener(\"click\", function SplitButtonComponent_Template_button_click_2_listener($event) {\n          return ctx.onMainButtonClick($event);\n        });\n        i0.ɵɵtemplate(4, SplitButtonComponent_ng_container_4_Template, 1, 0, \"ng-container\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"button\", 4, 5);\n        i0.ɵɵpipe(7, \"fdTranslate\");\n        i0.ɵɵpipe(8, \"fdTranslate\");\n        i0.ɵɵprojection(9);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.typeClass)(\"fdMenuTrigger\", ctx.menu);\n        i0.ɵɵattribute(\"aria-label\", ctx.arialLabel || i0.ɵɵpipeBind1(1, 16, \"coreSplitButton.arialLabel\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"width\", ctx.mainButtonWidth);\n        i0.ɵɵproperty(\"label\", ctx.mainActionTitle)(\"fdType\", ctx.fdType)(\"disabled\", ctx.disabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.titleTemplate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"is-active\", ctx.menu.isOpen);\n        i0.ɵɵproperty(\"glyph\", ctx.glyph)(\"fdType\", ctx.fdType)(\"disabled\", ctx.disabled)(\"ariaLabel\", ctx.expandButtonAriaLabel || i0.ɵɵpipeBind1(7, 18, \"coreSplitButton.expandButtonAriaLabel\"));\n        i0.ɵɵattribute(\"title\", ctx.expandButtonTitle || ctx.expandButtonAriaLabel || i0.ɵɵpipeBind1(8, 20, \"coreSplitButton.expandButtonAriaLabel\"));\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgTemplateOutlet, i4.ButtonComponent, i5.MenuTriggerDirective, i6.FdTranslatePipe],\n    styles: [\"/*!\\n * Fundamental Library Styles v0.28.3\\n * Copyright (c) 2023 SAP SE or an SAP affiliate company.\\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/main/LICENSE)\\n *//*!\\n.fd-button-split\\n    button\\n*/.fd-button-split{--fdButtonSplit_Separator_Offset:2.125rem;-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);display:inline-flex;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:0;position:relative;vertical-align:middle}.fd-button-split:after,.fd-button-split:before{box-sizing:inherit;font-size:inherit}.fd-button-split:before{background:var(--sapButton_Background);border-radius:var(--sapButton_BorderCornerRadius);content:\\\"\\\";display:var(--fdButton_Segmented_Pad_Display);height:100%;left:0;position:absolute;top:0;width:100%}.fd-button-split:after{-webkit-transform:translateY(-50%);background:var(--sapButton_TextColor);content:\\\"\\\";display:var(--fdButton_Menu_Separator_Display);height:var(--fdButton_Menu_Transparent_Separator_Height);margin:0 .125rem;position:absolute;right:var(--fdButtonSplit_Separator_Offset);top:50%;transform:translateY(-50%);width:var(--sapButton_BorderWidth);z-index:10}.fd-button-split.is-hover:after,.fd-button-split:hover:after{display:none}.fd-button-split[dir=rtl]:after,[dir=rtl] .fd-button-split:after{left:var(--fdButtonSplit_Separator_Offset);right:auto}.fd-button-split>button{margin:0}.fd-button-split>button:first-of-type{-webkit-box-align:center;-ms-flex-align:center;-webkit-box-pack:start;-ms-flex-pack:start;align-items:center;border-radius:var(--fdButton_Border_Radius_Left);display:flex;justify-content:flex-start;margin-right:var(--fdButton_Menu_Offset)}.fd-button-split>button:first-of-type[dir=rtl],[dir=rtl] .fd-button-split>button:first-of-type{margin-left:var(--fdButton_Menu_Offset);margin-right:0}.fd-button-split>button:first-of-type.is-focus,.fd-button-split>button:first-of-type:focus{z-index:5}.fd-button-split>button:first-of-type.is-focus:after,.fd-button-split>button:first-of-type:focus:after{border-radius:var(--fdButton_Border_Radius_Outline_Left)}.fd-button-split>button:first-of-type[dir=rtl],[dir=rtl] .fd-button-split>button:first-of-type{border-radius:var(--fdButton_Border_Radius_Left_RTL)}.fd-button-split>button:first-of-type[dir=rtl].is-focus,.fd-button-split>button:first-of-type[dir=rtl]:focus,[dir=rtl] .fd-button-split>button:first-of-type.is-focus,[dir=rtl] .fd-button-split>button:first-of-type:focus{z-index:5}.fd-button-split>button:first-of-type[dir=rtl].is-focus:after,.fd-button-split>button:first-of-type[dir=rtl]:focus:after,[dir=rtl] .fd-button-split>button:first-of-type.is-focus:after,[dir=rtl] .fd-button-split>button:first-of-type:focus:after{border-radius:var(--fdButton_Border_Radius_Outline_Left_RTL)}.fd-button-split>button:nth-of-type(2){border-radius:var(--fdButton_Border_Radius_Right)}.fd-button-split>button:nth-of-type(2).is-focus,.fd-button-split>button:nth-of-type(2):focus{z-index:5}.fd-button-split>button:nth-of-type(2).is-focus:after,.fd-button-split>button:nth-of-type(2):focus:after{border-radius:var(--fdButton_Border_Radius_Outline_Right)}.fd-button-split>button:nth-of-type(2)[dir=rtl],[dir=rtl] .fd-button-split>button:nth-of-type(2){border-radius:var(--fdButton_Border_Radius_Right_RTL)}.fd-button-split>button:nth-of-type(2)[dir=rtl].is-focus,.fd-button-split>button:nth-of-type(2)[dir=rtl]:focus,[dir=rtl] .fd-button-split>button:nth-of-type(2).is-focus,[dir=rtl] .fd-button-split>button:nth-of-type(2):focus{z-index:5}.fd-button-split>button:nth-of-type(2)[dir=rtl].is-focus:after,.fd-button-split>button:nth-of-type(2)[dir=rtl]:focus:after,[dir=rtl] .fd-button-split>button:nth-of-type(2).is-focus:after,[dir=rtl] .fd-button-split>button:nth-of-type(2):focus:after{border-radius:var(--fdButton_Border_Radius_Outline_Right_RTL)}.fd-button-split>button.is-hover,.fd-button-split>button:hover{z-index:1}.fd-button-split--emphasized{position:relative}.fd-button-split--emphasized:before{background:var(--sapButton_Emphasized_Background);border-radius:var(--sapButton_BorderCornerRadius);content:\\\"\\\";display:var(--fdButton_Segmented_Pad_Display);height:100%;left:0;position:absolute;top:0;width:100%}.fd-button-split--emphasized:after{-webkit-transform:translateY(-50%);background:var(--sapButton_Emphasized_TextColor);content:\\\"\\\";display:var(--fdButton_Menu_Separator_Display);height:var(--fdButton_Menu_Transparent_Separator_Height);margin:0 .125rem;position:absolute;right:var(--fdButtonSplit_Separator_Offset);top:50%;transform:translateY(-50%);width:var(--sapButton_BorderWidth);z-index:10}.fd-button-split--emphasized.is-hover:after,.fd-button-split--emphasized:hover:after{display:none}.fd-button-split--emphasized[dir=rtl]:after,[dir=rtl] .fd-button-split--emphasized:after{left:var(--fdButtonSplit_Separator_Offset);right:auto}.fd-button-split--transparent{position:relative}.fd-button-split--transparent:before{background:var(--sapButton_Lite_Background);border-radius:var(--sapButton_BorderCornerRadius);content:\\\"\\\";display:var(--fdButton_Segmented_Pad_Display);height:100%;left:0;position:absolute;top:0;width:100%}.fd-button-split--transparent:after{-webkit-transform:translateY(-50%);background:var(--sapButton_Lite_TextColor);content:\\\"\\\";display:var(--fdButton_Menu_Transparent_Separator_Display);height:var(--fdButton_Menu_Transparent_Separator_Height);margin:0 .125rem;position:absolute;right:var(--fdButtonSplit_Separator_Offset);top:50%;transform:translateY(-50%);width:var(--sapButton_BorderWidth);z-index:10}.fd-button-split--transparent.is-hover:after,.fd-button-split--transparent:hover:after{display:none}.fd-button-split--transparent[dir=rtl]:after,[dir=rtl] .fd-button-split--transparent:after{left:var(--fdButtonSplit_Separator_Offset);right:auto}.fd-button-split--ghost{position:relative}.fd-button-split--ghost:before{background:var(--fdButton_Ghost_Background);border-radius:var(--sapButton_BorderCornerRadius);content:\\\"\\\";display:var(--fdButton_Segmented_Pad_Display);height:100%;left:0;position:absolute;top:0;width:100%}.fd-button-split--ghost:after{-webkit-transform:translateY(-50%);background:var(--sapButton_TextColor);content:\\\"\\\";display:var(--fdButton_Menu_Separator_Display);height:var(--fdButton_Menu_Transparent_Separator_Height);margin:0 .125rem;position:absolute;right:var(--fdButtonSplit_Separator_Offset);top:50%;transform:translateY(-50%);width:var(--sapButton_BorderWidth);z-index:10}.fd-button-split--ghost.is-hover:after,.fd-button-split--ghost:hover:after{display:none}.fd-button-split--ghost[dir=rtl]:after,[dir=rtl] .fd-button-split--ghost:after{left:var(--fdButtonSplit_Separator_Offset);right:auto}.fd-button-split--positive{position:relative}.fd-button-split--positive:before{background:var(--sapButton_Accept_Background);border-radius:var(--sapButton_BorderCornerRadius);content:\\\"\\\";display:var(--fdButton_Segmented_Pad_Display);height:100%;left:0;position:absolute;top:0;width:100%}.fd-button-split--positive:after{-webkit-transform:translateY(-50%);background:var(--sapButton_Accept_TextColor);content:\\\"\\\";display:var(--fdButton_Menu_Separator_Display);height:var(--fdButton_Menu_Transparent_Separator_Height);margin:0 .125rem;position:absolute;right:var(--fdButtonSplit_Separator_Offset);top:50%;transform:translateY(-50%);width:var(--sapButton_BorderWidth);z-index:10}.fd-button-split--positive.is-hover:after,.fd-button-split--positive:hover:after{display:none}.fd-button-split--positive[dir=rtl]:after,[dir=rtl] .fd-button-split--positive:after{left:var(--fdButtonSplit_Separator_Offset);right:auto}.fd-button-split--negative{position:relative}.fd-button-split--negative:before{background:var(--sapButton_Reject_Background);border-radius:var(--sapButton_BorderCornerRadius);content:\\\"\\\";display:var(--fdButton_Segmented_Pad_Display);height:100%;left:0;position:absolute;top:0;width:100%}.fd-button-split--negative:after{-webkit-transform:translateY(-50%);background:var(--sapButton_Reject_TextColor);content:\\\"\\\";display:var(--fdButton_Menu_Separator_Display);height:var(--fdButton_Menu_Transparent_Separator_Height);margin:0 .125rem;position:absolute;right:var(--fdButtonSplit_Separator_Offset);top:50%;transform:translateY(-50%);width:var(--sapButton_BorderWidth);z-index:10}.fd-button-split--negative.is-hover:after,.fd-button-split--negative:hover:after{display:none}.fd-button-split--negative[dir=rtl]:after,[dir=rtl] .fd-button-split--negative:after{left:var(--fdButtonSplit_Separator_Offset);right:auto}.fd-button-split--attention{position:relative}.fd-button-split--attention:before{background:var(--sapButton_Attention_Background);border-radius:var(--sapButton_BorderCornerRadius);content:\\\"\\\";display:var(--fdButton_Segmented_Pad_Display);height:100%;left:0;position:absolute;top:0;width:100%}.fd-button-split--attention:after{-webkit-transform:translateY(-50%);background:var(--sapButton_Attention_TextColor);content:\\\"\\\";display:var(--fdButton_Menu_Separator_Display);height:var(--fdButton_Menu_Transparent_Separator_Height);margin:0 .125rem;position:absolute;right:var(--fdButtonSplit_Separator_Offset);top:50%;transform:translateY(-50%);width:var(--sapButton_BorderWidth);z-index:10}.fd-button-split--attention.is-hover:after,.fd-button-split--attention:hover:after{display:none}.fd-button-split--attention[dir=rtl]:after,[dir=rtl] .fd-button-split--attention:after{left:var(--fdButtonSplit_Separator_Offset);right:auto}.fd-button-split--emphasized>button:first-of-type{margin-right:var(--fdButton_Menu_Emphasized_Margin)}.fd-button-split--emphasized>button:first-of-type[dir=rtl],[dir=rtl] .fd-button-split--emphasized>button:first-of-type{margin-left:var(--fdButton_Menu_Emphasized_Margin);margin-right:0}.fd-button-split .fd-button-split__text{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);color:inherit;display:block;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;max-width:var(--fdButtonSplit_Text_Max_Width, 8.5rem);overflow:hidden;padding:0;text-overflow:ellipsis;white-space:nowrap}.fd-button-split .fd-button-split__text:after,.fd-button-split .fd-button-split__text:before{box-sizing:inherit;font-size:inherit}.fd-button-split[class*=-compact],.fd-button-split[class*=-condensed],[class*=-compact] .fd-button-split:not([class*=-cozy]),[class*=-condensed] .fd-button-split:not([class*=-cozy]){--fdButtonSplit_Text_Max_Width:9rem;--fdButtonSplit_Separator_Offset:1.875rem}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return SplitButtonComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DeprecatedSplitButtonCompactDirective = /*#__PURE__*/(() => {\n  class DeprecatedSplitButtonCompactDirective extends DeprecatedCompactDirective {\n    /** @hidden */\n    constructor() {\n      super('fd-split-button');\n    }\n  }\n  DeprecatedSplitButtonCompactDirective.ɵfac = function DeprecatedSplitButtonCompactDirective_Factory(t) {\n    return new (t || DeprecatedSplitButtonCompactDirective)();\n  };\n  DeprecatedSplitButtonCompactDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DeprecatedSplitButtonCompactDirective,\n    selectors: [[\"fd-split-button\", \"compact\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CONTENT_DENSITY_DIRECTIVE,\n      useExisting: forwardRef(() => DeprecatedSplitButtonCompactDirective)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return DeprecatedSplitButtonCompactDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet SplitButtonModule = /*#__PURE__*/(() => {\n  class SplitButtonModule {}\n  SplitButtonModule.ɵfac = function SplitButtonModule_Factory(t) {\n    return new (t || SplitButtonModule)();\n  };\n  SplitButtonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: SplitButtonModule\n  });\n  SplitButtonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, ButtonModule, MenuModule, ContentDensityModule, I18nModule, ContentDensityModule]\n  });\n  return SplitButtonModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DeprecatedSplitButtonCompactDirective, SplitButtonActionTitle, SplitButtonComponent, SplitButtonModule, splitButtonTextClass };\n//# sourceMappingURL=fundamental-ngx-core-split-button.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}