{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Input, Output, ContentChildren, ViewChild, ContentChild, forwardRef, Directive, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from '@fundamental-ngx/core/button';\nimport * as i7 from '@fundamental-ngx/core/overflow-layout';\nimport { OverflowLayoutComponent, OverflowLayoutModule } from '@fundamental-ngx/core/overflow-layout';\nimport * as i1 from '@fundamental-ngx/cdk/utils';\nimport { DestroyedService, PipeModule } from '@fundamental-ngx/cdk/utils';\nimport { BehaviorSubject, takeUntil } from 'rxjs';\nimport * as i4 from '@fundamental-ngx/core/menu';\nimport { MenuComponent, MenuModule } from '@fundamental-ngx/core/menu';\nimport * as i3 from '@fundamental-ngx/core/icon';\nimport { IconModule } from '@fundamental-ngx/core/icon';\nimport * as i5 from '@fundamental-ngx/core/link';\nimport { FD_LINK_COMPONENT, LinkModule } from '@fundamental-ngx/core/link';\nimport * as i6 from '@angular/cdk/portal';\nimport { DomPortal, PortalModule } from '@angular/cdk/portal';\nimport * as i8 from '@fundamental-ngx/i18n';\nimport { I18nModule } from '@fundamental-ngx/i18n';\nimport { PopoverModule } from '@fundamental-ngx/core/popover';\nimport { DeprecatedCompactDirective, CONTENT_DENSITY_DIRECTIVE, ContentDensityModule } from '@fundamental-ngx/core/content-density';\nfunction BreadcrumbComponent_ng_container_1_div_1_ng_template_1_Template(rf, ctx) {}\nfunction BreadcrumbComponent_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵlistener(\"hiddenChange\", function BreadcrumbComponent_ng_container_1_div_1_Template_div_hiddenChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const breadcrumb_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6._onHiddenChange($event, breadcrumb_r2));\n    });\n    i0.ɵɵtemplate(1, BreadcrumbComponent_ng_container_1_div_1_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const breadcrumb_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cdkPortalOutlet\", breadcrumb_r2.portal);\n  }\n}\nfunction BreadcrumbComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, BreadcrumbComponent_ng_container_1_div_1_Template, 2, 1, \"div\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const breadcrumb_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"fdOverflowItemRef\", breadcrumb_r2);\n  }\n}\nfunction BreadcrumbComponent_ng_container_2_ng_container_4_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"fd-menu-addon\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const breadcrumbItem_r14 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"glyph\", breadcrumbItem_r14.item.breadcrumbLink._prefixIconName);\n  }\n}\nfunction BreadcrumbComponent_ng_container_2_ng_container_4_ng_container_3_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"fd-menu-addon\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const breadcrumbItem_r14 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"glyph\", breadcrumbItem_r14.item.breadcrumbLink._postfixIconName);\n  }\n}\nfunction BreadcrumbComponent_ng_container_2_ng_container_4_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, BreadcrumbComponent_ng_container_2_ng_container_4_ng_container_3_ng_container_1_Template, 2, 1, \"ng-container\", 13);\n    i0.ɵɵelementStart(2, \"span\", 14);\n    i0.ɵɵelementContainer(3, 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, BreadcrumbComponent_ng_container_2_ng_container_4_ng_container_3_ng_container_4_Template, 2, 1, \"ng-container\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const breadcrumbItem_r14 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", breadcrumbItem_r14.item.breadcrumbLink._prefixIconName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"cdkPortalOutlet\", breadcrumbItem_r14.item.linkContentPortal);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", breadcrumbItem_r14.item.breadcrumbLink._postfixIconName);\n  }\n}\nfunction BreadcrumbComponent_ng_container_2_ng_container_4_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵelementContainer(1, 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const breadcrumbItem_r14 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cdkPortalOutlet\", breadcrumbItem_r14.item.breadcrumbItemPortal);\n  }\n}\nfunction BreadcrumbComponent_ng_container_2_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\", 9)(2, \"a\", 10);\n    i0.ɵɵlistener(\"click\", function BreadcrumbComponent_ng_container_2_ng_container_4_Template_a_click_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const breadcrumbItem_r14 = restoredCtx.$implicit;\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r24.itemClicked(breadcrumbItem_r14.item, $event));\n    })(\"keydown.enter\", function BreadcrumbComponent_ng_container_2_ng_container_4_Template_a_keydown_enter_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const breadcrumbItem_r14 = restoredCtx.$implicit;\n      const ctx_r26 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r26.itemClicked(breadcrumbItem_r14.item, $event));\n    })(\"keydown.space\", function BreadcrumbComponent_ng_container_2_ng_container_4_Template_a_keydown_space_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const breadcrumbItem_r14 = restoredCtx.$implicit;\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r27.itemClicked(breadcrumbItem_r14.item, $event));\n    });\n    i0.ɵɵtemplate(3, BreadcrumbComponent_ng_container_2_ng_container_4_ng_container_3_Template, 5, 3, \"ng-container\", 11);\n    i0.ɵɵtemplate(4, BreadcrumbComponent_ng_container_2_ng_container_4_ng_template_4_Template, 2, 1, \"ng-template\", null, 12, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const breadcrumbItem_r14 = ctx.$implicit;\n    const _r16 = i0.ɵɵreference(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", breadcrumbItem_r14.item.breadcrumbLink ? breadcrumbItem_r14.item.breadcrumbLink.disabled : false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", breadcrumbItem_r14 == null ? null : breadcrumbItem_r14.item.breadcrumbLink)(\"ngIfElse\", _r16);\n  }\n}\nfunction BreadcrumbComponent_ng_container_2_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 17)(1, \"a\", 18);\n    i0.ɵɵlistener(\"keydown.enter\", function BreadcrumbComponent_ng_container_2_span_5_Template_a_keydown_enter_1_listener($event) {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r28._keyDownHandle($event));\n    })(\"keydown.space\", function BreadcrumbComponent_ng_container_2_span_5_Template_a_keydown_space_1_listener($event) {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r30._keyDownHandle($event));\n    });\n    i0.ɵɵpipe(2, \"fdTranslate\");\n    i0.ɵɵelement(3, \"fd-icon\", 19);\n    i0.ɵɵpipe(4, \"fdTranslate\");\n    i0.ɵɵpipe(5, \"fdTranslate\");\n    i0.ɵɵelement(6, \"fd-icon\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r11 = i0.ɵɵreference(2);\n    i0.ɵɵproperty(\"fdMenuTrigger\", _r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(2, 4, \"coreBreadcrumb.overflowTitleMore\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"title\", i0.ɵɵpipeBind1(4, 6, \"coreBreadcrumb.overflowTitleMore\"))(\"ariaLabel\", i0.ɵɵpipeBind1(5, 8, \"coreBreadcrumb.overflowTitleMore\"));\n  }\n}\nfunction BreadcrumbComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"fd-menu\", 6, 7);\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵtemplate(4, BreadcrumbComponent_ng_container_2_ng_container_4_Template, 6, 3, \"ng-container\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, BreadcrumbComponent_ng_container_2_span_5_Template, 7, 10, \"span\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const breadcrumbs_r10 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"closeOnEscapeKey\", true)(\"focusAutoCapture\", true)(\"placement\", i0.ɵɵpipeBind1(3, 5, ctx_r1._placement$));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", breadcrumbs_r10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", breadcrumbs_r10.length > 0);\n  }\n}\nconst _c0 = [\"*\"];\nconst FD_BREADCRUMB_ITEM_COMPONENT = new InjectionToken('FdBreadcrumbItemComponent');\nconst FD_BREADCRUMB_COMPONENT = new InjectionToken('FdBreadcrumbComponent');\n\n/**\n * Breadcrumb parent wrapper directive. Must have breadcrumb item child directives.\n *\n * ```html\n * <fd-breadcrumb>\n *     <fd-breadcrumb-item>\n *         <a fd-link [routerLink]=\"'#'\">Breadcrumb Link</a>\n *     </fd-breadcrumb-item>\n * </fd-breadcrumb>\n * ```\n */\nlet BreadcrumbComponent = /*#__PURE__*/(() => {\n  class BreadcrumbComponent {\n    /**\n     * @deprecated\n     * Breadcrumbs component now uses more advanced calculation mechanism without the need of specifying the container element.\n     *\n     * The element to act as the breadcrumb container. When provided, the breadcrumb's responsive collapsing behavior\n     * performs better. When not provided, the immediate parent element's width will be used.\n     */\n    set containerElement(_) {\n      if (isDevMode()) {\n        console.warn('Breadcrumbs component now uses more advanced calculation mechanism without the need of specifying the container element.');\n      }\n    }\n    /** @hidden */\n    constructor(elementRef, _onDestroy$, _rtlService, _cdr) {\n      this.elementRef = elementRef;\n      this._onDestroy$ = _onDestroy$;\n      this._rtlService = _rtlService;\n      this._cdr = _cdr;\n      /** Whether to append items to the overflow dropdown in reverse order. Default is true. */\n      this.reverse = false;\n      /** Tabindex of the breadcrumb. */\n      this.tabIndex = '0';\n      /**\n       * Event emitted when visible items count is changed.\n       */\n      this.visibleItemsCount = new EventEmitter();\n      /**\n       * Event emitted when hidden items count is changed.\n       */\n      this.hiddenItemsCount = new EventEmitter();\n      /**\n       * @hidden\n       * Array of breadcrumb items.\n       */\n      this._items = [];\n      /** @hidden */\n      this._placement$ = new BehaviorSubject('bottom-start');\n    }\n    /** @hidden */\n    ngOnInit() {\n      this._rtlService?.rtl.pipe(takeUntil(this._onDestroy$)).subscribe(value => this._placement$.next(value ? 'bottom-end' : 'bottom-start'));\n    }\n    /** @hidden */\n    onResize() {\n      this._overflowLayout.triggerRecalculation();\n    }\n    /**\n     * We catch interactions with item, Enter, Space, Mouse click and Touch click,\n     * if original element had router link we are proxying click to that element\n     * */\n    itemClicked(breadcrumbItem, $event) {\n      if (breadcrumbItem._needsClickProxy) {\n        $event.preventDefault();\n        breadcrumbItem.breadcrumbLink.elementRef().nativeElement.click();\n      }\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      this._setItems();\n      this._contentItems.changes.subscribe(() => this._setItems());\n    }\n    /** @hidden */\n    _keyDownHandle(event) {\n      this._menuComponent.toggle();\n      event.preventDefault();\n    }\n    /** @hidden */\n    _onHiddenChange(isHidden, breadcrumb) {\n      if (!isHidden) {\n        breadcrumb._detach();\n      } else {\n        breadcrumb._attach();\n      }\n    }\n    /** @hidden */\n    _onVisibleItemsCountChange(visibleItemsCount) {\n      this.visibleItemsCount.emit(visibleItemsCount);\n    }\n    /** @hidden */\n    _onHiddenItemsCountChange(hiddenItemsCount) {\n      this.hiddenItemsCount.emit(hiddenItemsCount);\n    }\n    /** @hidden */\n    _setItems() {\n      this._contentItems.forEach(item => item.setPortal());\n      this._items = this._contentItems.toArray();\n      this._cdr.detectChanges();\n    }\n  }\n  BreadcrumbComponent.ɵfac = function BreadcrumbComponent_Factory(t) {\n    return new (t || BreadcrumbComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.DestroyedService), i0.ɵɵdirectiveInject(i1.RtlService, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  BreadcrumbComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: BreadcrumbComponent,\n    selectors: [[\"fd-breadcrumb\"]],\n    contentQueries: function BreadcrumbComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, FD_BREADCRUMB_ITEM_COMPONENT, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentItems = _t);\n      }\n    },\n    viewQuery: function BreadcrumbComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MenuComponent, 5);\n        i0.ɵɵviewQuery(OverflowLayoutComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._menuComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._overflowLayout = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"tree\", 1, \"fd-breadcrumb\"],\n    inputs: {\n      containerElement: \"containerElement\",\n      reverse: \"reverse\",\n      tabIndex: \"tabIndex\"\n    },\n    outputs: {\n      visibleItemsCount: \"visibleItemsCount\",\n      hiddenItemsCount: \"hiddenItemsCount\"\n    },\n    features: [i0.ɵɵProvidersFeature([DestroyedService, {\n      provide: FD_BREADCRUMB_COMPONENT,\n      useExisting: BreadcrumbComponent\n    }])],\n    ngContentSelectors: _c0,\n    decls: 4,\n    vars: 4,\n    consts: [[\"showMorePosition\", \"left\", 3, \"reverseHiddenItems\", \"enableKeyboardNavigation\", \"visibleItemsCount\", \"hiddenItemsCount\"], [4, \"ngFor\", \"ngForOf\"], [4, \"fdOverflowExpand\", \"fdOverflowExpandItems\"], [\"fdOverflowLayoutItem\", \"\", 3, \"hiddenChange\", 4, \"fdOverflowItemRef\"], [\"fdOverflowLayoutItem\", \"\", 3, \"hiddenChange\"], [3, \"cdkPortalOutlet\"], [3, \"closeOnEscapeKey\", \"focusAutoCapture\", \"placement\"], [\"menu\", \"\"], [\"class\", \"fd-breadcrumb__item\", 3, \"fdMenuTrigger\", 4, \"ngIf\"], [\"fd-menu-item\", \"\", 3, \"disabled\"], [\"fd-menu-interactive\", \"\", 3, \"click\", \"keydown.enter\", \"keydown.space\"], [4, \"ngIf\", \"ngIfElse\"], [\"portalContent\", \"\"], [4, \"ngIf\"], [\"fd-menu-title\", \"\"], [\"position\", \"before\", 3, \"glyph\"], [3, \"glyph\"], [1, \"fd-breadcrumb__item\", 3, \"fdMenuTrigger\"], [\"fd-link\", \"\", \"aria-haspopup\", \"listbox\", \"tabindex\", \"0\", 1, \"fd-breadcrumb__collapsed\", 3, \"keydown.enter\", \"keydown.space\"], [\"glyph\", \"overflow\", 3, \"title\", \"ariaLabel\"], [\"glyph\", \"slim-arrow-down\"]],\n    template: function BreadcrumbComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"fd-overflow-layout\", 0);\n        i0.ɵɵlistener(\"visibleItemsCount\", function BreadcrumbComponent_Template_fd_overflow_layout_visibleItemsCount_0_listener($event) {\n          return ctx._onVisibleItemsCountChange($event);\n        })(\"hiddenItemsCount\", function BreadcrumbComponent_Template_fd_overflow_layout_hiddenItemsCount_0_listener($event) {\n          return ctx._onHiddenItemsCountChange($event);\n        });\n        i0.ɵɵtemplate(1, BreadcrumbComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n        i0.ɵɵtemplate(2, BreadcrumbComponent_ng_container_2_Template, 6, 7, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵprojection(3);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"reverseHiddenItems\", !ctx.reverse)(\"enableKeyboardNavigation\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx._items);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"fdOverflowExpandItems\", ctx._items);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.IconComponent, i4.MenuComponent, i4.MenuItemComponent, i4.MenuInteractiveDirective, i4.MenuTitleDirective, i4.MenuAddonDirective, i4.MenuTriggerDirective, i5.LinkComponent, i6.CdkPortalOutlet, i7.OverflowLayoutComponent, i7.OverflowItemRefDirective, i7.OverflowExpandDirective, i7.OverflowLayoutItemDirective, i2.AsyncPipe, i8.FdTranslatePipe],\n    styles: [\"/*!\\n * Fundamental Library Styles v0.28.3\\n * Copyright (c) 2023 SAP SE or an SAP affiliate company.\\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/main/LICENSE)\\n *//*!\\n.fd-breadcrumb\\n    .fd-breadcrumb__item\\n    .fd-breadcrump__link\\n*/.fd-breadcrumb{-webkit-box-sizing:border-box;-ms-flex-wrap:wrap;align-items:center;border:0;box-sizing:border-box;color:var(--sapTextColor);display:flex;flex-wrap:wrap;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);list-style:none;margin:0;padding:0}.fd-breadcrumb:after,.fd-breadcrumb:before{box-sizing:inherit;font-size:inherit}.fd-breadcrumb__item{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);color:var(--sapContent_LabelColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:0}.fd-breadcrumb__item:after,.fd-breadcrumb__item:before{box-sizing:inherit;font-size:inherit}.fd-breadcrumb__item:after{color:var(--sapContent_LabelColor);content:\\\"/\\\";margin-left:.25rem;margin-right:.25rem}.fd-breadcrumb__item:last-child:after{content:none}.fd-breadcrumb__item .fd-breadcrumb__popover-body{border:none;border-top-left-radius:.125rem;border-top-right-radius:.125rem}.fd-breadcrumb{display:flex;white-space:nowrap}.fd-breadcrumb .fd-breadcrumb__collapsed{cursor:pointer}.fd-breadcrumb .fd-overflow-layout{justify-content:start}.fd-breadcrumb .fd-breadcrumb__item:last-child:after{content:\\\"/\\\"}.fd-breadcrumb .fd-overflow-layout__item--last .fd-breadcrumb__item:after{content:none}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return BreadcrumbComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Breadcrumb item directive. Must have child breadcrumb link directives.\n *\n * ```html\n * <fd-breadcrumb-item>\n *     <a fd-link [routerLink]=\"'#'\">Breadcrumb Link</a>\n * </fd-breadcrumb-item>\n * ```\n */\nlet BreadcrumbItemComponent = /*#__PURE__*/(() => {\n  class BreadcrumbItemComponent {\n    /** @hidden */\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n      /** @hidden */\n      this._attached = false;\n    }\n    /** @hidden */\n    get _needsClickProxy() {\n      return !!this.breadcrumbLink?.elementRef().nativeElement.getAttribute('href') || !!this.breadcrumbLink.routerLink;\n    }\n    /** @hidden */\n    ngAfterViewInit() {\n      this._attach();\n    }\n    /**\n     * Sets breadcrumb item dom portal.\n     */\n    setPortal() {\n      if (!this.portal) {\n        this.portal = new DomPortal(this.elementRef);\n      }\n    }\n    /** @hidden */\n    _detach() {\n      if (!this._attached) {\n        return;\n      }\n      if (this.linkContentPortal?.isAttached) {\n        this.linkContentPortal?.detach();\n      }\n      if (this.breadcrumbItemPortal?.isAttached) {\n        this.breadcrumbItemPortal?.detach();\n      }\n      this._attached = false;\n    }\n    /** @hidden */\n    _attach() {\n      if (this._attached) {\n        return;\n      }\n      if (this.breadcrumbLink && this.breadcrumbLink.contentSpan) {\n        this.linkContentPortal = new DomPortal(this.breadcrumbLink.contentSpan.nativeElement);\n      }\n      this.breadcrumbItemPortal = new DomPortal(this.elementRef.nativeElement.firstElementChild);\n      this._attached = true;\n    }\n  }\n  BreadcrumbItemComponent.ɵfac = function BreadcrumbItemComponent_Factory(t) {\n    return new (t || BreadcrumbItemComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  BreadcrumbItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: BreadcrumbItemComponent,\n    selectors: [[\"fd-breadcrumb-item\"]],\n    contentQueries: function BreadcrumbItemComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, FD_LINK_COMPONENT, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.breadcrumbLink = _t.first);\n      }\n    },\n    hostAttrs: [1, \"fd-breadcrumb__item\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: FD_BREADCRUMB_ITEM_COMPONENT,\n      useExisting: BreadcrumbItemComponent\n    }])],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function BreadcrumbItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return BreadcrumbItemComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DeprecatedBreadcrumbsCompactDirective = /*#__PURE__*/(() => {\n  class DeprecatedBreadcrumbsCompactDirective extends DeprecatedCompactDirective {\n    /** @hidden */\n    constructor() {\n      super('fd-breadcrumb');\n    }\n  }\n  DeprecatedBreadcrumbsCompactDirective.ɵfac = function DeprecatedBreadcrumbsCompactDirective_Factory(t) {\n    return new (t || DeprecatedBreadcrumbsCompactDirective)();\n  };\n  DeprecatedBreadcrumbsCompactDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DeprecatedBreadcrumbsCompactDirective,\n    selectors: [[\"fd-breadcrumb\", \"compact\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CONTENT_DENSITY_DIRECTIVE,\n      useExisting: forwardRef(() => DeprecatedBreadcrumbsCompactDirective)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return DeprecatedBreadcrumbsCompactDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BreadcrumbModule = /*#__PURE__*/(() => {\n  class BreadcrumbModule {}\n  BreadcrumbModule.ɵfac = function BreadcrumbModule_Factory(t) {\n    return new (t || BreadcrumbModule)();\n  };\n  BreadcrumbModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BreadcrumbModule\n  });\n  BreadcrumbModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, IconModule, PopoverModule, MenuModule, LinkModule, PortalModule, PipeModule, ContentDensityModule, OverflowLayoutModule, ButtonModule, I18nModule, LinkModule, ContentDensityModule]\n  });\n  return BreadcrumbModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreadcrumbComponent, BreadcrumbItemComponent, BreadcrumbModule, DeprecatedBreadcrumbsCompactDirective, FD_BREADCRUMB_COMPONENT, FD_BREADCRUMB_ITEM_COMPONENT };\n//# sourceMappingURL=fundamental-ngx-core-breadcrumb.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}