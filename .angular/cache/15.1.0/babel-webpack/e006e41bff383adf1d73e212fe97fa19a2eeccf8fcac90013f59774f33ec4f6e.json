{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, HostBinding, Input, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Output, ContentChild, forwardRef, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport * as i2 from '@fundamental-ngx/cdk/utils';\nimport * as i1 from '@fundamental-ngx/core/content-density';\nimport { contentDensityObserverProviders, DeprecatedCompactDirective, CONTENT_DENSITY_DIRECTIVE, ContentDensityModule } from '@fundamental-ngx/core/content-density';\nimport * as i4 from '@fundamental-ngx/core/button';\nimport { ButtonModule } from '@fundamental-ngx/core/button';\nfunction PanelComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function PanelComponent_div_2_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleExpand());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-expanded\", ctx_r0.expanded);\n    i0.ɵɵproperty(\"glyph\", ctx_r0._getButtonIcon())(\"id\", ctx_r0.expandId)(\"ariaLabel\", ctx_r0.expandAriaLabel)(\"title\", ctx_r0.expandAriaLabel);\n    i0.ɵɵattribute(\"aria-expanded\", ctx_r0.expanded)(\"aria-controls\", ctx_r0.panelContent == null ? null : ctx_r0.panelContent.id)(\"aria-labelledby\", ctx_r0.expandAriaLabelledBy + \" \" + ctx_r0.expandId);\n  }\n}\nfunction PanelComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nconst _c0 = [[[\"\", \"fd-panel-title\", \"\"]], \"*\", [[\"\", \"fd-panel-content\", \"\"]]];\nconst _c1 = [\"[fd-panel-title]\", \"*\", \"[fd-panel-content]\"];\nlet panelContentUniqueId = 0;\n/**\n * Applies the panel content style to a div element.\n *\n * ```html\n * <div fd-panel-content>Panel Content</div>\n * ```\n */\nlet PanelContentDirective = /*#__PURE__*/(() => {\n  class PanelContentDirective {\n    constructor() {\n      /** @hidden */\n      this.fdPanelContentClass = true;\n      /** role attribute of the host element. */\n      this.role = 'region';\n      /** @hidden */\n      this._defaultId = 'fd-panel-content-' + panelContentUniqueId++;\n      /** @hidden */\n      this._id = this._defaultId;\n    }\n    /** Id of the host element. */\n    set id(value) {\n      this._id = value || this._defaultId;\n    }\n    get id() {\n      return this._id;\n    }\n  }\n  PanelContentDirective.ɵfac = function PanelContentDirective_Factory(t) {\n    return new (t || PanelContentDirective)();\n  };\n  PanelContentDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: PanelContentDirective,\n    selectors: [[\"\", \"fd-panel-content\", \"\"]],\n    hostVars: 12,\n    hostBindings: function PanelContentDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"role\", ctx.role)(\"id\", ctx.id);\n        i0.ɵɵstyleProp(\"height\", ctx.height)(\"min-height\", ctx.minHeight)(\"max-height\", ctx.maxHeight);\n        i0.ɵɵclassProp(\"fd-panel__content\", ctx.fdPanelContentClass);\n      }\n    },\n    inputs: {\n      height: \"height\",\n      minHeight: \"minHeight\",\n      maxHeight: \"maxHeight\",\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      role: \"role\",\n      id: \"id\"\n    }\n  });\n  return PanelContentDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet panelUniqueId = 0;\nlet panelExpandUniqueId = 0;\n/**\n * The panel is a container for grouping and displaying information\n * Types: Expandable (default) and Fixed\n * Modes: Tablet/Mobile (default) and Desktop (compact)\n */\nlet PanelComponent = /*#__PURE__*/(() => {\n  class PanelComponent {\n    /** @hidden */\n    constructor(_cdRef, _elementRef, _contentDensityObserver, _rtlService) {\n      this._cdRef = _cdRef;\n      this._elementRef = _elementRef;\n      this._contentDensityObserver = _contentDensityObserver;\n      this._rtlService = _rtlService;\n      /** Id of the panel element. */\n      this.id = 'fd-panel-' + panelUniqueId++;\n      /** Id of the expand button */\n      this.expandId = 'fd-panel-expand-' + panelExpandUniqueId++;\n      /** Whether the Panel Content is expanded */\n      this.expanded = false;\n      /** Output event triggered when the Expand button is clicked */\n      this.expandedChange = new EventEmitter();\n      /** @hidden */\n      this._rtl = false;\n      /** @hidden */\n      this._subscription = new Subscription();\n    }\n    /** @hidden */\n    ngOnInit() {\n      this._listenRtl();\n    }\n    /** @hidden */\n    ngOnDestroy() {\n      this._subscription.unsubscribe();\n    }\n    /** @hidden */\n    elementRef() {\n      return this._elementRef;\n    }\n    /** Methods that toggles the Panel Content */\n    toggleExpand() {\n      this.expanded = !this.expanded;\n      this.expandedChange.emit(this.expanded);\n    }\n    /** @hidden */\n    _getButtonIcon() {\n      return this.expanded ? 'slim-arrow-down' : this._rtl ? 'slim-arrow-left' : 'slim-arrow-right';\n    }\n    /** @hidden */\n    _listenRtl() {\n      if (this._rtlService) {\n        this._subscription.add(this._rtlService.rtl.subscribe(rtl => {\n          this._rtl = rtl;\n          this._cdRef.markForCheck();\n        }));\n      }\n    }\n  }\n  PanelComponent.ɵfac = function PanelComponent_Factory(t) {\n    return new (t || PanelComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ContentDensityObserver), i0.ɵɵdirectiveInject(i2.RtlService, 8));\n  };\n  PanelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: PanelComponent,\n    selectors: [[\"fd-panel\"]],\n    contentQueries: function PanelComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, PanelContentDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panelContent = _t.first);\n      }\n    },\n    hostVars: 1,\n    hostBindings: function PanelComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.id);\n      }\n    },\n    inputs: {\n      class: \"class\",\n      fixed: \"fixed\",\n      id: \"id\",\n      expandId: \"expandId\",\n      expandAriaLabel: \"expandAriaLabel\",\n      expandAriaLabelledBy: \"expandAriaLabelledBy\",\n      expanded: \"expanded\"\n    },\n    outputs: {\n      expandedChange: \"expandedChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([contentDensityObserverProviders()])],\n    ngContentSelectors: _c1,\n    decls: 6,\n    vars: 6,\n    consts: [[1, \"fd-panel\"], [1, \"fd-panel__header\"], [\"class\", \"fd-panel__expand\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"fd-panel__expand\"], [\"fd-button\", \"\", \"fdType\", \"transparent\", 1, \"fd-panel__button\", 3, \"glyph\", \"id\", \"ariaLabel\", \"title\", \"click\"]],\n    template: function PanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, PanelComponent_div_2_Template, 2, 9, \"div\", 2);\n        i0.ɵɵprojection(3);\n        i0.ɵɵprojection(4, 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, PanelComponent_ng_container_5_Template, 2, 0, \"ng-container\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.class);\n        i0.ɵɵclassProp(\"fd-panel--fixed\", ctx.fixed);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.fixed);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.expanded || ctx.fixed);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ButtonComponent],\n    styles: [\"/*!\\n * Fundamental Library Styles v0.28.3\\n * Copyright (c) 2023 SAP SE or an SAP affiliate company.\\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/main/LICENSE)\\n */.fd-panel{--fdPanel_Header_Height:2.75rem;border-radius:var(--fdPanel_Border_Radius);overflow:hidden}.fd-panel,.fd-panel__content,.fd-panel__expand,.fd-panel__header,.fd-panel__title{-webkit-box-sizing:border-box;border:0;box-sizing:border-box;color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;forced-color-adjust:none;line-height:var(--sapContent_LineHeight);margin:0;padding:0}.fd-panel:after,.fd-panel:before,.fd-panel__content:after,.fd-panel__content:before,.fd-panel__expand:after,.fd-panel__expand:before,.fd-panel__header:after,.fd-panel__header:before,.fd-panel__title:after,.fd-panel__title:before{box-sizing:inherit;font-size:inherit}.fd-panel:not(:last-child){margin-bottom:var(--fdPanel_Margin_Bottom)}.fd-panel__header{align-items:center;background-color:var(--sapGroup_TitleBackground);border-bottom:.0625rem solid var(--sapGroup_TitleBorderColor);display:flex;height:var(--fdPanel_Header_Height);min-height:var(--fdPanel_Header_Height);padding-right:.5rem}.fd-panel__title{-webkit-box-flex:1;-ms-flex:1;color:var(--sapGroup_TitleTextColor);flex:1;font-family:var(--sapFontHeaderFamily);font-size:var(--sapFontHeader4Size);font-size:var(--fdPanel_Title_Font_Size)}.fd-panel__content{background-color:var(--fdPanel_Content_Background_Color);border-bottom:.0625rem solid var(--fdPanel_Content_Border_Bottom_Color);overflow:auto;padding:.625rem 1rem 1.375rem;scrollbar-color:var(--fdScrollbar_Thumb_Color) var(--fdScrollbar_Track_Color)}.fd-panel__content.is-focus,.fd-panel__content:focus{outline:none;z-index:5}.fd-panel__content::-webkit-scrollbar{height:var(--fdScrollbar_Dimension);width:var(--fdScrollbar_Dimension)}.fd-panel__content::-webkit-scrollbar-corner,.fd-panel__content::-webkit-scrollbar-track{background-color:var(--fdScrollbar_Track_Color)}.fd-panel__content::-webkit-scrollbar-thumb{-webkit-box-shadow:inset 0 0 0 var(--fdScrollbar_Dimension) var(--fdScrollbar_Thumb_Color);background-color:transparent;border:var(--fdScrollbar_Thumb_Offset) solid transparent;border-radius:calc(var(--fdScrollbar_Thumb_Border_Radius) - var(--fdScrollbar_Thumb_Offset));box-shadow:inset 0 0 0 var(--fdScrollbar_Dimension) var(--fdScrollbar_Thumb_Color)}.fd-panel__content::-webkit-scrollbar-thumb:active,.fd-panel__content::-webkit-scrollbar-thumb:hover{box-shadow:inset 0 0 0 var(--fdScrollbar_Dimension) var(--fdScrollbar_Thumb_Hover_Color)}.fd-panel__content::-webkit-scrollbar-corner,.fd-panel__content::-webkit-scrollbar-track{border-radius:0 var(--fdScrollbar_Border_Radius) var(--fdScrollbar_Border_Radius) 0}.fd-panel__content[dir=rtl]::-webkit-scrollbar-corner,.fd-panel__content[dir=rtl]::-webkit-scrollbar-track,[dir=rtl] .fd-panel__content::-webkit-scrollbar-corner,[dir=rtl] .fd-panel__content::-webkit-scrollbar-track{border-radius:var(--fdScrollbar_Border_Radius) 0 0 var(--fdScrollbar_Border_Radius)}.fd-panel__content[aria-hidden=true]{display:none}.fd-panel__expand{-webkit-box-pack:center;-ms-flex-pack:center;align-items:center;display:flex;height:var(--fdPanel_Header_Height);justify-content:center;min-height:var(--fdPanel_Header_Height);width:2.75rem}.fd-panel__button{font-size:1rem}.fd-panel__button[dir=rtl] .sap-icon--slim-arrow-right,[dir=rtl] .fd-panel__button .sap-icon--slim-arrow-right{transform:rotate(180deg)}.fd-panel[dir=rtl] .fd-panel__header,[dir=rtl] .fd-panel .fd-panel__header{padding-left:.5rem;padding-right:0}.fd-panel--fixed .fd-panel__header{padding-left:1rem}.fd-panel--fixed .fd-panel__header[dir=rtl],[dir=rtl] .fd-panel--fixed .fd-panel__header{padding-left:.5rem;padding-right:1rem}.fd-panel[class*=-compact],.fd-panel[class*=-condensed],[class*=-compact] .fd-panel:not([class*=-cozy]),[class*=-condensed] .fd-panel:not([class*=-cozy]){--fdPanel_Header_Height:2.5rem}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return PanelComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet panelTitleUniqueId = 0;\n/**\n * Applies the panel title style to a header element. It can be used with any header level.\n *\n * ```html\n * <h5 fd-panel-title>Panel Title</h5>\n * ```\n */\nlet PanelTitleDirective = /*#__PURE__*/(() => {\n  class PanelTitleDirective {\n    constructor() {\n      /** @hidden */\n      this.fdPanelTitleClass = true;\n      /** Id of the host element. */\n      this.id = 'fd-panel-title-' + panelTitleUniqueId++;\n    }\n  }\n  PanelTitleDirective.ɵfac = function PanelTitleDirective_Factory(t) {\n    return new (t || PanelTitleDirective)();\n  };\n  PanelTitleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: PanelTitleDirective,\n    selectors: [[\"\", \"fd-panel-title\", \"\"]],\n    hostVars: 3,\n    hostBindings: function PanelTitleDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.id);\n        i0.ɵɵclassProp(\"fd-panel__title\", ctx.fdPanelTitleClass);\n      }\n    },\n    inputs: {\n      id: \"id\"\n    }\n  });\n  return PanelTitleDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DeprecatedPanelCompactDirective = /*#__PURE__*/(() => {\n  class DeprecatedPanelCompactDirective extends DeprecatedCompactDirective {\n    /** @hidden */\n    constructor() {\n      super('fd-panel');\n    }\n  }\n  DeprecatedPanelCompactDirective.ɵfac = function DeprecatedPanelCompactDirective_Factory(t) {\n    return new (t || DeprecatedPanelCompactDirective)();\n  };\n  DeprecatedPanelCompactDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DeprecatedPanelCompactDirective,\n    selectors: [[\"fd-panel\", \"compact\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CONTENT_DENSITY_DIRECTIVE,\n      useExisting: forwardRef(() => DeprecatedPanelCompactDirective)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return DeprecatedPanelCompactDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PanelModule = /*#__PURE__*/(() => {\n  class PanelModule {}\n  PanelModule.ɵfac = function PanelModule_Factory(t) {\n    return new (t || PanelModule)();\n  };\n  PanelModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: PanelModule\n  });\n  PanelModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, ButtonModule, ContentDensityModule, ContentDensityModule]\n  });\n  return PanelModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DeprecatedPanelCompactDirective, PanelComponent, PanelContentDirective, PanelModule, PanelTitleDirective };\n//# sourceMappingURL=fundamental-ngx-core-panel.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}