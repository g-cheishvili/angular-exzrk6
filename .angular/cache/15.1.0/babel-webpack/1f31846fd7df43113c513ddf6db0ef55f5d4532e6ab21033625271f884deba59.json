{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { isDevMode, InjectionToken, Injectable } from '@angular/core';\nconst popoverPlacementMap = {\n  'top-start': {\n    originX: 'start',\n    originY: 'top',\n    overlayX: 'start',\n    overlayY: 'bottom'\n  },\n  top: {\n    originX: 'center',\n    originY: 'top',\n    overlayX: 'center',\n    overlayY: 'bottom'\n  },\n  'top-end': {\n    originX: 'end',\n    originY: 'top',\n    overlayX: 'end',\n    overlayY: 'bottom'\n  },\n  'bottom-start': {\n    originX: 'start',\n    originY: 'bottom',\n    overlayX: 'start',\n    overlayY: 'top'\n  },\n  bottom: {\n    originX: 'center',\n    originY: 'bottom',\n    overlayX: 'center',\n    overlayY: 'top'\n  },\n  'bottom-end': {\n    originX: 'end',\n    originY: 'bottom',\n    overlayX: 'end',\n    overlayY: 'top'\n  },\n  'left-start': {\n    originX: 'start',\n    originY: 'top',\n    overlayX: 'end',\n    overlayY: 'top'\n  },\n  left: {\n    originX: 'start',\n    originY: 'center',\n    overlayX: 'end',\n    overlayY: 'center'\n  },\n  'left-end': {\n    originX: 'start',\n    originY: 'bottom',\n    overlayX: 'end',\n    overlayY: 'bottom'\n  },\n  'right-start': {\n    originX: 'end',\n    originY: 'top',\n    overlayX: 'start',\n    overlayY: 'top'\n  },\n  right: {\n    originX: 'end',\n    originY: 'center',\n    overlayX: 'start',\n    overlayY: 'center'\n  },\n  'right-end': {\n    originX: 'end',\n    originY: 'bottom',\n    overlayX: 'start',\n    overlayY: 'bottom'\n  }\n};\nconst DefaultPositions = [{\n  originX: 'start',\n  originY: 'bottom',\n  overlayX: 'start',\n  overlayY: 'top'\n}, {\n  originX: 'start',\n  originY: 'top',\n  overlayX: 'start',\n  overlayY: 'bottom'\n}, {\n  originX: 'center',\n  originY: 'bottom',\n  overlayX: 'center',\n  overlayY: 'top'\n}, {\n  originX: 'center',\n  originY: 'top',\n  overlayX: 'center',\n  overlayY: 'bottom'\n}, {\n  originX: 'end',\n  originY: 'bottom',\n  overlayX: 'end',\n  overlayY: 'top'\n}, {\n  originX: 'end',\n  originY: 'top',\n  overlayX: 'end',\n  overlayY: 'bottom'\n}];\nconst GetDefaultPosition = position => {\n  const resultPosition = [];\n  if (position && position[0]) {\n    const firstPosition = position[0];\n    resultPosition.push({\n      ...firstPosition,\n      originY: PopoverFlippedYDirection[firstPosition.originY],\n      overlayY: PopoverFlippedYDirection[firstPosition.overlayY]\n    });\n  }\n  return resultPosition.concat(DefaultPositions);\n};\nconst PopoverFlippedYDirection = {\n  bottom: 'top',\n  top: 'bottom',\n  center: 'center'\n};\nconst PopoverFlippedRtlPlacement = {\n  'left-start': 'right-start',\n  left: 'right',\n  'left-end': 'right-end',\n  'right-start': 'left-start',\n  right: 'left',\n  'right-end': 'left-end'\n};\nclass PopoverPosition {\n  /** Get the cdk placement of the popover */\n  static getCdkPlacement(placement, direction) {\n    const resultCdkPlacement = popoverPlacementMap[placement];\n    if (!resultCdkPlacement && isDevMode()) {\n      throw new Error('Invalid function argument. Check if \"placement\" is type of Placement Union');\n    }\n    if (direction === 'rtl') {\n      const startPlaceStr = placement.split('-')[0];\n      if (startPlaceStr === 'left' || startPlaceStr === 'right') {\n        return popoverPlacementMap[PopoverFlippedRtlPlacement[placement]];\n      }\n    }\n    return resultCdkPlacement;\n  }\n}\nconst DYNAMIC_PAGE_HEADER_TOKEN = new InjectionToken('DynamicPageHeader');\n\n/**\n *\n * This service holds default\n * value state aria messages\n * that are needed for accessibility purposes.\n *\n * It's intendant to be used with form controls\n * which supports different value states\n *\n */\nlet ValueStateAriaMessageService = /*#__PURE__*/(() => {\n  class ValueStateAriaMessageService {\n    constructor() {\n      /** Value state \"success\" message */\n      this.success = 'Value State Success';\n      /** Value state \"information\" message */\n      this.information = 'Value State Information';\n      /** Value state \"warning\" message */\n      this.warning = 'Value State Warning';\n      /** Value state \"error\" message */\n      this.error = 'Value State Error';\n    }\n  }\n  ValueStateAriaMessageService.ɵfac = function ValueStateAriaMessageService_Factory(t) {\n    return new (t || ValueStateAriaMessageService)();\n  };\n  ValueStateAriaMessageService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ValueStateAriaMessageService,\n    factory: ValueStateAriaMessageService.ɵfac,\n    providedIn: 'root'\n  });\n  return ValueStateAriaMessageService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\n * Public API Surface of shared\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DYNAMIC_PAGE_HEADER_TOKEN, DefaultPositions, GetDefaultPosition, PopoverFlippedRtlPlacement, PopoverFlippedYDirection, PopoverPosition, ValueStateAriaMessageService };\n//# sourceMappingURL=fundamental-ngx-core-shared.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}